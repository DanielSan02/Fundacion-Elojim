
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Users
 * 
 */
export type Users = $Result.DefaultSelection<Prisma.$UsersPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model Post
 * 
 */
export type Post = $Result.DefaultSelection<Prisma.$PostPayload>
/**
 * Model RegistroMujerVulnerable
 * 
 */
export type RegistroMujerVulnerable = $Result.DefaultSelection<Prisma.$RegistroMujerVulnerablePayload>
/**
 * Model RegistroSemilleroInnovacion
 * 
 */
export type RegistroSemilleroInnovacion = $Result.DefaultSelection<Prisma.$RegistroSemilleroInnovacionPayload>
/**
 * Model RegistroTallerSteam
 * 
 */
export type RegistroTallerSteam = $Result.DefaultSelection<Prisma.$RegistroTallerSteamPayload>
/**
 * Model RegistroSeguridadAlimentaria
 * 
 */
export type RegistroSeguridadAlimentaria = $Result.DefaultSelection<Prisma.$RegistroSeguridadAlimentariaPayload>
/**
 * Model RegistroRefuerzoEscolar
 * 
 */
export type RegistroRefuerzoEscolar = $Result.DefaultSelection<Prisma.$RegistroRefuerzoEscolarPayload>
/**
 * Model RegistroSoftwareFactory
 * 
 */
export type RegistroSoftwareFactory = $Result.DefaultSelection<Prisma.$RegistroSoftwareFactoryPayload>
/**
 * Model RegistroVoluntariado
 * 
 */
export type RegistroVoluntariado = $Result.DefaultSelection<Prisma.$RegistroVoluntariadoPayload>
/**
 * Model RegistroCultural
 * 
 */
export type RegistroCultural = $Result.DefaultSelection<Prisma.$RegistroCulturalPayload>
/**
 * Model RegistroEconomiaPlateada
 * 
 */
export type RegistroEconomiaPlateada = $Result.DefaultSelection<Prisma.$RegistroEconomiaPlateadaPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const TipoVinculacion: {
  INSTITUCION_EDUCATIVA: 'INSTITUCION_EDUCATIVA',
  COMUNIDAD: 'COMUNIDAD'
};

export type TipoVinculacion = (typeof TipoVinculacion)[keyof typeof TipoVinculacion]


export const NivelEducativo: {
  Primaria: 'Primaria',
  Secundaria: 'Secundaria',
  Tecnica_Tecnologica: 'Tecnica_Tecnologica',
  Universitaria: 'Universitaria',
  Especializacion: 'Especializacion',
  Maestria: 'Maestria',
  Doctorado: 'Doctorado',
  Ninguno: 'Ninguno'
};

export type NivelEducativo = (typeof NivelEducativo)[keyof typeof NivelEducativo]


export const EstratoSocial: {
  E1: 'E1',
  E2: 'E2',
  E3: 'E3',
  E4: 'E4',
  E5: 'E5',
  E6: 'E6'
};

export type EstratoSocial = (typeof EstratoSocial)[keyof typeof EstratoSocial]


export const GrupoEtnico: {
  Ninguno: 'Ninguno',
  Afrodescendiente: 'Afrodescendiente',
  Indigena: 'Indigena',
  Raizal: 'Raizal',
  Rom_Gitano: 'Rom_Gitano',
  Palenquero: 'Palenquero',
  Otro: 'Otro'
};

export type GrupoEtnico = (typeof GrupoEtnico)[keyof typeof GrupoEtnico]


export const TipoDocumento: {
  CC: 'CC',
  TI: 'TI',
  CE: 'CE',
  Pasaporte: 'Pasaporte'
};

export type TipoDocumento = (typeof TipoDocumento)[keyof typeof TipoDocumento]


export const AreaApoyo: {
  CAPACITACION_Y_EMPLEO: 'CAPACITACION_Y_EMPLEO',
  EMPRENDIMIENTO: 'EMPRENDIMIENTO',
  EDUCACION: 'EDUCACION',
  SALUD_Y_BIENESTAR: 'SALUD_Y_BIENESTAR',
  APOYO_PSICOLOGICO_Y_SOCIAL: 'APOYO_PSICOLOGICO_Y_SOCIAL',
  VIVIENDA_Y_SUBSIDIOS: 'VIVIENDA_Y_SUBSIDIOS',
  OTRAS: 'OTRAS'
};

export type AreaApoyo = (typeof AreaApoyo)[keyof typeof AreaApoyo]


export const TipoDisponibilidad: {
  TIEMPO_COMPLETO: 'TIEMPO_COMPLETO',
  TIEMPO_PARCIAL: 'TIEMPO_PARCIAL',
  FINES_DE_SEMANA: 'FINES_DE_SEMANA',
  DIAS_ESPECIFICOS: 'DIAS_ESPECIFICOS'
};

export type TipoDisponibilidad = (typeof TipoDisponibilidad)[keyof typeof TipoDisponibilidad]


export const AreaInteresCultural: {
  Musica: 'Musica',
  Danza: 'Danza',
  Manualidades: 'Manualidades',
  Maquillaje: 'Maquillaje',
  Dibujo: 'Dibujo',
  Otro: 'Otro'
};

export type AreaInteresCultural = (typeof AreaInteresCultural)[keyof typeof AreaInteresCultural]


export const Genero: {
  FEMENINO: 'FEMENINO',
  MASCULINO: 'MASCULINO'
};

export type Genero = (typeof Genero)[keyof typeof Genero]

}

export type TipoVinculacion = $Enums.TipoVinculacion

export const TipoVinculacion: typeof $Enums.TipoVinculacion

export type NivelEducativo = $Enums.NivelEducativo

export const NivelEducativo: typeof $Enums.NivelEducativo

export type EstratoSocial = $Enums.EstratoSocial

export const EstratoSocial: typeof $Enums.EstratoSocial

export type GrupoEtnico = $Enums.GrupoEtnico

export const GrupoEtnico: typeof $Enums.GrupoEtnico

export type TipoDocumento = $Enums.TipoDocumento

export const TipoDocumento: typeof $Enums.TipoDocumento

export type AreaApoyo = $Enums.AreaApoyo

export const AreaApoyo: typeof $Enums.AreaApoyo

export type TipoDisponibilidad = $Enums.TipoDisponibilidad

export const TipoDisponibilidad: typeof $Enums.TipoDisponibilidad

export type AreaInteresCultural = $Enums.AreaInteresCultural

export const AreaInteresCultural: typeof $Enums.AreaInteresCultural

export type Genero = $Enums.Genero

export const Genero: typeof $Enums.Genero

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.users.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.users.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.users`: Exposes CRUD operations for the **Users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.UsersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post`: Exposes CRUD operations for the **Post** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts
    * const posts = await prisma.post.findMany()
    * ```
    */
  get post(): Prisma.PostDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registroMujerVulnerable`: Exposes CRUD operations for the **RegistroMujerVulnerable** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroMujerVulnerables
    * const registroMujerVulnerables = await prisma.registroMujerVulnerable.findMany()
    * ```
    */
  get registroMujerVulnerable(): Prisma.RegistroMujerVulnerableDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registroSemilleroInnovacion`: Exposes CRUD operations for the **RegistroSemilleroInnovacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroSemilleroInnovacions
    * const registroSemilleroInnovacions = await prisma.registroSemilleroInnovacion.findMany()
    * ```
    */
  get registroSemilleroInnovacion(): Prisma.RegistroSemilleroInnovacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registroTallerSteam`: Exposes CRUD operations for the **RegistroTallerSteam** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroTallerSteams
    * const registroTallerSteams = await prisma.registroTallerSteam.findMany()
    * ```
    */
  get registroTallerSteam(): Prisma.RegistroTallerSteamDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registroSeguridadAlimentaria`: Exposes CRUD operations for the **RegistroSeguridadAlimentaria** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroSeguridadAlimentarias
    * const registroSeguridadAlimentarias = await prisma.registroSeguridadAlimentaria.findMany()
    * ```
    */
  get registroSeguridadAlimentaria(): Prisma.RegistroSeguridadAlimentariaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registroRefuerzoEscolar`: Exposes CRUD operations for the **RegistroRefuerzoEscolar** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroRefuerzoEscolars
    * const registroRefuerzoEscolars = await prisma.registroRefuerzoEscolar.findMany()
    * ```
    */
  get registroRefuerzoEscolar(): Prisma.RegistroRefuerzoEscolarDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registroSoftwareFactory`: Exposes CRUD operations for the **RegistroSoftwareFactory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroSoftwareFactories
    * const registroSoftwareFactories = await prisma.registroSoftwareFactory.findMany()
    * ```
    */
  get registroSoftwareFactory(): Prisma.RegistroSoftwareFactoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registroVoluntariado`: Exposes CRUD operations for the **RegistroVoluntariado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroVoluntariados
    * const registroVoluntariados = await prisma.registroVoluntariado.findMany()
    * ```
    */
  get registroVoluntariado(): Prisma.RegistroVoluntariadoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registroCultural`: Exposes CRUD operations for the **RegistroCultural** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroCulturals
    * const registroCulturals = await prisma.registroCultural.findMany()
    * ```
    */
  get registroCultural(): Prisma.RegistroCulturalDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registroEconomiaPlateada`: Exposes CRUD operations for the **RegistroEconomiaPlateada** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroEconomiaPlateadas
    * const registroEconomiaPlateadas = await prisma.registroEconomiaPlateada.findMany()
    * ```
    */
  get registroEconomiaPlateada(): Prisma.RegistroEconomiaPlateadaDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Users: 'Users',
    Role: 'Role',
    Post: 'Post',
    RegistroMujerVulnerable: 'RegistroMujerVulnerable',
    RegistroSemilleroInnovacion: 'RegistroSemilleroInnovacion',
    RegistroTallerSteam: 'RegistroTallerSteam',
    RegistroSeguridadAlimentaria: 'RegistroSeguridadAlimentaria',
    RegistroRefuerzoEscolar: 'RegistroRefuerzoEscolar',
    RegistroSoftwareFactory: 'RegistroSoftwareFactory',
    RegistroVoluntariado: 'RegistroVoluntariado',
    RegistroCultural: 'RegistroCultural',
    RegistroEconomiaPlateada: 'RegistroEconomiaPlateada'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "users" | "role" | "post" | "registroMujerVulnerable" | "registroSemilleroInnovacion" | "registroTallerSteam" | "registroSeguridadAlimentaria" | "registroRefuerzoEscolar" | "registroSoftwareFactory" | "registroVoluntariado" | "registroCultural" | "registroEconomiaPlateada"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Users: {
        payload: Prisma.$UsersPayload<ExtArgs>
        fields: Prisma.UsersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findFirst: {
            args: Prisma.UsersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findMany: {
            args: Prisma.UsersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          create: {
            args: Prisma.UsersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          createMany: {
            args: Prisma.UsersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          delete: {
            args: Prisma.UsersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          update: {
            args: Prisma.UsersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          deleteMany: {
            args: Prisma.UsersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          upsert: {
            args: Prisma.UsersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.UsersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      Post: {
        payload: Prisma.$PostPayload<ExtArgs>
        fields: Prisma.PostFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PostFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PostFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          findFirst: {
            args: Prisma.PostFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PostFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          findMany: {
            args: Prisma.PostFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          create: {
            args: Prisma.PostCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          createMany: {
            args: Prisma.PostCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PostCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          delete: {
            args: Prisma.PostDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          update: {
            args: Prisma.PostUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          deleteMany: {
            args: Prisma.PostDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PostUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PostUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          upsert: {
            args: Prisma.PostUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          aggregate: {
            args: Prisma.PostAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost>
          }
          groupBy: {
            args: Prisma.PostGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostGroupByOutputType>[]
          }
          count: {
            args: Prisma.PostCountArgs<ExtArgs>
            result: $Utils.Optional<PostCountAggregateOutputType> | number
          }
        }
      }
      RegistroMujerVulnerable: {
        payload: Prisma.$RegistroMujerVulnerablePayload<ExtArgs>
        fields: Prisma.RegistroMujerVulnerableFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroMujerVulnerableFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroMujerVulnerablePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroMujerVulnerableFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroMujerVulnerablePayload>
          }
          findFirst: {
            args: Prisma.RegistroMujerVulnerableFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroMujerVulnerablePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroMujerVulnerableFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroMujerVulnerablePayload>
          }
          findMany: {
            args: Prisma.RegistroMujerVulnerableFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroMujerVulnerablePayload>[]
          }
          create: {
            args: Prisma.RegistroMujerVulnerableCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroMujerVulnerablePayload>
          }
          createMany: {
            args: Prisma.RegistroMujerVulnerableCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroMujerVulnerableCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroMujerVulnerablePayload>[]
          }
          delete: {
            args: Prisma.RegistroMujerVulnerableDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroMujerVulnerablePayload>
          }
          update: {
            args: Prisma.RegistroMujerVulnerableUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroMujerVulnerablePayload>
          }
          deleteMany: {
            args: Prisma.RegistroMujerVulnerableDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroMujerVulnerableUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegistroMujerVulnerableUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroMujerVulnerablePayload>[]
          }
          upsert: {
            args: Prisma.RegistroMujerVulnerableUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroMujerVulnerablePayload>
          }
          aggregate: {
            args: Prisma.RegistroMujerVulnerableAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroMujerVulnerable>
          }
          groupBy: {
            args: Prisma.RegistroMujerVulnerableGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroMujerVulnerableGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroMujerVulnerableCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroMujerVulnerableCountAggregateOutputType> | number
          }
        }
      }
      RegistroSemilleroInnovacion: {
        payload: Prisma.$RegistroSemilleroInnovacionPayload<ExtArgs>
        fields: Prisma.RegistroSemilleroInnovacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroSemilleroInnovacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSemilleroInnovacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroSemilleroInnovacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSemilleroInnovacionPayload>
          }
          findFirst: {
            args: Prisma.RegistroSemilleroInnovacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSemilleroInnovacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroSemilleroInnovacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSemilleroInnovacionPayload>
          }
          findMany: {
            args: Prisma.RegistroSemilleroInnovacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSemilleroInnovacionPayload>[]
          }
          create: {
            args: Prisma.RegistroSemilleroInnovacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSemilleroInnovacionPayload>
          }
          createMany: {
            args: Prisma.RegistroSemilleroInnovacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroSemilleroInnovacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSemilleroInnovacionPayload>[]
          }
          delete: {
            args: Prisma.RegistroSemilleroInnovacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSemilleroInnovacionPayload>
          }
          update: {
            args: Prisma.RegistroSemilleroInnovacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSemilleroInnovacionPayload>
          }
          deleteMany: {
            args: Prisma.RegistroSemilleroInnovacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroSemilleroInnovacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegistroSemilleroInnovacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSemilleroInnovacionPayload>[]
          }
          upsert: {
            args: Prisma.RegistroSemilleroInnovacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSemilleroInnovacionPayload>
          }
          aggregate: {
            args: Prisma.RegistroSemilleroInnovacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroSemilleroInnovacion>
          }
          groupBy: {
            args: Prisma.RegistroSemilleroInnovacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroSemilleroInnovacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroSemilleroInnovacionCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroSemilleroInnovacionCountAggregateOutputType> | number
          }
        }
      }
      RegistroTallerSteam: {
        payload: Prisma.$RegistroTallerSteamPayload<ExtArgs>
        fields: Prisma.RegistroTallerSteamFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroTallerSteamFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroTallerSteamPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroTallerSteamFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroTallerSteamPayload>
          }
          findFirst: {
            args: Prisma.RegistroTallerSteamFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroTallerSteamPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroTallerSteamFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroTallerSteamPayload>
          }
          findMany: {
            args: Prisma.RegistroTallerSteamFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroTallerSteamPayload>[]
          }
          create: {
            args: Prisma.RegistroTallerSteamCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroTallerSteamPayload>
          }
          createMany: {
            args: Prisma.RegistroTallerSteamCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroTallerSteamCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroTallerSteamPayload>[]
          }
          delete: {
            args: Prisma.RegistroTallerSteamDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroTallerSteamPayload>
          }
          update: {
            args: Prisma.RegistroTallerSteamUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroTallerSteamPayload>
          }
          deleteMany: {
            args: Prisma.RegistroTallerSteamDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroTallerSteamUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegistroTallerSteamUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroTallerSteamPayload>[]
          }
          upsert: {
            args: Prisma.RegistroTallerSteamUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroTallerSteamPayload>
          }
          aggregate: {
            args: Prisma.RegistroTallerSteamAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroTallerSteam>
          }
          groupBy: {
            args: Prisma.RegistroTallerSteamGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroTallerSteamGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroTallerSteamCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroTallerSteamCountAggregateOutputType> | number
          }
        }
      }
      RegistroSeguridadAlimentaria: {
        payload: Prisma.$RegistroSeguridadAlimentariaPayload<ExtArgs>
        fields: Prisma.RegistroSeguridadAlimentariaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroSeguridadAlimentariaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSeguridadAlimentariaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroSeguridadAlimentariaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSeguridadAlimentariaPayload>
          }
          findFirst: {
            args: Prisma.RegistroSeguridadAlimentariaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSeguridadAlimentariaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroSeguridadAlimentariaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSeguridadAlimentariaPayload>
          }
          findMany: {
            args: Prisma.RegistroSeguridadAlimentariaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSeguridadAlimentariaPayload>[]
          }
          create: {
            args: Prisma.RegistroSeguridadAlimentariaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSeguridadAlimentariaPayload>
          }
          createMany: {
            args: Prisma.RegistroSeguridadAlimentariaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroSeguridadAlimentariaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSeguridadAlimentariaPayload>[]
          }
          delete: {
            args: Prisma.RegistroSeguridadAlimentariaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSeguridadAlimentariaPayload>
          }
          update: {
            args: Prisma.RegistroSeguridadAlimentariaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSeguridadAlimentariaPayload>
          }
          deleteMany: {
            args: Prisma.RegistroSeguridadAlimentariaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroSeguridadAlimentariaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegistroSeguridadAlimentariaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSeguridadAlimentariaPayload>[]
          }
          upsert: {
            args: Prisma.RegistroSeguridadAlimentariaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSeguridadAlimentariaPayload>
          }
          aggregate: {
            args: Prisma.RegistroSeguridadAlimentariaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroSeguridadAlimentaria>
          }
          groupBy: {
            args: Prisma.RegistroSeguridadAlimentariaGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroSeguridadAlimentariaGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroSeguridadAlimentariaCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroSeguridadAlimentariaCountAggregateOutputType> | number
          }
        }
      }
      RegistroRefuerzoEscolar: {
        payload: Prisma.$RegistroRefuerzoEscolarPayload<ExtArgs>
        fields: Prisma.RegistroRefuerzoEscolarFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroRefuerzoEscolarFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroRefuerzoEscolarPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroRefuerzoEscolarFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroRefuerzoEscolarPayload>
          }
          findFirst: {
            args: Prisma.RegistroRefuerzoEscolarFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroRefuerzoEscolarPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroRefuerzoEscolarFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroRefuerzoEscolarPayload>
          }
          findMany: {
            args: Prisma.RegistroRefuerzoEscolarFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroRefuerzoEscolarPayload>[]
          }
          create: {
            args: Prisma.RegistroRefuerzoEscolarCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroRefuerzoEscolarPayload>
          }
          createMany: {
            args: Prisma.RegistroRefuerzoEscolarCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroRefuerzoEscolarCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroRefuerzoEscolarPayload>[]
          }
          delete: {
            args: Prisma.RegistroRefuerzoEscolarDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroRefuerzoEscolarPayload>
          }
          update: {
            args: Prisma.RegistroRefuerzoEscolarUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroRefuerzoEscolarPayload>
          }
          deleteMany: {
            args: Prisma.RegistroRefuerzoEscolarDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroRefuerzoEscolarUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegistroRefuerzoEscolarUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroRefuerzoEscolarPayload>[]
          }
          upsert: {
            args: Prisma.RegistroRefuerzoEscolarUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroRefuerzoEscolarPayload>
          }
          aggregate: {
            args: Prisma.RegistroRefuerzoEscolarAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroRefuerzoEscolar>
          }
          groupBy: {
            args: Prisma.RegistroRefuerzoEscolarGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroRefuerzoEscolarGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroRefuerzoEscolarCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroRefuerzoEscolarCountAggregateOutputType> | number
          }
        }
      }
      RegistroSoftwareFactory: {
        payload: Prisma.$RegistroSoftwareFactoryPayload<ExtArgs>
        fields: Prisma.RegistroSoftwareFactoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroSoftwareFactoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSoftwareFactoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroSoftwareFactoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSoftwareFactoryPayload>
          }
          findFirst: {
            args: Prisma.RegistroSoftwareFactoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSoftwareFactoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroSoftwareFactoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSoftwareFactoryPayload>
          }
          findMany: {
            args: Prisma.RegistroSoftwareFactoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSoftwareFactoryPayload>[]
          }
          create: {
            args: Prisma.RegistroSoftwareFactoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSoftwareFactoryPayload>
          }
          createMany: {
            args: Prisma.RegistroSoftwareFactoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroSoftwareFactoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSoftwareFactoryPayload>[]
          }
          delete: {
            args: Prisma.RegistroSoftwareFactoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSoftwareFactoryPayload>
          }
          update: {
            args: Prisma.RegistroSoftwareFactoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSoftwareFactoryPayload>
          }
          deleteMany: {
            args: Prisma.RegistroSoftwareFactoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroSoftwareFactoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegistroSoftwareFactoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSoftwareFactoryPayload>[]
          }
          upsert: {
            args: Prisma.RegistroSoftwareFactoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroSoftwareFactoryPayload>
          }
          aggregate: {
            args: Prisma.RegistroSoftwareFactoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroSoftwareFactory>
          }
          groupBy: {
            args: Prisma.RegistroSoftwareFactoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroSoftwareFactoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroSoftwareFactoryCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroSoftwareFactoryCountAggregateOutputType> | number
          }
        }
      }
      RegistroVoluntariado: {
        payload: Prisma.$RegistroVoluntariadoPayload<ExtArgs>
        fields: Prisma.RegistroVoluntariadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroVoluntariadoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroVoluntariadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroVoluntariadoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroVoluntariadoPayload>
          }
          findFirst: {
            args: Prisma.RegistroVoluntariadoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroVoluntariadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroVoluntariadoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroVoluntariadoPayload>
          }
          findMany: {
            args: Prisma.RegistroVoluntariadoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroVoluntariadoPayload>[]
          }
          create: {
            args: Prisma.RegistroVoluntariadoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroVoluntariadoPayload>
          }
          createMany: {
            args: Prisma.RegistroVoluntariadoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroVoluntariadoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroVoluntariadoPayload>[]
          }
          delete: {
            args: Prisma.RegistroVoluntariadoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroVoluntariadoPayload>
          }
          update: {
            args: Prisma.RegistroVoluntariadoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroVoluntariadoPayload>
          }
          deleteMany: {
            args: Prisma.RegistroVoluntariadoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroVoluntariadoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegistroVoluntariadoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroVoluntariadoPayload>[]
          }
          upsert: {
            args: Prisma.RegistroVoluntariadoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroVoluntariadoPayload>
          }
          aggregate: {
            args: Prisma.RegistroVoluntariadoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroVoluntariado>
          }
          groupBy: {
            args: Prisma.RegistroVoluntariadoGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroVoluntariadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroVoluntariadoCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroVoluntariadoCountAggregateOutputType> | number
          }
        }
      }
      RegistroCultural: {
        payload: Prisma.$RegistroCulturalPayload<ExtArgs>
        fields: Prisma.RegistroCulturalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroCulturalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCulturalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroCulturalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCulturalPayload>
          }
          findFirst: {
            args: Prisma.RegistroCulturalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCulturalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroCulturalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCulturalPayload>
          }
          findMany: {
            args: Prisma.RegistroCulturalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCulturalPayload>[]
          }
          create: {
            args: Prisma.RegistroCulturalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCulturalPayload>
          }
          createMany: {
            args: Prisma.RegistroCulturalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroCulturalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCulturalPayload>[]
          }
          delete: {
            args: Prisma.RegistroCulturalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCulturalPayload>
          }
          update: {
            args: Prisma.RegistroCulturalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCulturalPayload>
          }
          deleteMany: {
            args: Prisma.RegistroCulturalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroCulturalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegistroCulturalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCulturalPayload>[]
          }
          upsert: {
            args: Prisma.RegistroCulturalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCulturalPayload>
          }
          aggregate: {
            args: Prisma.RegistroCulturalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroCultural>
          }
          groupBy: {
            args: Prisma.RegistroCulturalGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroCulturalGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroCulturalCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroCulturalCountAggregateOutputType> | number
          }
        }
      }
      RegistroEconomiaPlateada: {
        payload: Prisma.$RegistroEconomiaPlateadaPayload<ExtArgs>
        fields: Prisma.RegistroEconomiaPlateadaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroEconomiaPlateadaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroEconomiaPlateadaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroEconomiaPlateadaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroEconomiaPlateadaPayload>
          }
          findFirst: {
            args: Prisma.RegistroEconomiaPlateadaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroEconomiaPlateadaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroEconomiaPlateadaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroEconomiaPlateadaPayload>
          }
          findMany: {
            args: Prisma.RegistroEconomiaPlateadaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroEconomiaPlateadaPayload>[]
          }
          create: {
            args: Prisma.RegistroEconomiaPlateadaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroEconomiaPlateadaPayload>
          }
          createMany: {
            args: Prisma.RegistroEconomiaPlateadaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroEconomiaPlateadaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroEconomiaPlateadaPayload>[]
          }
          delete: {
            args: Prisma.RegistroEconomiaPlateadaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroEconomiaPlateadaPayload>
          }
          update: {
            args: Prisma.RegistroEconomiaPlateadaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroEconomiaPlateadaPayload>
          }
          deleteMany: {
            args: Prisma.RegistroEconomiaPlateadaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroEconomiaPlateadaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegistroEconomiaPlateadaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroEconomiaPlateadaPayload>[]
          }
          upsert: {
            args: Prisma.RegistroEconomiaPlateadaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroEconomiaPlateadaPayload>
          }
          aggregate: {
            args: Prisma.RegistroEconomiaPlateadaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroEconomiaPlateada>
          }
          groupBy: {
            args: Prisma.RegistroEconomiaPlateadaGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroEconomiaPlateadaGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroEconomiaPlateadaCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroEconomiaPlateadaCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    users?: UsersOmit
    role?: RoleOmit
    post?: PostOmit
    registroMujerVulnerable?: RegistroMujerVulnerableOmit
    registroSemilleroInnovacion?: RegistroSemilleroInnovacionOmit
    registroTallerSteam?: RegistroTallerSteamOmit
    registroSeguridadAlimentaria?: RegistroSeguridadAlimentariaOmit
    registroRefuerzoEscolar?: RegistroRefuerzoEscolarOmit
    registroSoftwareFactory?: RegistroSoftwareFactoryOmit
    registroVoluntariado?: RegistroVoluntariadoOmit
    registroCultural?: RegistroCulturalOmit
    registroEconomiaPlateada?: RegistroEconomiaPlateadaOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    posts: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | UsersCountOutputTypeCountPostsArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    users: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | RoleCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsersWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
    rolId: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
    rolId: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    name: string | null
    lastName: string | null
    email: string | null
    password: string | null
    rolId: number | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    name: string | null
    lastName: string | null
    email: string | null
    password: string | null
    rolId: number | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    name: number
    lastName: number
    email: number
    password: number
    rolId: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
    rolId?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
    rolId?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    name?: true
    lastName?: true
    email?: true
    password?: true
    rolId?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    name?: true
    lastName?: true
    email?: true
    password?: true
    rolId?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    name?: true
    lastName?: true
    email?: true
    password?: true
    rolId?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to aggregate.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsersWhereInput
    orderBy?: UsersOrderByWithAggregationInput | UsersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: UsersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: number
    name: string
    lastName: string
    email: string
    password: string
    rolId: number
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type UsersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    lastName?: boolean
    email?: boolean
    password?: boolean
    rolId?: boolean
    posts?: boolean | Users$postsArgs<ExtArgs>
    role?: boolean | RoleDefaultArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type UsersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    lastName?: boolean
    email?: boolean
    password?: boolean
    rolId?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type UsersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    lastName?: boolean
    email?: boolean
    password?: boolean
    rolId?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type UsersSelectScalar = {
    id?: boolean
    name?: boolean
    lastName?: boolean
    email?: boolean
    password?: boolean
    rolId?: boolean
  }

  export type UsersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "lastName" | "email" | "password" | "rolId", ExtArgs["result"]["users"]>
  export type UsersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | Users$postsArgs<ExtArgs>
    role?: boolean | RoleDefaultArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }
  export type UsersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }

  export type $UsersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Users"
    objects: {
      posts: Prisma.$PostPayload<ExtArgs>[]
      role: Prisma.$RolePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      lastName: string
      email: string
      password: string
      rolId: number
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type UsersGetPayload<S extends boolean | null | undefined | UsersDefaultArgs> = $Result.GetResult<Prisma.$UsersPayload, S>

  type UsersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface UsersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Users'], meta: { name: 'Users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {UsersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsersFindUniqueArgs>(args: SelectSubset<T, UsersFindUniqueArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsersFindUniqueOrThrowArgs>(args: SelectSubset<T, UsersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsersFindFirstArgs>(args?: SelectSubset<T, UsersFindFirstArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsersFindFirstOrThrowArgs>(args?: SelectSubset<T, UsersFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsersFindManyArgs>(args?: SelectSubset<T, UsersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {UsersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends UsersCreateArgs>(args: SelectSubset<T, UsersCreateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UsersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsersCreateManyArgs>(args?: SelectSubset<T, UsersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UsersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsersCreateManyAndReturnArgs>(args?: SelectSubset<T, UsersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {UsersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends UsersDeleteArgs>(args: SelectSubset<T, UsersDeleteArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {UsersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsersUpdateArgs>(args: SelectSubset<T, UsersUpdateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UsersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsersDeleteManyArgs>(args?: SelectSubset<T, UsersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsersUpdateManyArgs>(args: SelectSubset<T, UsersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UsersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsersUpdateManyAndReturnArgs>(args: SelectSubset<T, UsersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {UsersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends UsersUpsertArgs>(args: SelectSubset<T, UsersUpsertArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UsersCountArgs>(
      args?: Subset<T, UsersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Users model
   */
  readonly fields: UsersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    posts<T extends Users$postsArgs<ExtArgs> = {}>(args?: Subset<T, Users$postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Users model
   */
  interface UsersFieldRefs {
    readonly id: FieldRef<"Users", 'Int'>
    readonly name: FieldRef<"Users", 'String'>
    readonly lastName: FieldRef<"Users", 'String'>
    readonly email: FieldRef<"Users", 'String'>
    readonly password: FieldRef<"Users", 'String'>
    readonly rolId: FieldRef<"Users", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Users findUnique
   */
  export type UsersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findUniqueOrThrow
   */
  export type UsersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findFirst
   */
  export type UsersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findFirstOrThrow
   */
  export type UsersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findMany
   */
  export type UsersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users create
   */
  export type UsersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to create a Users.
     */
    data: XOR<UsersCreateInput, UsersUncheckedCreateInput>
  }

  /**
   * Users createMany
   */
  export type UsersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users createManyAndReturn
   */
  export type UsersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Users update
   */
  export type UsersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to update a Users.
     */
    data: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
    /**
     * Choose, which Users to update.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users updateMany
   */
  export type UsersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * Users updateManyAndReturn
   */
  export type UsersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Users upsert
   */
  export type UsersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The filter to search for the Users to update in case it exists.
     */
    where: UsersWhereUniqueInput
    /**
     * In case the Users found by the `where` argument doesn't exist, create a new Users with this data.
     */
    create: XOR<UsersCreateInput, UsersUncheckedCreateInput>
    /**
     * In case the Users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
  }

  /**
   * Users delete
   */
  export type UsersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter which Users to delete.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users deleteMany
   */
  export type UsersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UsersWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * Users.posts
   */
  export type Users$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    cursor?: PostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Users without action
   */
  export type UsersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    id: number | null
  }

  export type RoleSumAggregateOutputType = {
    id: number | null
  }

  export type RoleMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type RoleMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    id?: true
  }

  export type RoleSumAggregateInputType = {
    id?: true
  }

  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: number
    name: string
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    users?: boolean | Role$usersArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Role$usersArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RoleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      users: Prisma.$UsersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {RoleCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {RoleUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Role$usersArgs<ExtArgs> = {}>(args?: Subset<T, Role$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'Int'>
    readonly name: FieldRef<"Role", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role createManyAndReturn
   */
  export type RoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role updateManyAndReturn
   */
  export type RoleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.users
   */
  export type Role$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    where?: UsersWhereInput
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    cursor?: UsersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model Post
   */

  export type AggregatePost = {
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  export type PostAvgAggregateOutputType = {
    id: number | null
    authorId: number | null
  }

  export type PostSumAggregateOutputType = {
    id: number | null
    authorId: number | null
  }

  export type PostMinAggregateOutputType = {
    id: number | null
    title: string | null
    content: string | null
    authorId: number | null
  }

  export type PostMaxAggregateOutputType = {
    id: number | null
    title: string | null
    content: string | null
    authorId: number | null
  }

  export type PostCountAggregateOutputType = {
    id: number
    title: number
    content: number
    authorId: number
    images: number
    _all: number
  }


  export type PostAvgAggregateInputType = {
    id?: true
    authorId?: true
  }

  export type PostSumAggregateInputType = {
    id?: true
    authorId?: true
  }

  export type PostMinAggregateInputType = {
    id?: true
    title?: true
    content?: true
    authorId?: true
  }

  export type PostMaxAggregateInputType = {
    id?: true
    title?: true
    content?: true
    authorId?: true
  }

  export type PostCountAggregateInputType = {
    id?: true
    title?: true
    content?: true
    authorId?: true
    images?: true
    _all?: true
  }

  export type PostAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Post to aggregate.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Posts
    **/
    _count?: true | PostCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PostAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PostSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostMaxAggregateInputType
  }

  export type GetPostAggregateType<T extends PostAggregateArgs> = {
        [P in keyof T & keyof AggregatePost]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost[P]>
      : GetScalarType<T[P], AggregatePost[P]>
  }




  export type PostGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
    orderBy?: PostOrderByWithAggregationInput | PostOrderByWithAggregationInput[]
    by: PostScalarFieldEnum[] | PostScalarFieldEnum
    having?: PostScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostCountAggregateInputType | true
    _avg?: PostAvgAggregateInputType
    _sum?: PostSumAggregateInputType
    _min?: PostMinAggregateInputType
    _max?: PostMaxAggregateInputType
  }

  export type PostGroupByOutputType = {
    id: number
    title: string
    content: string | null
    authorId: number
    images: string[]
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  type GetPostGroupByPayload<T extends PostGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostGroupByOutputType[P]>
            : GetScalarType<T[P], PostGroupByOutputType[P]>
        }
      >
    >


  export type PostSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    authorId?: boolean
    images?: boolean
    author?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type PostSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    authorId?: boolean
    images?: boolean
    author?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type PostSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    authorId?: boolean
    images?: boolean
    author?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type PostSelectScalar = {
    id?: boolean
    title?: boolean
    content?: boolean
    authorId?: boolean
    images?: boolean
  }

  export type PostOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "content" | "authorId" | "images", ExtArgs["result"]["post"]>
  export type PostInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type PostIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type PostIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UsersDefaultArgs<ExtArgs>
  }

  export type $PostPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Post"
    objects: {
      author: Prisma.$UsersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      content: string | null
      authorId: number
      images: string[]
    }, ExtArgs["result"]["post"]>
    composites: {}
  }

  type PostGetPayload<S extends boolean | null | undefined | PostDefaultArgs> = $Result.GetResult<Prisma.$PostPayload, S>

  type PostCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PostFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PostCountAggregateInputType | true
    }

  export interface PostDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Post'], meta: { name: 'Post' } }
    /**
     * Find zero or one Post that matches the filter.
     * @param {PostFindUniqueArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PostFindUniqueArgs>(args: SelectSubset<T, PostFindUniqueArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PostFindUniqueOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PostFindUniqueOrThrowArgs>(args: SelectSubset<T, PostFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PostFindFirstArgs>(args?: SelectSubset<T, PostFindFirstArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PostFindFirstOrThrowArgs>(args?: SelectSubset<T, PostFindFirstOrThrowArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts
     * const posts = await prisma.post.findMany()
     * 
     * // Get first 10 Posts
     * const posts = await prisma.post.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const postWithIdOnly = await prisma.post.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PostFindManyArgs>(args?: SelectSubset<T, PostFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post.
     * @param {PostCreateArgs} args - Arguments to create a Post.
     * @example
     * // Create one Post
     * const Post = await prisma.post.create({
     *   data: {
     *     // ... data to create a Post
     *   }
     * })
     * 
     */
    create<T extends PostCreateArgs>(args: SelectSubset<T, PostCreateArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Posts.
     * @param {PostCreateManyArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PostCreateManyArgs>(args?: SelectSubset<T, PostCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Posts and returns the data saved in the database.
     * @param {PostCreateManyAndReturnArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Posts and only return the `id`
     * const postWithIdOnly = await prisma.post.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PostCreateManyAndReturnArgs>(args?: SelectSubset<T, PostCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Post.
     * @param {PostDeleteArgs} args - Arguments to delete one Post.
     * @example
     * // Delete one Post
     * const Post = await prisma.post.delete({
     *   where: {
     *     // ... filter to delete one Post
     *   }
     * })
     * 
     */
    delete<T extends PostDeleteArgs>(args: SelectSubset<T, PostDeleteArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post.
     * @param {PostUpdateArgs} args - Arguments to update one Post.
     * @example
     * // Update one Post
     * const post = await prisma.post.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PostUpdateArgs>(args: SelectSubset<T, PostUpdateArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Posts.
     * @param {PostDeleteManyArgs} args - Arguments to filter Posts to delete.
     * @example
     * // Delete a few Posts
     * const { count } = await prisma.post.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PostDeleteManyArgs>(args?: SelectSubset<T, PostDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PostUpdateManyArgs>(args: SelectSubset<T, PostUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts and returns the data updated in the database.
     * @param {PostUpdateManyAndReturnArgs} args - Arguments to update many Posts.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Posts and only return the `id`
     * const postWithIdOnly = await prisma.post.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PostUpdateManyAndReturnArgs>(args: SelectSubset<T, PostUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Post.
     * @param {PostUpsertArgs} args - Arguments to update or create a Post.
     * @example
     * // Update or create a Post
     * const post = await prisma.post.upsert({
     *   create: {
     *     // ... data to create a Post
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post we want to update
     *   }
     * })
     */
    upsert<T extends PostUpsertArgs>(args: SelectSubset<T, PostUpsertArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostCountArgs} args - Arguments to filter Posts to count.
     * @example
     * // Count the number of Posts
     * const count = await prisma.post.count({
     *   where: {
     *     // ... the filter for the Posts we want to count
     *   }
     * })
    **/
    count<T extends PostCountArgs>(
      args?: Subset<T, PostCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostAggregateArgs>(args: Subset<T, PostAggregateArgs>): Prisma.PrismaPromise<GetPostAggregateType<T>>

    /**
     * Group by Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PostGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PostGroupByArgs['orderBy'] }
        : { orderBy?: PostGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PostGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Post model
   */
  readonly fields: PostFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Post.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PostClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Post model
   */
  interface PostFieldRefs {
    readonly id: FieldRef<"Post", 'Int'>
    readonly title: FieldRef<"Post", 'String'>
    readonly content: FieldRef<"Post", 'String'>
    readonly authorId: FieldRef<"Post", 'Int'>
    readonly images: FieldRef<"Post", 'String[]'>
  }
    

  // Custom InputTypes
  /**
   * Post findUnique
   */
  export type PostFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post findUniqueOrThrow
   */
  export type PostFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post findFirst
   */
  export type PostFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post findFirstOrThrow
   */
  export type PostFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post findMany
   */
  export type PostFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Posts to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post create
   */
  export type PostCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The data needed to create a Post.
     */
    data: XOR<PostCreateInput, PostUncheckedCreateInput>
  }

  /**
   * Post createMany
   */
  export type PostCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Posts.
     */
    data: PostCreateManyInput | PostCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Post createManyAndReturn
   */
  export type PostCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * The data used to create many Posts.
     */
    data: PostCreateManyInput | PostCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Post update
   */
  export type PostUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The data needed to update a Post.
     */
    data: XOR<PostUpdateInput, PostUncheckedUpdateInput>
    /**
     * Choose, which Post to update.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post updateMany
   */
  export type PostUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Posts.
     */
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyInput>
    /**
     * Filter which Posts to update
     */
    where?: PostWhereInput
    /**
     * Limit how many Posts to update.
     */
    limit?: number
  }

  /**
   * Post updateManyAndReturn
   */
  export type PostUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * The data used to update Posts.
     */
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyInput>
    /**
     * Filter which Posts to update
     */
    where?: PostWhereInput
    /**
     * Limit how many Posts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Post upsert
   */
  export type PostUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The filter to search for the Post to update in case it exists.
     */
    where: PostWhereUniqueInput
    /**
     * In case the Post found by the `where` argument doesn't exist, create a new Post with this data.
     */
    create: XOR<PostCreateInput, PostUncheckedCreateInput>
    /**
     * In case the Post was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PostUpdateInput, PostUncheckedUpdateInput>
  }

  /**
   * Post delete
   */
  export type PostDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter which Post to delete.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post deleteMany
   */
  export type PostDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Posts to delete
     */
    where?: PostWhereInput
    /**
     * Limit how many Posts to delete.
     */
    limit?: number
  }

  /**
   * Post without action
   */
  export type PostDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
  }


  /**
   * Model RegistroMujerVulnerable
   */

  export type AggregateRegistroMujerVulnerable = {
    _count: RegistroMujerVulnerableCountAggregateOutputType | null
    _avg: RegistroMujerVulnerableAvgAggregateOutputType | null
    _sum: RegistroMujerVulnerableSumAggregateOutputType | null
    _min: RegistroMujerVulnerableMinAggregateOutputType | null
    _max: RegistroMujerVulnerableMaxAggregateOutputType | null
  }

  export type RegistroMujerVulnerableAvgAggregateOutputType = {
    id: number | null
    edad: number | null
    numeroHijos: number | null
  }

  export type RegistroMujerVulnerableSumAggregateOutputType = {
    id: number | null
    edad: number | null
    numeroHijos: number | null
  }

  export type RegistroMujerVulnerableMinAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    tipoDocumento: $Enums.TipoDocumento | null
    numeroDocumento: string | null
    fechaNacimiento: Date | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    telefonoContacto: string | null
    correoElectronico: string | null
    direccion: string | null
    esMadreCabeza: boolean | null
    numeroHijos: number | null
    conviveConOtrasPersonas: boolean | null
    conQuienesConvive: string | null
    nivelEducativo: $Enums.NivelEducativo | null
    tieneEmpleo: boolean | null
    actividadLaboral: string | null
    fuenteIngresos: string | null
    otrasAreas: string | null
    tieneApoyoGubernamental: boolean | null
    tipoApoyoGubernamental: string | null
    motivacion: string | null
    tiempoSemanalDisponible: string | null
    expectativas: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroMujerVulnerableMaxAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    tipoDocumento: $Enums.TipoDocumento | null
    numeroDocumento: string | null
    fechaNacimiento: Date | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    telefonoContacto: string | null
    correoElectronico: string | null
    direccion: string | null
    esMadreCabeza: boolean | null
    numeroHijos: number | null
    conviveConOtrasPersonas: boolean | null
    conQuienesConvive: string | null
    nivelEducativo: $Enums.NivelEducativo | null
    tieneEmpleo: boolean | null
    actividadLaboral: string | null
    fuenteIngresos: string | null
    otrasAreas: string | null
    tieneApoyoGubernamental: boolean | null
    tipoApoyoGubernamental: string | null
    motivacion: string | null
    tiempoSemanalDisponible: string | null
    expectativas: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroMujerVulnerableCountAggregateOutputType = {
    id: number
    nombreCompleto: number
    tipoDocumento: number
    numeroDocumento: number
    fechaNacimiento: number
    comuna: number
    estratoSocial: number
    edad: number
    grupoEtnico: number
    telefonoContacto: number
    correoElectronico: number
    direccion: number
    esMadreCabeza: number
    numeroHijos: number
    conviveConOtrasPersonas: number
    conQuienesConvive: number
    nivelEducativo: number
    tieneEmpleo: number
    actividadLaboral: number
    fuenteIngresos: number
    areasApoyo: number
    otrasAreas: number
    tieneApoyoGubernamental: number
    tipoApoyoGubernamental: number
    motivacion: number
    tiempoSemanalDisponible: number
    expectativas: number
    aceptaTerminos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RegistroMujerVulnerableAvgAggregateInputType = {
    id?: true
    edad?: true
    numeroHijos?: true
  }

  export type RegistroMujerVulnerableSumAggregateInputType = {
    id?: true
    edad?: true
    numeroHijos?: true
  }

  export type RegistroMujerVulnerableMinAggregateInputType = {
    id?: true
    nombreCompleto?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    esMadreCabeza?: true
    numeroHijos?: true
    conviveConOtrasPersonas?: true
    conQuienesConvive?: true
    nivelEducativo?: true
    tieneEmpleo?: true
    actividadLaboral?: true
    fuenteIngresos?: true
    otrasAreas?: true
    tieneApoyoGubernamental?: true
    tipoApoyoGubernamental?: true
    motivacion?: true
    tiempoSemanalDisponible?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroMujerVulnerableMaxAggregateInputType = {
    id?: true
    nombreCompleto?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    esMadreCabeza?: true
    numeroHijos?: true
    conviveConOtrasPersonas?: true
    conQuienesConvive?: true
    nivelEducativo?: true
    tieneEmpleo?: true
    actividadLaboral?: true
    fuenteIngresos?: true
    otrasAreas?: true
    tieneApoyoGubernamental?: true
    tipoApoyoGubernamental?: true
    motivacion?: true
    tiempoSemanalDisponible?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroMujerVulnerableCountAggregateInputType = {
    id?: true
    nombreCompleto?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    esMadreCabeza?: true
    numeroHijos?: true
    conviveConOtrasPersonas?: true
    conQuienesConvive?: true
    nivelEducativo?: true
    tieneEmpleo?: true
    actividadLaboral?: true
    fuenteIngresos?: true
    areasApoyo?: true
    otrasAreas?: true
    tieneApoyoGubernamental?: true
    tipoApoyoGubernamental?: true
    motivacion?: true
    tiempoSemanalDisponible?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RegistroMujerVulnerableAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroMujerVulnerable to aggregate.
     */
    where?: RegistroMujerVulnerableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroMujerVulnerables to fetch.
     */
    orderBy?: RegistroMujerVulnerableOrderByWithRelationInput | RegistroMujerVulnerableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroMujerVulnerableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroMujerVulnerables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroMujerVulnerables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroMujerVulnerables
    **/
    _count?: true | RegistroMujerVulnerableCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroMujerVulnerableAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroMujerVulnerableSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroMujerVulnerableMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroMujerVulnerableMaxAggregateInputType
  }

  export type GetRegistroMujerVulnerableAggregateType<T extends RegistroMujerVulnerableAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroMujerVulnerable]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroMujerVulnerable[P]>
      : GetScalarType<T[P], AggregateRegistroMujerVulnerable[P]>
  }




  export type RegistroMujerVulnerableGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroMujerVulnerableWhereInput
    orderBy?: RegistroMujerVulnerableOrderByWithAggregationInput | RegistroMujerVulnerableOrderByWithAggregationInput[]
    by: RegistroMujerVulnerableScalarFieldEnum[] | RegistroMujerVulnerableScalarFieldEnum
    having?: RegistroMujerVulnerableScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroMujerVulnerableCountAggregateInputType | true
    _avg?: RegistroMujerVulnerableAvgAggregateInputType
    _sum?: RegistroMujerVulnerableSumAggregateInputType
    _min?: RegistroMujerVulnerableMinAggregateInputType
    _max?: RegistroMujerVulnerableMaxAggregateInputType
  }

  export type RegistroMujerVulnerableGroupByOutputType = {
    id: number
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico: string | null
    direccion: string
    esMadreCabeza: boolean
    numeroHijos: number
    conviveConOtrasPersonas: boolean
    conQuienesConvive: string | null
    nivelEducativo: $Enums.NivelEducativo
    tieneEmpleo: boolean
    actividadLaboral: string | null
    fuenteIngresos: string | null
    areasApoyo: $Enums.AreaApoyo[]
    otrasAreas: string | null
    tieneApoyoGubernamental: boolean
    tipoApoyoGubernamental: string | null
    motivacion: string
    tiempoSemanalDisponible: string
    expectativas: string
    aceptaTerminos: boolean
    createdAt: Date
    updatedAt: Date
    _count: RegistroMujerVulnerableCountAggregateOutputType | null
    _avg: RegistroMujerVulnerableAvgAggregateOutputType | null
    _sum: RegistroMujerVulnerableSumAggregateOutputType | null
    _min: RegistroMujerVulnerableMinAggregateOutputType | null
    _max: RegistroMujerVulnerableMaxAggregateOutputType | null
  }

  type GetRegistroMujerVulnerableGroupByPayload<T extends RegistroMujerVulnerableGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroMujerVulnerableGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroMujerVulnerableGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroMujerVulnerableGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroMujerVulnerableGroupByOutputType[P]>
        }
      >
    >


  export type RegistroMujerVulnerableSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    esMadreCabeza?: boolean
    numeroHijos?: boolean
    conviveConOtrasPersonas?: boolean
    conQuienesConvive?: boolean
    nivelEducativo?: boolean
    tieneEmpleo?: boolean
    actividadLaboral?: boolean
    fuenteIngresos?: boolean
    areasApoyo?: boolean
    otrasAreas?: boolean
    tieneApoyoGubernamental?: boolean
    tipoApoyoGubernamental?: boolean
    motivacion?: boolean
    tiempoSemanalDisponible?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroMujerVulnerable"]>

  export type RegistroMujerVulnerableSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    esMadreCabeza?: boolean
    numeroHijos?: boolean
    conviveConOtrasPersonas?: boolean
    conQuienesConvive?: boolean
    nivelEducativo?: boolean
    tieneEmpleo?: boolean
    actividadLaboral?: boolean
    fuenteIngresos?: boolean
    areasApoyo?: boolean
    otrasAreas?: boolean
    tieneApoyoGubernamental?: boolean
    tipoApoyoGubernamental?: boolean
    motivacion?: boolean
    tiempoSemanalDisponible?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroMujerVulnerable"]>

  export type RegistroMujerVulnerableSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    esMadreCabeza?: boolean
    numeroHijos?: boolean
    conviveConOtrasPersonas?: boolean
    conQuienesConvive?: boolean
    nivelEducativo?: boolean
    tieneEmpleo?: boolean
    actividadLaboral?: boolean
    fuenteIngresos?: boolean
    areasApoyo?: boolean
    otrasAreas?: boolean
    tieneApoyoGubernamental?: boolean
    tipoApoyoGubernamental?: boolean
    motivacion?: boolean
    tiempoSemanalDisponible?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroMujerVulnerable"]>

  export type RegistroMujerVulnerableSelectScalar = {
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    esMadreCabeza?: boolean
    numeroHijos?: boolean
    conviveConOtrasPersonas?: boolean
    conQuienesConvive?: boolean
    nivelEducativo?: boolean
    tieneEmpleo?: boolean
    actividadLaboral?: boolean
    fuenteIngresos?: boolean
    areasApoyo?: boolean
    otrasAreas?: boolean
    tieneApoyoGubernamental?: boolean
    tipoApoyoGubernamental?: boolean
    motivacion?: boolean
    tiempoSemanalDisponible?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RegistroMujerVulnerableOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombreCompleto" | "tipoDocumento" | "numeroDocumento" | "fechaNacimiento" | "comuna" | "estratoSocial" | "edad" | "grupoEtnico" | "telefonoContacto" | "correoElectronico" | "direccion" | "esMadreCabeza" | "numeroHijos" | "conviveConOtrasPersonas" | "conQuienesConvive" | "nivelEducativo" | "tieneEmpleo" | "actividadLaboral" | "fuenteIngresos" | "areasApoyo" | "otrasAreas" | "tieneApoyoGubernamental" | "tipoApoyoGubernamental" | "motivacion" | "tiempoSemanalDisponible" | "expectativas" | "aceptaTerminos" | "createdAt" | "updatedAt", ExtArgs["result"]["registroMujerVulnerable"]>

  export type $RegistroMujerVulnerablePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroMujerVulnerable"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombreCompleto: string
      tipoDocumento: $Enums.TipoDocumento
      numeroDocumento: string
      fechaNacimiento: Date
      comuna: string
      estratoSocial: $Enums.EstratoSocial
      edad: number
      grupoEtnico: $Enums.GrupoEtnico
      telefonoContacto: string
      correoElectronico: string | null
      direccion: string
      esMadreCabeza: boolean
      numeroHijos: number
      conviveConOtrasPersonas: boolean
      conQuienesConvive: string | null
      nivelEducativo: $Enums.NivelEducativo
      tieneEmpleo: boolean
      actividadLaboral: string | null
      fuenteIngresos: string | null
      areasApoyo: $Enums.AreaApoyo[]
      otrasAreas: string | null
      tieneApoyoGubernamental: boolean
      tipoApoyoGubernamental: string | null
      motivacion: string
      tiempoSemanalDisponible: string
      expectativas: string
      aceptaTerminos: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["registroMujerVulnerable"]>
    composites: {}
  }

  type RegistroMujerVulnerableGetPayload<S extends boolean | null | undefined | RegistroMujerVulnerableDefaultArgs> = $Result.GetResult<Prisma.$RegistroMujerVulnerablePayload, S>

  type RegistroMujerVulnerableCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegistroMujerVulnerableFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegistroMujerVulnerableCountAggregateInputType | true
    }

  export interface RegistroMujerVulnerableDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroMujerVulnerable'], meta: { name: 'RegistroMujerVulnerable' } }
    /**
     * Find zero or one RegistroMujerVulnerable that matches the filter.
     * @param {RegistroMujerVulnerableFindUniqueArgs} args - Arguments to find a RegistroMujerVulnerable
     * @example
     * // Get one RegistroMujerVulnerable
     * const registroMujerVulnerable = await prisma.registroMujerVulnerable.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroMujerVulnerableFindUniqueArgs>(args: SelectSubset<T, RegistroMujerVulnerableFindUniqueArgs<ExtArgs>>): Prisma__RegistroMujerVulnerableClient<$Result.GetResult<Prisma.$RegistroMujerVulnerablePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RegistroMujerVulnerable that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegistroMujerVulnerableFindUniqueOrThrowArgs} args - Arguments to find a RegistroMujerVulnerable
     * @example
     * // Get one RegistroMujerVulnerable
     * const registroMujerVulnerable = await prisma.registroMujerVulnerable.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroMujerVulnerableFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroMujerVulnerableFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroMujerVulnerableClient<$Result.GetResult<Prisma.$RegistroMujerVulnerablePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroMujerVulnerable that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroMujerVulnerableFindFirstArgs} args - Arguments to find a RegistroMujerVulnerable
     * @example
     * // Get one RegistroMujerVulnerable
     * const registroMujerVulnerable = await prisma.registroMujerVulnerable.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroMujerVulnerableFindFirstArgs>(args?: SelectSubset<T, RegistroMujerVulnerableFindFirstArgs<ExtArgs>>): Prisma__RegistroMujerVulnerableClient<$Result.GetResult<Prisma.$RegistroMujerVulnerablePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroMujerVulnerable that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroMujerVulnerableFindFirstOrThrowArgs} args - Arguments to find a RegistroMujerVulnerable
     * @example
     * // Get one RegistroMujerVulnerable
     * const registroMujerVulnerable = await prisma.registroMujerVulnerable.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroMujerVulnerableFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroMujerVulnerableFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroMujerVulnerableClient<$Result.GetResult<Prisma.$RegistroMujerVulnerablePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RegistroMujerVulnerables that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroMujerVulnerableFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroMujerVulnerables
     * const registroMujerVulnerables = await prisma.registroMujerVulnerable.findMany()
     * 
     * // Get first 10 RegistroMujerVulnerables
     * const registroMujerVulnerables = await prisma.registroMujerVulnerable.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroMujerVulnerableWithIdOnly = await prisma.registroMujerVulnerable.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroMujerVulnerableFindManyArgs>(args?: SelectSubset<T, RegistroMujerVulnerableFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroMujerVulnerablePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RegistroMujerVulnerable.
     * @param {RegistroMujerVulnerableCreateArgs} args - Arguments to create a RegistroMujerVulnerable.
     * @example
     * // Create one RegistroMujerVulnerable
     * const RegistroMujerVulnerable = await prisma.registroMujerVulnerable.create({
     *   data: {
     *     // ... data to create a RegistroMujerVulnerable
     *   }
     * })
     * 
     */
    create<T extends RegistroMujerVulnerableCreateArgs>(args: SelectSubset<T, RegistroMujerVulnerableCreateArgs<ExtArgs>>): Prisma__RegistroMujerVulnerableClient<$Result.GetResult<Prisma.$RegistroMujerVulnerablePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RegistroMujerVulnerables.
     * @param {RegistroMujerVulnerableCreateManyArgs} args - Arguments to create many RegistroMujerVulnerables.
     * @example
     * // Create many RegistroMujerVulnerables
     * const registroMujerVulnerable = await prisma.registroMujerVulnerable.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroMujerVulnerableCreateManyArgs>(args?: SelectSubset<T, RegistroMujerVulnerableCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroMujerVulnerables and returns the data saved in the database.
     * @param {RegistroMujerVulnerableCreateManyAndReturnArgs} args - Arguments to create many RegistroMujerVulnerables.
     * @example
     * // Create many RegistroMujerVulnerables
     * const registroMujerVulnerable = await prisma.registroMujerVulnerable.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroMujerVulnerables and only return the `id`
     * const registroMujerVulnerableWithIdOnly = await prisma.registroMujerVulnerable.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroMujerVulnerableCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroMujerVulnerableCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroMujerVulnerablePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RegistroMujerVulnerable.
     * @param {RegistroMujerVulnerableDeleteArgs} args - Arguments to delete one RegistroMujerVulnerable.
     * @example
     * // Delete one RegistroMujerVulnerable
     * const RegistroMujerVulnerable = await prisma.registroMujerVulnerable.delete({
     *   where: {
     *     // ... filter to delete one RegistroMujerVulnerable
     *   }
     * })
     * 
     */
    delete<T extends RegistroMujerVulnerableDeleteArgs>(args: SelectSubset<T, RegistroMujerVulnerableDeleteArgs<ExtArgs>>): Prisma__RegistroMujerVulnerableClient<$Result.GetResult<Prisma.$RegistroMujerVulnerablePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RegistroMujerVulnerable.
     * @param {RegistroMujerVulnerableUpdateArgs} args - Arguments to update one RegistroMujerVulnerable.
     * @example
     * // Update one RegistroMujerVulnerable
     * const registroMujerVulnerable = await prisma.registroMujerVulnerable.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroMujerVulnerableUpdateArgs>(args: SelectSubset<T, RegistroMujerVulnerableUpdateArgs<ExtArgs>>): Prisma__RegistroMujerVulnerableClient<$Result.GetResult<Prisma.$RegistroMujerVulnerablePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RegistroMujerVulnerables.
     * @param {RegistroMujerVulnerableDeleteManyArgs} args - Arguments to filter RegistroMujerVulnerables to delete.
     * @example
     * // Delete a few RegistroMujerVulnerables
     * const { count } = await prisma.registroMujerVulnerable.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroMujerVulnerableDeleteManyArgs>(args?: SelectSubset<T, RegistroMujerVulnerableDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroMujerVulnerables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroMujerVulnerableUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroMujerVulnerables
     * const registroMujerVulnerable = await prisma.registroMujerVulnerable.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroMujerVulnerableUpdateManyArgs>(args: SelectSubset<T, RegistroMujerVulnerableUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroMujerVulnerables and returns the data updated in the database.
     * @param {RegistroMujerVulnerableUpdateManyAndReturnArgs} args - Arguments to update many RegistroMujerVulnerables.
     * @example
     * // Update many RegistroMujerVulnerables
     * const registroMujerVulnerable = await prisma.registroMujerVulnerable.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RegistroMujerVulnerables and only return the `id`
     * const registroMujerVulnerableWithIdOnly = await prisma.registroMujerVulnerable.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegistroMujerVulnerableUpdateManyAndReturnArgs>(args: SelectSubset<T, RegistroMujerVulnerableUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroMujerVulnerablePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RegistroMujerVulnerable.
     * @param {RegistroMujerVulnerableUpsertArgs} args - Arguments to update or create a RegistroMujerVulnerable.
     * @example
     * // Update or create a RegistroMujerVulnerable
     * const registroMujerVulnerable = await prisma.registroMujerVulnerable.upsert({
     *   create: {
     *     // ... data to create a RegistroMujerVulnerable
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroMujerVulnerable we want to update
     *   }
     * })
     */
    upsert<T extends RegistroMujerVulnerableUpsertArgs>(args: SelectSubset<T, RegistroMujerVulnerableUpsertArgs<ExtArgs>>): Prisma__RegistroMujerVulnerableClient<$Result.GetResult<Prisma.$RegistroMujerVulnerablePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RegistroMujerVulnerables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroMujerVulnerableCountArgs} args - Arguments to filter RegistroMujerVulnerables to count.
     * @example
     * // Count the number of RegistroMujerVulnerables
     * const count = await prisma.registroMujerVulnerable.count({
     *   where: {
     *     // ... the filter for the RegistroMujerVulnerables we want to count
     *   }
     * })
    **/
    count<T extends RegistroMujerVulnerableCountArgs>(
      args?: Subset<T, RegistroMujerVulnerableCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroMujerVulnerableCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroMujerVulnerable.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroMujerVulnerableAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroMujerVulnerableAggregateArgs>(args: Subset<T, RegistroMujerVulnerableAggregateArgs>): Prisma.PrismaPromise<GetRegistroMujerVulnerableAggregateType<T>>

    /**
     * Group by RegistroMujerVulnerable.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroMujerVulnerableGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroMujerVulnerableGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroMujerVulnerableGroupByArgs['orderBy'] }
        : { orderBy?: RegistroMujerVulnerableGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroMujerVulnerableGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroMujerVulnerableGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroMujerVulnerable model
   */
  readonly fields: RegistroMujerVulnerableFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroMujerVulnerable.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroMujerVulnerableClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroMujerVulnerable model
   */
  interface RegistroMujerVulnerableFieldRefs {
    readonly id: FieldRef<"RegistroMujerVulnerable", 'Int'>
    readonly nombreCompleto: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly tipoDocumento: FieldRef<"RegistroMujerVulnerable", 'TipoDocumento'>
    readonly numeroDocumento: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly fechaNacimiento: FieldRef<"RegistroMujerVulnerable", 'DateTime'>
    readonly comuna: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly estratoSocial: FieldRef<"RegistroMujerVulnerable", 'EstratoSocial'>
    readonly edad: FieldRef<"RegistroMujerVulnerable", 'Int'>
    readonly grupoEtnico: FieldRef<"RegistroMujerVulnerable", 'GrupoEtnico'>
    readonly telefonoContacto: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly correoElectronico: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly direccion: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly esMadreCabeza: FieldRef<"RegistroMujerVulnerable", 'Boolean'>
    readonly numeroHijos: FieldRef<"RegistroMujerVulnerable", 'Int'>
    readonly conviveConOtrasPersonas: FieldRef<"RegistroMujerVulnerable", 'Boolean'>
    readonly conQuienesConvive: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly nivelEducativo: FieldRef<"RegistroMujerVulnerable", 'NivelEducativo'>
    readonly tieneEmpleo: FieldRef<"RegistroMujerVulnerable", 'Boolean'>
    readonly actividadLaboral: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly fuenteIngresos: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly areasApoyo: FieldRef<"RegistroMujerVulnerable", 'AreaApoyo[]'>
    readonly otrasAreas: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly tieneApoyoGubernamental: FieldRef<"RegistroMujerVulnerable", 'Boolean'>
    readonly tipoApoyoGubernamental: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly motivacion: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly tiempoSemanalDisponible: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly expectativas: FieldRef<"RegistroMujerVulnerable", 'String'>
    readonly aceptaTerminos: FieldRef<"RegistroMujerVulnerable", 'Boolean'>
    readonly createdAt: FieldRef<"RegistroMujerVulnerable", 'DateTime'>
    readonly updatedAt: FieldRef<"RegistroMujerVulnerable", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RegistroMujerVulnerable findUnique
   */
  export type RegistroMujerVulnerableFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroMujerVulnerable
     */
    select?: RegistroMujerVulnerableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroMujerVulnerable
     */
    omit?: RegistroMujerVulnerableOmit<ExtArgs> | null
    /**
     * Filter, which RegistroMujerVulnerable to fetch.
     */
    where: RegistroMujerVulnerableWhereUniqueInput
  }

  /**
   * RegistroMujerVulnerable findUniqueOrThrow
   */
  export type RegistroMujerVulnerableFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroMujerVulnerable
     */
    select?: RegistroMujerVulnerableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroMujerVulnerable
     */
    omit?: RegistroMujerVulnerableOmit<ExtArgs> | null
    /**
     * Filter, which RegistroMujerVulnerable to fetch.
     */
    where: RegistroMujerVulnerableWhereUniqueInput
  }

  /**
   * RegistroMujerVulnerable findFirst
   */
  export type RegistroMujerVulnerableFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroMujerVulnerable
     */
    select?: RegistroMujerVulnerableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroMujerVulnerable
     */
    omit?: RegistroMujerVulnerableOmit<ExtArgs> | null
    /**
     * Filter, which RegistroMujerVulnerable to fetch.
     */
    where?: RegistroMujerVulnerableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroMujerVulnerables to fetch.
     */
    orderBy?: RegistroMujerVulnerableOrderByWithRelationInput | RegistroMujerVulnerableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroMujerVulnerables.
     */
    cursor?: RegistroMujerVulnerableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroMujerVulnerables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroMujerVulnerables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroMujerVulnerables.
     */
    distinct?: RegistroMujerVulnerableScalarFieldEnum | RegistroMujerVulnerableScalarFieldEnum[]
  }

  /**
   * RegistroMujerVulnerable findFirstOrThrow
   */
  export type RegistroMujerVulnerableFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroMujerVulnerable
     */
    select?: RegistroMujerVulnerableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroMujerVulnerable
     */
    omit?: RegistroMujerVulnerableOmit<ExtArgs> | null
    /**
     * Filter, which RegistroMujerVulnerable to fetch.
     */
    where?: RegistroMujerVulnerableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroMujerVulnerables to fetch.
     */
    orderBy?: RegistroMujerVulnerableOrderByWithRelationInput | RegistroMujerVulnerableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroMujerVulnerables.
     */
    cursor?: RegistroMujerVulnerableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroMujerVulnerables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroMujerVulnerables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroMujerVulnerables.
     */
    distinct?: RegistroMujerVulnerableScalarFieldEnum | RegistroMujerVulnerableScalarFieldEnum[]
  }

  /**
   * RegistroMujerVulnerable findMany
   */
  export type RegistroMujerVulnerableFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroMujerVulnerable
     */
    select?: RegistroMujerVulnerableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroMujerVulnerable
     */
    omit?: RegistroMujerVulnerableOmit<ExtArgs> | null
    /**
     * Filter, which RegistroMujerVulnerables to fetch.
     */
    where?: RegistroMujerVulnerableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroMujerVulnerables to fetch.
     */
    orderBy?: RegistroMujerVulnerableOrderByWithRelationInput | RegistroMujerVulnerableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroMujerVulnerables.
     */
    cursor?: RegistroMujerVulnerableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroMujerVulnerables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroMujerVulnerables.
     */
    skip?: number
    distinct?: RegistroMujerVulnerableScalarFieldEnum | RegistroMujerVulnerableScalarFieldEnum[]
  }

  /**
   * RegistroMujerVulnerable create
   */
  export type RegistroMujerVulnerableCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroMujerVulnerable
     */
    select?: RegistroMujerVulnerableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroMujerVulnerable
     */
    omit?: RegistroMujerVulnerableOmit<ExtArgs> | null
    /**
     * The data needed to create a RegistroMujerVulnerable.
     */
    data: XOR<RegistroMujerVulnerableCreateInput, RegistroMujerVulnerableUncheckedCreateInput>
  }

  /**
   * RegistroMujerVulnerable createMany
   */
  export type RegistroMujerVulnerableCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroMujerVulnerables.
     */
    data: RegistroMujerVulnerableCreateManyInput | RegistroMujerVulnerableCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroMujerVulnerable createManyAndReturn
   */
  export type RegistroMujerVulnerableCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroMujerVulnerable
     */
    select?: RegistroMujerVulnerableSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroMujerVulnerable
     */
    omit?: RegistroMujerVulnerableOmit<ExtArgs> | null
    /**
     * The data used to create many RegistroMujerVulnerables.
     */
    data: RegistroMujerVulnerableCreateManyInput | RegistroMujerVulnerableCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroMujerVulnerable update
   */
  export type RegistroMujerVulnerableUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroMujerVulnerable
     */
    select?: RegistroMujerVulnerableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroMujerVulnerable
     */
    omit?: RegistroMujerVulnerableOmit<ExtArgs> | null
    /**
     * The data needed to update a RegistroMujerVulnerable.
     */
    data: XOR<RegistroMujerVulnerableUpdateInput, RegistroMujerVulnerableUncheckedUpdateInput>
    /**
     * Choose, which RegistroMujerVulnerable to update.
     */
    where: RegistroMujerVulnerableWhereUniqueInput
  }

  /**
   * RegistroMujerVulnerable updateMany
   */
  export type RegistroMujerVulnerableUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroMujerVulnerables.
     */
    data: XOR<RegistroMujerVulnerableUpdateManyMutationInput, RegistroMujerVulnerableUncheckedUpdateManyInput>
    /**
     * Filter which RegistroMujerVulnerables to update
     */
    where?: RegistroMujerVulnerableWhereInput
    /**
     * Limit how many RegistroMujerVulnerables to update.
     */
    limit?: number
  }

  /**
   * RegistroMujerVulnerable updateManyAndReturn
   */
  export type RegistroMujerVulnerableUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroMujerVulnerable
     */
    select?: RegistroMujerVulnerableSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroMujerVulnerable
     */
    omit?: RegistroMujerVulnerableOmit<ExtArgs> | null
    /**
     * The data used to update RegistroMujerVulnerables.
     */
    data: XOR<RegistroMujerVulnerableUpdateManyMutationInput, RegistroMujerVulnerableUncheckedUpdateManyInput>
    /**
     * Filter which RegistroMujerVulnerables to update
     */
    where?: RegistroMujerVulnerableWhereInput
    /**
     * Limit how many RegistroMujerVulnerables to update.
     */
    limit?: number
  }

  /**
   * RegistroMujerVulnerable upsert
   */
  export type RegistroMujerVulnerableUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroMujerVulnerable
     */
    select?: RegistroMujerVulnerableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroMujerVulnerable
     */
    omit?: RegistroMujerVulnerableOmit<ExtArgs> | null
    /**
     * The filter to search for the RegistroMujerVulnerable to update in case it exists.
     */
    where: RegistroMujerVulnerableWhereUniqueInput
    /**
     * In case the RegistroMujerVulnerable found by the `where` argument doesn't exist, create a new RegistroMujerVulnerable with this data.
     */
    create: XOR<RegistroMujerVulnerableCreateInput, RegistroMujerVulnerableUncheckedCreateInput>
    /**
     * In case the RegistroMujerVulnerable was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroMujerVulnerableUpdateInput, RegistroMujerVulnerableUncheckedUpdateInput>
  }

  /**
   * RegistroMujerVulnerable delete
   */
  export type RegistroMujerVulnerableDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroMujerVulnerable
     */
    select?: RegistroMujerVulnerableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroMujerVulnerable
     */
    omit?: RegistroMujerVulnerableOmit<ExtArgs> | null
    /**
     * Filter which RegistroMujerVulnerable to delete.
     */
    where: RegistroMujerVulnerableWhereUniqueInput
  }

  /**
   * RegistroMujerVulnerable deleteMany
   */
  export type RegistroMujerVulnerableDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroMujerVulnerables to delete
     */
    where?: RegistroMujerVulnerableWhereInput
    /**
     * Limit how many RegistroMujerVulnerables to delete.
     */
    limit?: number
  }

  /**
   * RegistroMujerVulnerable without action
   */
  export type RegistroMujerVulnerableDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroMujerVulnerable
     */
    select?: RegistroMujerVulnerableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroMujerVulnerable
     */
    omit?: RegistroMujerVulnerableOmit<ExtArgs> | null
  }


  /**
   * Model RegistroSemilleroInnovacion
   */

  export type AggregateRegistroSemilleroInnovacion = {
    _count: RegistroSemilleroInnovacionCountAggregateOutputType | null
    _avg: RegistroSemilleroInnovacionAvgAggregateOutputType | null
    _sum: RegistroSemilleroInnovacionSumAggregateOutputType | null
    _min: RegistroSemilleroInnovacionMinAggregateOutputType | null
    _max: RegistroSemilleroInnovacionMaxAggregateOutputType | null
  }

  export type RegistroSemilleroInnovacionAvgAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type RegistroSemilleroInnovacionSumAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type RegistroSemilleroInnovacionMinAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    tipoDocumento: $Enums.TipoDocumento | null
    numeroDocumento: string | null
    fechaNacimiento: Date | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    telefonoContacto: string | null
    correoElectronico: string | null
    direccion: string | null
    tipoVinculacion: $Enums.TipoVinculacion | null
    nombreEntidadVinculacion: string | null
    nivelEducativo: $Enums.NivelEducativo | null
    participacionPrevia: boolean | null
    otrasAreas: string | null
    tieneProyecto: boolean | null
    descripcionProyecto: string | null
    habilidades: string | null
    disponibilidad: string | null
    motivacion: string | null
    expectativas: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroSemilleroInnovacionMaxAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    tipoDocumento: $Enums.TipoDocumento | null
    numeroDocumento: string | null
    fechaNacimiento: Date | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    telefonoContacto: string | null
    correoElectronico: string | null
    direccion: string | null
    tipoVinculacion: $Enums.TipoVinculacion | null
    nombreEntidadVinculacion: string | null
    nivelEducativo: $Enums.NivelEducativo | null
    participacionPrevia: boolean | null
    otrasAreas: string | null
    tieneProyecto: boolean | null
    descripcionProyecto: string | null
    habilidades: string | null
    disponibilidad: string | null
    motivacion: string | null
    expectativas: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroSemilleroInnovacionCountAggregateOutputType = {
    id: number
    nombreCompleto: number
    tipoDocumento: number
    numeroDocumento: number
    fechaNacimiento: number
    comuna: number
    estratoSocial: number
    edad: number
    grupoEtnico: number
    telefonoContacto: number
    correoElectronico: number
    direccion: number
    tipoVinculacion: number
    nombreEntidadVinculacion: number
    nivelEducativo: number
    participacionPrevia: number
    areasInteres: number
    otrasAreas: number
    tieneProyecto: number
    descripcionProyecto: number
    habilidades: number
    disponibilidad: number
    motivacion: number
    expectativas: number
    aceptaTerminos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RegistroSemilleroInnovacionAvgAggregateInputType = {
    id?: true
    edad?: true
  }

  export type RegistroSemilleroInnovacionSumAggregateInputType = {
    id?: true
    edad?: true
  }

  export type RegistroSemilleroInnovacionMinAggregateInputType = {
    id?: true
    nombreCompleto?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    tipoVinculacion?: true
    nombreEntidadVinculacion?: true
    nivelEducativo?: true
    participacionPrevia?: true
    otrasAreas?: true
    tieneProyecto?: true
    descripcionProyecto?: true
    habilidades?: true
    disponibilidad?: true
    motivacion?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroSemilleroInnovacionMaxAggregateInputType = {
    id?: true
    nombreCompleto?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    tipoVinculacion?: true
    nombreEntidadVinculacion?: true
    nivelEducativo?: true
    participacionPrevia?: true
    otrasAreas?: true
    tieneProyecto?: true
    descripcionProyecto?: true
    habilidades?: true
    disponibilidad?: true
    motivacion?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroSemilleroInnovacionCountAggregateInputType = {
    id?: true
    nombreCompleto?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    tipoVinculacion?: true
    nombreEntidadVinculacion?: true
    nivelEducativo?: true
    participacionPrevia?: true
    areasInteres?: true
    otrasAreas?: true
    tieneProyecto?: true
    descripcionProyecto?: true
    habilidades?: true
    disponibilidad?: true
    motivacion?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RegistroSemilleroInnovacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroSemilleroInnovacion to aggregate.
     */
    where?: RegistroSemilleroInnovacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroSemilleroInnovacions to fetch.
     */
    orderBy?: RegistroSemilleroInnovacionOrderByWithRelationInput | RegistroSemilleroInnovacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroSemilleroInnovacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroSemilleroInnovacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroSemilleroInnovacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroSemilleroInnovacions
    **/
    _count?: true | RegistroSemilleroInnovacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroSemilleroInnovacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroSemilleroInnovacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroSemilleroInnovacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroSemilleroInnovacionMaxAggregateInputType
  }

  export type GetRegistroSemilleroInnovacionAggregateType<T extends RegistroSemilleroInnovacionAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroSemilleroInnovacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroSemilleroInnovacion[P]>
      : GetScalarType<T[P], AggregateRegistroSemilleroInnovacion[P]>
  }




  export type RegistroSemilleroInnovacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroSemilleroInnovacionWhereInput
    orderBy?: RegistroSemilleroInnovacionOrderByWithAggregationInput | RegistroSemilleroInnovacionOrderByWithAggregationInput[]
    by: RegistroSemilleroInnovacionScalarFieldEnum[] | RegistroSemilleroInnovacionScalarFieldEnum
    having?: RegistroSemilleroInnovacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroSemilleroInnovacionCountAggregateInputType | true
    _avg?: RegistroSemilleroInnovacionAvgAggregateInputType
    _sum?: RegistroSemilleroInnovacionSumAggregateInputType
    _min?: RegistroSemilleroInnovacionMinAggregateInputType
    _max?: RegistroSemilleroInnovacionMaxAggregateInputType
  }

  export type RegistroSemilleroInnovacionGroupByOutputType = {
    id: number
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico: string | null
    direccion: string
    tipoVinculacion: $Enums.TipoVinculacion
    nombreEntidadVinculacion: string
    nivelEducativo: $Enums.NivelEducativo
    participacionPrevia: boolean
    areasInteres: string[]
    otrasAreas: string | null
    tieneProyecto: boolean
    descripcionProyecto: string | null
    habilidades: string
    disponibilidad: string
    motivacion: string
    expectativas: string
    aceptaTerminos: boolean
    createdAt: Date
    updatedAt: Date
    _count: RegistroSemilleroInnovacionCountAggregateOutputType | null
    _avg: RegistroSemilleroInnovacionAvgAggregateOutputType | null
    _sum: RegistroSemilleroInnovacionSumAggregateOutputType | null
    _min: RegistroSemilleroInnovacionMinAggregateOutputType | null
    _max: RegistroSemilleroInnovacionMaxAggregateOutputType | null
  }

  type GetRegistroSemilleroInnovacionGroupByPayload<T extends RegistroSemilleroInnovacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroSemilleroInnovacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroSemilleroInnovacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroSemilleroInnovacionGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroSemilleroInnovacionGroupByOutputType[P]>
        }
      >
    >


  export type RegistroSemilleroInnovacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    tipoVinculacion?: boolean
    nombreEntidadVinculacion?: boolean
    nivelEducativo?: boolean
    participacionPrevia?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    tieneProyecto?: boolean
    descripcionProyecto?: boolean
    habilidades?: boolean
    disponibilidad?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroSemilleroInnovacion"]>

  export type RegistroSemilleroInnovacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    tipoVinculacion?: boolean
    nombreEntidadVinculacion?: boolean
    nivelEducativo?: boolean
    participacionPrevia?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    tieneProyecto?: boolean
    descripcionProyecto?: boolean
    habilidades?: boolean
    disponibilidad?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroSemilleroInnovacion"]>

  export type RegistroSemilleroInnovacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    tipoVinculacion?: boolean
    nombreEntidadVinculacion?: boolean
    nivelEducativo?: boolean
    participacionPrevia?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    tieneProyecto?: boolean
    descripcionProyecto?: boolean
    habilidades?: boolean
    disponibilidad?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroSemilleroInnovacion"]>

  export type RegistroSemilleroInnovacionSelectScalar = {
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    tipoVinculacion?: boolean
    nombreEntidadVinculacion?: boolean
    nivelEducativo?: boolean
    participacionPrevia?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    tieneProyecto?: boolean
    descripcionProyecto?: boolean
    habilidades?: boolean
    disponibilidad?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RegistroSemilleroInnovacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombreCompleto" | "tipoDocumento" | "numeroDocumento" | "fechaNacimiento" | "comuna" | "estratoSocial" | "edad" | "grupoEtnico" | "telefonoContacto" | "correoElectronico" | "direccion" | "tipoVinculacion" | "nombreEntidadVinculacion" | "nivelEducativo" | "participacionPrevia" | "areasInteres" | "otrasAreas" | "tieneProyecto" | "descripcionProyecto" | "habilidades" | "disponibilidad" | "motivacion" | "expectativas" | "aceptaTerminos" | "createdAt" | "updatedAt", ExtArgs["result"]["registroSemilleroInnovacion"]>

  export type $RegistroSemilleroInnovacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroSemilleroInnovacion"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombreCompleto: string
      tipoDocumento: $Enums.TipoDocumento
      numeroDocumento: string
      fechaNacimiento: Date
      comuna: string
      estratoSocial: $Enums.EstratoSocial
      edad: number
      grupoEtnico: $Enums.GrupoEtnico
      telefonoContacto: string
      correoElectronico: string | null
      direccion: string
      tipoVinculacion: $Enums.TipoVinculacion
      nombreEntidadVinculacion: string
      nivelEducativo: $Enums.NivelEducativo
      participacionPrevia: boolean
      areasInteres: string[]
      otrasAreas: string | null
      tieneProyecto: boolean
      descripcionProyecto: string | null
      habilidades: string
      disponibilidad: string
      motivacion: string
      expectativas: string
      aceptaTerminos: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["registroSemilleroInnovacion"]>
    composites: {}
  }

  type RegistroSemilleroInnovacionGetPayload<S extends boolean | null | undefined | RegistroSemilleroInnovacionDefaultArgs> = $Result.GetResult<Prisma.$RegistroSemilleroInnovacionPayload, S>

  type RegistroSemilleroInnovacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegistroSemilleroInnovacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegistroSemilleroInnovacionCountAggregateInputType | true
    }

  export interface RegistroSemilleroInnovacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroSemilleroInnovacion'], meta: { name: 'RegistroSemilleroInnovacion' } }
    /**
     * Find zero or one RegistroSemilleroInnovacion that matches the filter.
     * @param {RegistroSemilleroInnovacionFindUniqueArgs} args - Arguments to find a RegistroSemilleroInnovacion
     * @example
     * // Get one RegistroSemilleroInnovacion
     * const registroSemilleroInnovacion = await prisma.registroSemilleroInnovacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroSemilleroInnovacionFindUniqueArgs>(args: SelectSubset<T, RegistroSemilleroInnovacionFindUniqueArgs<ExtArgs>>): Prisma__RegistroSemilleroInnovacionClient<$Result.GetResult<Prisma.$RegistroSemilleroInnovacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RegistroSemilleroInnovacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegistroSemilleroInnovacionFindUniqueOrThrowArgs} args - Arguments to find a RegistroSemilleroInnovacion
     * @example
     * // Get one RegistroSemilleroInnovacion
     * const registroSemilleroInnovacion = await prisma.registroSemilleroInnovacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroSemilleroInnovacionFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroSemilleroInnovacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroSemilleroInnovacionClient<$Result.GetResult<Prisma.$RegistroSemilleroInnovacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroSemilleroInnovacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSemilleroInnovacionFindFirstArgs} args - Arguments to find a RegistroSemilleroInnovacion
     * @example
     * // Get one RegistroSemilleroInnovacion
     * const registroSemilleroInnovacion = await prisma.registroSemilleroInnovacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroSemilleroInnovacionFindFirstArgs>(args?: SelectSubset<T, RegistroSemilleroInnovacionFindFirstArgs<ExtArgs>>): Prisma__RegistroSemilleroInnovacionClient<$Result.GetResult<Prisma.$RegistroSemilleroInnovacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroSemilleroInnovacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSemilleroInnovacionFindFirstOrThrowArgs} args - Arguments to find a RegistroSemilleroInnovacion
     * @example
     * // Get one RegistroSemilleroInnovacion
     * const registroSemilleroInnovacion = await prisma.registroSemilleroInnovacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroSemilleroInnovacionFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroSemilleroInnovacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroSemilleroInnovacionClient<$Result.GetResult<Prisma.$RegistroSemilleroInnovacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RegistroSemilleroInnovacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSemilleroInnovacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroSemilleroInnovacions
     * const registroSemilleroInnovacions = await prisma.registroSemilleroInnovacion.findMany()
     * 
     * // Get first 10 RegistroSemilleroInnovacions
     * const registroSemilleroInnovacions = await prisma.registroSemilleroInnovacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroSemilleroInnovacionWithIdOnly = await prisma.registroSemilleroInnovacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroSemilleroInnovacionFindManyArgs>(args?: SelectSubset<T, RegistroSemilleroInnovacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroSemilleroInnovacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RegistroSemilleroInnovacion.
     * @param {RegistroSemilleroInnovacionCreateArgs} args - Arguments to create a RegistroSemilleroInnovacion.
     * @example
     * // Create one RegistroSemilleroInnovacion
     * const RegistroSemilleroInnovacion = await prisma.registroSemilleroInnovacion.create({
     *   data: {
     *     // ... data to create a RegistroSemilleroInnovacion
     *   }
     * })
     * 
     */
    create<T extends RegistroSemilleroInnovacionCreateArgs>(args: SelectSubset<T, RegistroSemilleroInnovacionCreateArgs<ExtArgs>>): Prisma__RegistroSemilleroInnovacionClient<$Result.GetResult<Prisma.$RegistroSemilleroInnovacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RegistroSemilleroInnovacions.
     * @param {RegistroSemilleroInnovacionCreateManyArgs} args - Arguments to create many RegistroSemilleroInnovacions.
     * @example
     * // Create many RegistroSemilleroInnovacions
     * const registroSemilleroInnovacion = await prisma.registroSemilleroInnovacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroSemilleroInnovacionCreateManyArgs>(args?: SelectSubset<T, RegistroSemilleroInnovacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroSemilleroInnovacions and returns the data saved in the database.
     * @param {RegistroSemilleroInnovacionCreateManyAndReturnArgs} args - Arguments to create many RegistroSemilleroInnovacions.
     * @example
     * // Create many RegistroSemilleroInnovacions
     * const registroSemilleroInnovacion = await prisma.registroSemilleroInnovacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroSemilleroInnovacions and only return the `id`
     * const registroSemilleroInnovacionWithIdOnly = await prisma.registroSemilleroInnovacion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroSemilleroInnovacionCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroSemilleroInnovacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroSemilleroInnovacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RegistroSemilleroInnovacion.
     * @param {RegistroSemilleroInnovacionDeleteArgs} args - Arguments to delete one RegistroSemilleroInnovacion.
     * @example
     * // Delete one RegistroSemilleroInnovacion
     * const RegistroSemilleroInnovacion = await prisma.registroSemilleroInnovacion.delete({
     *   where: {
     *     // ... filter to delete one RegistroSemilleroInnovacion
     *   }
     * })
     * 
     */
    delete<T extends RegistroSemilleroInnovacionDeleteArgs>(args: SelectSubset<T, RegistroSemilleroInnovacionDeleteArgs<ExtArgs>>): Prisma__RegistroSemilleroInnovacionClient<$Result.GetResult<Prisma.$RegistroSemilleroInnovacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RegistroSemilleroInnovacion.
     * @param {RegistroSemilleroInnovacionUpdateArgs} args - Arguments to update one RegistroSemilleroInnovacion.
     * @example
     * // Update one RegistroSemilleroInnovacion
     * const registroSemilleroInnovacion = await prisma.registroSemilleroInnovacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroSemilleroInnovacionUpdateArgs>(args: SelectSubset<T, RegistroSemilleroInnovacionUpdateArgs<ExtArgs>>): Prisma__RegistroSemilleroInnovacionClient<$Result.GetResult<Prisma.$RegistroSemilleroInnovacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RegistroSemilleroInnovacions.
     * @param {RegistroSemilleroInnovacionDeleteManyArgs} args - Arguments to filter RegistroSemilleroInnovacions to delete.
     * @example
     * // Delete a few RegistroSemilleroInnovacions
     * const { count } = await prisma.registroSemilleroInnovacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroSemilleroInnovacionDeleteManyArgs>(args?: SelectSubset<T, RegistroSemilleroInnovacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroSemilleroInnovacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSemilleroInnovacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroSemilleroInnovacions
     * const registroSemilleroInnovacion = await prisma.registroSemilleroInnovacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroSemilleroInnovacionUpdateManyArgs>(args: SelectSubset<T, RegistroSemilleroInnovacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroSemilleroInnovacions and returns the data updated in the database.
     * @param {RegistroSemilleroInnovacionUpdateManyAndReturnArgs} args - Arguments to update many RegistroSemilleroInnovacions.
     * @example
     * // Update many RegistroSemilleroInnovacions
     * const registroSemilleroInnovacion = await prisma.registroSemilleroInnovacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RegistroSemilleroInnovacions and only return the `id`
     * const registroSemilleroInnovacionWithIdOnly = await prisma.registroSemilleroInnovacion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegistroSemilleroInnovacionUpdateManyAndReturnArgs>(args: SelectSubset<T, RegistroSemilleroInnovacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroSemilleroInnovacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RegistroSemilleroInnovacion.
     * @param {RegistroSemilleroInnovacionUpsertArgs} args - Arguments to update or create a RegistroSemilleroInnovacion.
     * @example
     * // Update or create a RegistroSemilleroInnovacion
     * const registroSemilleroInnovacion = await prisma.registroSemilleroInnovacion.upsert({
     *   create: {
     *     // ... data to create a RegistroSemilleroInnovacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroSemilleroInnovacion we want to update
     *   }
     * })
     */
    upsert<T extends RegistroSemilleroInnovacionUpsertArgs>(args: SelectSubset<T, RegistroSemilleroInnovacionUpsertArgs<ExtArgs>>): Prisma__RegistroSemilleroInnovacionClient<$Result.GetResult<Prisma.$RegistroSemilleroInnovacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RegistroSemilleroInnovacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSemilleroInnovacionCountArgs} args - Arguments to filter RegistroSemilleroInnovacions to count.
     * @example
     * // Count the number of RegistroSemilleroInnovacions
     * const count = await prisma.registroSemilleroInnovacion.count({
     *   where: {
     *     // ... the filter for the RegistroSemilleroInnovacions we want to count
     *   }
     * })
    **/
    count<T extends RegistroSemilleroInnovacionCountArgs>(
      args?: Subset<T, RegistroSemilleroInnovacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroSemilleroInnovacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroSemilleroInnovacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSemilleroInnovacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroSemilleroInnovacionAggregateArgs>(args: Subset<T, RegistroSemilleroInnovacionAggregateArgs>): Prisma.PrismaPromise<GetRegistroSemilleroInnovacionAggregateType<T>>

    /**
     * Group by RegistroSemilleroInnovacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSemilleroInnovacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroSemilleroInnovacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroSemilleroInnovacionGroupByArgs['orderBy'] }
        : { orderBy?: RegistroSemilleroInnovacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroSemilleroInnovacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroSemilleroInnovacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroSemilleroInnovacion model
   */
  readonly fields: RegistroSemilleroInnovacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroSemilleroInnovacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroSemilleroInnovacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroSemilleroInnovacion model
   */
  interface RegistroSemilleroInnovacionFieldRefs {
    readonly id: FieldRef<"RegistroSemilleroInnovacion", 'Int'>
    readonly nombreCompleto: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly tipoDocumento: FieldRef<"RegistroSemilleroInnovacion", 'TipoDocumento'>
    readonly numeroDocumento: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly fechaNacimiento: FieldRef<"RegistroSemilleroInnovacion", 'DateTime'>
    readonly comuna: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly estratoSocial: FieldRef<"RegistroSemilleroInnovacion", 'EstratoSocial'>
    readonly edad: FieldRef<"RegistroSemilleroInnovacion", 'Int'>
    readonly grupoEtnico: FieldRef<"RegistroSemilleroInnovacion", 'GrupoEtnico'>
    readonly telefonoContacto: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly correoElectronico: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly direccion: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly tipoVinculacion: FieldRef<"RegistroSemilleroInnovacion", 'TipoVinculacion'>
    readonly nombreEntidadVinculacion: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly nivelEducativo: FieldRef<"RegistroSemilleroInnovacion", 'NivelEducativo'>
    readonly participacionPrevia: FieldRef<"RegistroSemilleroInnovacion", 'Boolean'>
    readonly areasInteres: FieldRef<"RegistroSemilleroInnovacion", 'String[]'>
    readonly otrasAreas: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly tieneProyecto: FieldRef<"RegistroSemilleroInnovacion", 'Boolean'>
    readonly descripcionProyecto: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly habilidades: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly disponibilidad: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly motivacion: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly expectativas: FieldRef<"RegistroSemilleroInnovacion", 'String'>
    readonly aceptaTerminos: FieldRef<"RegistroSemilleroInnovacion", 'Boolean'>
    readonly createdAt: FieldRef<"RegistroSemilleroInnovacion", 'DateTime'>
    readonly updatedAt: FieldRef<"RegistroSemilleroInnovacion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RegistroSemilleroInnovacion findUnique
   */
  export type RegistroSemilleroInnovacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSemilleroInnovacion
     */
    select?: RegistroSemilleroInnovacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSemilleroInnovacion
     */
    omit?: RegistroSemilleroInnovacionOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSemilleroInnovacion to fetch.
     */
    where: RegistroSemilleroInnovacionWhereUniqueInput
  }

  /**
   * RegistroSemilleroInnovacion findUniqueOrThrow
   */
  export type RegistroSemilleroInnovacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSemilleroInnovacion
     */
    select?: RegistroSemilleroInnovacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSemilleroInnovacion
     */
    omit?: RegistroSemilleroInnovacionOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSemilleroInnovacion to fetch.
     */
    where: RegistroSemilleroInnovacionWhereUniqueInput
  }

  /**
   * RegistroSemilleroInnovacion findFirst
   */
  export type RegistroSemilleroInnovacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSemilleroInnovacion
     */
    select?: RegistroSemilleroInnovacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSemilleroInnovacion
     */
    omit?: RegistroSemilleroInnovacionOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSemilleroInnovacion to fetch.
     */
    where?: RegistroSemilleroInnovacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroSemilleroInnovacions to fetch.
     */
    orderBy?: RegistroSemilleroInnovacionOrderByWithRelationInput | RegistroSemilleroInnovacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroSemilleroInnovacions.
     */
    cursor?: RegistroSemilleroInnovacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroSemilleroInnovacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroSemilleroInnovacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroSemilleroInnovacions.
     */
    distinct?: RegistroSemilleroInnovacionScalarFieldEnum | RegistroSemilleroInnovacionScalarFieldEnum[]
  }

  /**
   * RegistroSemilleroInnovacion findFirstOrThrow
   */
  export type RegistroSemilleroInnovacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSemilleroInnovacion
     */
    select?: RegistroSemilleroInnovacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSemilleroInnovacion
     */
    omit?: RegistroSemilleroInnovacionOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSemilleroInnovacion to fetch.
     */
    where?: RegistroSemilleroInnovacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroSemilleroInnovacions to fetch.
     */
    orderBy?: RegistroSemilleroInnovacionOrderByWithRelationInput | RegistroSemilleroInnovacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroSemilleroInnovacions.
     */
    cursor?: RegistroSemilleroInnovacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroSemilleroInnovacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroSemilleroInnovacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroSemilleroInnovacions.
     */
    distinct?: RegistroSemilleroInnovacionScalarFieldEnum | RegistroSemilleroInnovacionScalarFieldEnum[]
  }

  /**
   * RegistroSemilleroInnovacion findMany
   */
  export type RegistroSemilleroInnovacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSemilleroInnovacion
     */
    select?: RegistroSemilleroInnovacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSemilleroInnovacion
     */
    omit?: RegistroSemilleroInnovacionOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSemilleroInnovacions to fetch.
     */
    where?: RegistroSemilleroInnovacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroSemilleroInnovacions to fetch.
     */
    orderBy?: RegistroSemilleroInnovacionOrderByWithRelationInput | RegistroSemilleroInnovacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroSemilleroInnovacions.
     */
    cursor?: RegistroSemilleroInnovacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroSemilleroInnovacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroSemilleroInnovacions.
     */
    skip?: number
    distinct?: RegistroSemilleroInnovacionScalarFieldEnum | RegistroSemilleroInnovacionScalarFieldEnum[]
  }

  /**
   * RegistroSemilleroInnovacion create
   */
  export type RegistroSemilleroInnovacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSemilleroInnovacion
     */
    select?: RegistroSemilleroInnovacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSemilleroInnovacion
     */
    omit?: RegistroSemilleroInnovacionOmit<ExtArgs> | null
    /**
     * The data needed to create a RegistroSemilleroInnovacion.
     */
    data: XOR<RegistroSemilleroInnovacionCreateInput, RegistroSemilleroInnovacionUncheckedCreateInput>
  }

  /**
   * RegistroSemilleroInnovacion createMany
   */
  export type RegistroSemilleroInnovacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroSemilleroInnovacions.
     */
    data: RegistroSemilleroInnovacionCreateManyInput | RegistroSemilleroInnovacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroSemilleroInnovacion createManyAndReturn
   */
  export type RegistroSemilleroInnovacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSemilleroInnovacion
     */
    select?: RegistroSemilleroInnovacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSemilleroInnovacion
     */
    omit?: RegistroSemilleroInnovacionOmit<ExtArgs> | null
    /**
     * The data used to create many RegistroSemilleroInnovacions.
     */
    data: RegistroSemilleroInnovacionCreateManyInput | RegistroSemilleroInnovacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroSemilleroInnovacion update
   */
  export type RegistroSemilleroInnovacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSemilleroInnovacion
     */
    select?: RegistroSemilleroInnovacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSemilleroInnovacion
     */
    omit?: RegistroSemilleroInnovacionOmit<ExtArgs> | null
    /**
     * The data needed to update a RegistroSemilleroInnovacion.
     */
    data: XOR<RegistroSemilleroInnovacionUpdateInput, RegistroSemilleroInnovacionUncheckedUpdateInput>
    /**
     * Choose, which RegistroSemilleroInnovacion to update.
     */
    where: RegistroSemilleroInnovacionWhereUniqueInput
  }

  /**
   * RegistroSemilleroInnovacion updateMany
   */
  export type RegistroSemilleroInnovacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroSemilleroInnovacions.
     */
    data: XOR<RegistroSemilleroInnovacionUpdateManyMutationInput, RegistroSemilleroInnovacionUncheckedUpdateManyInput>
    /**
     * Filter which RegistroSemilleroInnovacions to update
     */
    where?: RegistroSemilleroInnovacionWhereInput
    /**
     * Limit how many RegistroSemilleroInnovacions to update.
     */
    limit?: number
  }

  /**
   * RegistroSemilleroInnovacion updateManyAndReturn
   */
  export type RegistroSemilleroInnovacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSemilleroInnovacion
     */
    select?: RegistroSemilleroInnovacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSemilleroInnovacion
     */
    omit?: RegistroSemilleroInnovacionOmit<ExtArgs> | null
    /**
     * The data used to update RegistroSemilleroInnovacions.
     */
    data: XOR<RegistroSemilleroInnovacionUpdateManyMutationInput, RegistroSemilleroInnovacionUncheckedUpdateManyInput>
    /**
     * Filter which RegistroSemilleroInnovacions to update
     */
    where?: RegistroSemilleroInnovacionWhereInput
    /**
     * Limit how many RegistroSemilleroInnovacions to update.
     */
    limit?: number
  }

  /**
   * RegistroSemilleroInnovacion upsert
   */
  export type RegistroSemilleroInnovacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSemilleroInnovacion
     */
    select?: RegistroSemilleroInnovacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSemilleroInnovacion
     */
    omit?: RegistroSemilleroInnovacionOmit<ExtArgs> | null
    /**
     * The filter to search for the RegistroSemilleroInnovacion to update in case it exists.
     */
    where: RegistroSemilleroInnovacionWhereUniqueInput
    /**
     * In case the RegistroSemilleroInnovacion found by the `where` argument doesn't exist, create a new RegistroSemilleroInnovacion with this data.
     */
    create: XOR<RegistroSemilleroInnovacionCreateInput, RegistroSemilleroInnovacionUncheckedCreateInput>
    /**
     * In case the RegistroSemilleroInnovacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroSemilleroInnovacionUpdateInput, RegistroSemilleroInnovacionUncheckedUpdateInput>
  }

  /**
   * RegistroSemilleroInnovacion delete
   */
  export type RegistroSemilleroInnovacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSemilleroInnovacion
     */
    select?: RegistroSemilleroInnovacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSemilleroInnovacion
     */
    omit?: RegistroSemilleroInnovacionOmit<ExtArgs> | null
    /**
     * Filter which RegistroSemilleroInnovacion to delete.
     */
    where: RegistroSemilleroInnovacionWhereUniqueInput
  }

  /**
   * RegistroSemilleroInnovacion deleteMany
   */
  export type RegistroSemilleroInnovacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroSemilleroInnovacions to delete
     */
    where?: RegistroSemilleroInnovacionWhereInput
    /**
     * Limit how many RegistroSemilleroInnovacions to delete.
     */
    limit?: number
  }

  /**
   * RegistroSemilleroInnovacion without action
   */
  export type RegistroSemilleroInnovacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSemilleroInnovacion
     */
    select?: RegistroSemilleroInnovacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSemilleroInnovacion
     */
    omit?: RegistroSemilleroInnovacionOmit<ExtArgs> | null
  }


  /**
   * Model RegistroTallerSteam
   */

  export type AggregateRegistroTallerSteam = {
    _count: RegistroTallerSteamCountAggregateOutputType | null
    _avg: RegistroTallerSteamAvgAggregateOutputType | null
    _sum: RegistroTallerSteamSumAggregateOutputType | null
    _min: RegistroTallerSteamMinAggregateOutputType | null
    _max: RegistroTallerSteamMaxAggregateOutputType | null
  }

  export type RegistroTallerSteamAvgAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type RegistroTallerSteamSumAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type RegistroTallerSteamMinAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    fechaNacimiento: Date | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    institucionEducativa: string | null
    cursoGrado: string | null
    direccion: string | null
    nombreAcudiente: string | null
    relacionNino: string | null
    telefonoContacto: string | null
    correoElectronico: string | null
    participacionPrevia: boolean | null
    otrasActividades: string | null
    disponibilidad: string | null
    accesoComputadora: boolean | null
    accesoInternet: boolean | null
    motivacion: string | null
    expectativa: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroTallerSteamMaxAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    fechaNacimiento: Date | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    institucionEducativa: string | null
    cursoGrado: string | null
    direccion: string | null
    nombreAcudiente: string | null
    relacionNino: string | null
    telefonoContacto: string | null
    correoElectronico: string | null
    participacionPrevia: boolean | null
    otrasActividades: string | null
    disponibilidad: string | null
    accesoComputadora: boolean | null
    accesoInternet: boolean | null
    motivacion: string | null
    expectativa: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroTallerSteamCountAggregateOutputType = {
    id: number
    nombreCompleto: number
    fechaNacimiento: number
    comuna: number
    estratoSocial: number
    edad: number
    grupoEtnico: number
    institucionEducativa: number
    cursoGrado: number
    direccion: number
    nombreAcudiente: number
    relacionNino: number
    telefonoContacto: number
    correoElectronico: number
    participacionPrevia: number
    actividadesInteres: number
    otrasActividades: number
    disponibilidad: number
    accesoComputadora: number
    accesoInternet: number
    motivacion: number
    expectativa: number
    aceptaTerminos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RegistroTallerSteamAvgAggregateInputType = {
    id?: true
    edad?: true
  }

  export type RegistroTallerSteamSumAggregateInputType = {
    id?: true
    edad?: true
  }

  export type RegistroTallerSteamMinAggregateInputType = {
    id?: true
    nombreCompleto?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    institucionEducativa?: true
    cursoGrado?: true
    direccion?: true
    nombreAcudiente?: true
    relacionNino?: true
    telefonoContacto?: true
    correoElectronico?: true
    participacionPrevia?: true
    otrasActividades?: true
    disponibilidad?: true
    accesoComputadora?: true
    accesoInternet?: true
    motivacion?: true
    expectativa?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroTallerSteamMaxAggregateInputType = {
    id?: true
    nombreCompleto?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    institucionEducativa?: true
    cursoGrado?: true
    direccion?: true
    nombreAcudiente?: true
    relacionNino?: true
    telefonoContacto?: true
    correoElectronico?: true
    participacionPrevia?: true
    otrasActividades?: true
    disponibilidad?: true
    accesoComputadora?: true
    accesoInternet?: true
    motivacion?: true
    expectativa?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroTallerSteamCountAggregateInputType = {
    id?: true
    nombreCompleto?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    institucionEducativa?: true
    cursoGrado?: true
    direccion?: true
    nombreAcudiente?: true
    relacionNino?: true
    telefonoContacto?: true
    correoElectronico?: true
    participacionPrevia?: true
    actividadesInteres?: true
    otrasActividades?: true
    disponibilidad?: true
    accesoComputadora?: true
    accesoInternet?: true
    motivacion?: true
    expectativa?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RegistroTallerSteamAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroTallerSteam to aggregate.
     */
    where?: RegistroTallerSteamWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroTallerSteams to fetch.
     */
    orderBy?: RegistroTallerSteamOrderByWithRelationInput | RegistroTallerSteamOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroTallerSteamWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroTallerSteams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroTallerSteams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroTallerSteams
    **/
    _count?: true | RegistroTallerSteamCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroTallerSteamAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroTallerSteamSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroTallerSteamMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroTallerSteamMaxAggregateInputType
  }

  export type GetRegistroTallerSteamAggregateType<T extends RegistroTallerSteamAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroTallerSteam]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroTallerSteam[P]>
      : GetScalarType<T[P], AggregateRegistroTallerSteam[P]>
  }




  export type RegistroTallerSteamGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroTallerSteamWhereInput
    orderBy?: RegistroTallerSteamOrderByWithAggregationInput | RegistroTallerSteamOrderByWithAggregationInput[]
    by: RegistroTallerSteamScalarFieldEnum[] | RegistroTallerSteamScalarFieldEnum
    having?: RegistroTallerSteamScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroTallerSteamCountAggregateInputType | true
    _avg?: RegistroTallerSteamAvgAggregateInputType
    _sum?: RegistroTallerSteamSumAggregateInputType
    _min?: RegistroTallerSteamMinAggregateInputType
    _max?: RegistroTallerSteamMaxAggregateInputType
  }

  export type RegistroTallerSteamGroupByOutputType = {
    id: number
    nombreCompleto: string
    fechaNacimiento: Date
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    institucionEducativa: string
    cursoGrado: string
    direccion: string
    nombreAcudiente: string
    relacionNino: string
    telefonoContacto: string
    correoElectronico: string | null
    participacionPrevia: boolean
    actividadesInteres: string[]
    otrasActividades: string | null
    disponibilidad: string
    accesoComputadora: boolean
    accesoInternet: boolean
    motivacion: string
    expectativa: string
    aceptaTerminos: boolean
    createdAt: Date
    updatedAt: Date
    _count: RegistroTallerSteamCountAggregateOutputType | null
    _avg: RegistroTallerSteamAvgAggregateOutputType | null
    _sum: RegistroTallerSteamSumAggregateOutputType | null
    _min: RegistroTallerSteamMinAggregateOutputType | null
    _max: RegistroTallerSteamMaxAggregateOutputType | null
  }

  type GetRegistroTallerSteamGroupByPayload<T extends RegistroTallerSteamGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroTallerSteamGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroTallerSteamGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroTallerSteamGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroTallerSteamGroupByOutputType[P]>
        }
      >
    >


  export type RegistroTallerSteamSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    institucionEducativa?: boolean
    cursoGrado?: boolean
    direccion?: boolean
    nombreAcudiente?: boolean
    relacionNino?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    participacionPrevia?: boolean
    actividadesInteres?: boolean
    otrasActividades?: boolean
    disponibilidad?: boolean
    accesoComputadora?: boolean
    accesoInternet?: boolean
    motivacion?: boolean
    expectativa?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroTallerSteam"]>

  export type RegistroTallerSteamSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    institucionEducativa?: boolean
    cursoGrado?: boolean
    direccion?: boolean
    nombreAcudiente?: boolean
    relacionNino?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    participacionPrevia?: boolean
    actividadesInteres?: boolean
    otrasActividades?: boolean
    disponibilidad?: boolean
    accesoComputadora?: boolean
    accesoInternet?: boolean
    motivacion?: boolean
    expectativa?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroTallerSteam"]>

  export type RegistroTallerSteamSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    institucionEducativa?: boolean
    cursoGrado?: boolean
    direccion?: boolean
    nombreAcudiente?: boolean
    relacionNino?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    participacionPrevia?: boolean
    actividadesInteres?: boolean
    otrasActividades?: boolean
    disponibilidad?: boolean
    accesoComputadora?: boolean
    accesoInternet?: boolean
    motivacion?: boolean
    expectativa?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroTallerSteam"]>

  export type RegistroTallerSteamSelectScalar = {
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    institucionEducativa?: boolean
    cursoGrado?: boolean
    direccion?: boolean
    nombreAcudiente?: boolean
    relacionNino?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    participacionPrevia?: boolean
    actividadesInteres?: boolean
    otrasActividades?: boolean
    disponibilidad?: boolean
    accesoComputadora?: boolean
    accesoInternet?: boolean
    motivacion?: boolean
    expectativa?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RegistroTallerSteamOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombreCompleto" | "fechaNacimiento" | "comuna" | "estratoSocial" | "edad" | "grupoEtnico" | "institucionEducativa" | "cursoGrado" | "direccion" | "nombreAcudiente" | "relacionNino" | "telefonoContacto" | "correoElectronico" | "participacionPrevia" | "actividadesInteres" | "otrasActividades" | "disponibilidad" | "accesoComputadora" | "accesoInternet" | "motivacion" | "expectativa" | "aceptaTerminos" | "createdAt" | "updatedAt", ExtArgs["result"]["registroTallerSteam"]>

  export type $RegistroTallerSteamPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroTallerSteam"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombreCompleto: string
      fechaNacimiento: Date
      comuna: string
      estratoSocial: $Enums.EstratoSocial
      edad: number
      grupoEtnico: $Enums.GrupoEtnico
      institucionEducativa: string
      cursoGrado: string
      direccion: string
      nombreAcudiente: string
      relacionNino: string
      telefonoContacto: string
      correoElectronico: string | null
      participacionPrevia: boolean
      actividadesInteres: string[]
      otrasActividades: string | null
      disponibilidad: string
      accesoComputadora: boolean
      accesoInternet: boolean
      motivacion: string
      expectativa: string
      aceptaTerminos: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["registroTallerSteam"]>
    composites: {}
  }

  type RegistroTallerSteamGetPayload<S extends boolean | null | undefined | RegistroTallerSteamDefaultArgs> = $Result.GetResult<Prisma.$RegistroTallerSteamPayload, S>

  type RegistroTallerSteamCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegistroTallerSteamFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegistroTallerSteamCountAggregateInputType | true
    }

  export interface RegistroTallerSteamDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroTallerSteam'], meta: { name: 'RegistroTallerSteam' } }
    /**
     * Find zero or one RegistroTallerSteam that matches the filter.
     * @param {RegistroTallerSteamFindUniqueArgs} args - Arguments to find a RegistroTallerSteam
     * @example
     * // Get one RegistroTallerSteam
     * const registroTallerSteam = await prisma.registroTallerSteam.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroTallerSteamFindUniqueArgs>(args: SelectSubset<T, RegistroTallerSteamFindUniqueArgs<ExtArgs>>): Prisma__RegistroTallerSteamClient<$Result.GetResult<Prisma.$RegistroTallerSteamPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RegistroTallerSteam that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegistroTallerSteamFindUniqueOrThrowArgs} args - Arguments to find a RegistroTallerSteam
     * @example
     * // Get one RegistroTallerSteam
     * const registroTallerSteam = await prisma.registroTallerSteam.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroTallerSteamFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroTallerSteamFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroTallerSteamClient<$Result.GetResult<Prisma.$RegistroTallerSteamPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroTallerSteam that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroTallerSteamFindFirstArgs} args - Arguments to find a RegistroTallerSteam
     * @example
     * // Get one RegistroTallerSteam
     * const registroTallerSteam = await prisma.registroTallerSteam.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroTallerSteamFindFirstArgs>(args?: SelectSubset<T, RegistroTallerSteamFindFirstArgs<ExtArgs>>): Prisma__RegistroTallerSteamClient<$Result.GetResult<Prisma.$RegistroTallerSteamPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroTallerSteam that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroTallerSteamFindFirstOrThrowArgs} args - Arguments to find a RegistroTallerSteam
     * @example
     * // Get one RegistroTallerSteam
     * const registroTallerSteam = await prisma.registroTallerSteam.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroTallerSteamFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroTallerSteamFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroTallerSteamClient<$Result.GetResult<Prisma.$RegistroTallerSteamPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RegistroTallerSteams that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroTallerSteamFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroTallerSteams
     * const registroTallerSteams = await prisma.registroTallerSteam.findMany()
     * 
     * // Get first 10 RegistroTallerSteams
     * const registroTallerSteams = await prisma.registroTallerSteam.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroTallerSteamWithIdOnly = await prisma.registroTallerSteam.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroTallerSteamFindManyArgs>(args?: SelectSubset<T, RegistroTallerSteamFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroTallerSteamPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RegistroTallerSteam.
     * @param {RegistroTallerSteamCreateArgs} args - Arguments to create a RegistroTallerSteam.
     * @example
     * // Create one RegistroTallerSteam
     * const RegistroTallerSteam = await prisma.registroTallerSteam.create({
     *   data: {
     *     // ... data to create a RegistroTallerSteam
     *   }
     * })
     * 
     */
    create<T extends RegistroTallerSteamCreateArgs>(args: SelectSubset<T, RegistroTallerSteamCreateArgs<ExtArgs>>): Prisma__RegistroTallerSteamClient<$Result.GetResult<Prisma.$RegistroTallerSteamPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RegistroTallerSteams.
     * @param {RegistroTallerSteamCreateManyArgs} args - Arguments to create many RegistroTallerSteams.
     * @example
     * // Create many RegistroTallerSteams
     * const registroTallerSteam = await prisma.registroTallerSteam.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroTallerSteamCreateManyArgs>(args?: SelectSubset<T, RegistroTallerSteamCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroTallerSteams and returns the data saved in the database.
     * @param {RegistroTallerSteamCreateManyAndReturnArgs} args - Arguments to create many RegistroTallerSteams.
     * @example
     * // Create many RegistroTallerSteams
     * const registroTallerSteam = await prisma.registroTallerSteam.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroTallerSteams and only return the `id`
     * const registroTallerSteamWithIdOnly = await prisma.registroTallerSteam.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroTallerSteamCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroTallerSteamCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroTallerSteamPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RegistroTallerSteam.
     * @param {RegistroTallerSteamDeleteArgs} args - Arguments to delete one RegistroTallerSteam.
     * @example
     * // Delete one RegistroTallerSteam
     * const RegistroTallerSteam = await prisma.registroTallerSteam.delete({
     *   where: {
     *     // ... filter to delete one RegistroTallerSteam
     *   }
     * })
     * 
     */
    delete<T extends RegistroTallerSteamDeleteArgs>(args: SelectSubset<T, RegistroTallerSteamDeleteArgs<ExtArgs>>): Prisma__RegistroTallerSteamClient<$Result.GetResult<Prisma.$RegistroTallerSteamPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RegistroTallerSteam.
     * @param {RegistroTallerSteamUpdateArgs} args - Arguments to update one RegistroTallerSteam.
     * @example
     * // Update one RegistroTallerSteam
     * const registroTallerSteam = await prisma.registroTallerSteam.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroTallerSteamUpdateArgs>(args: SelectSubset<T, RegistroTallerSteamUpdateArgs<ExtArgs>>): Prisma__RegistroTallerSteamClient<$Result.GetResult<Prisma.$RegistroTallerSteamPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RegistroTallerSteams.
     * @param {RegistroTallerSteamDeleteManyArgs} args - Arguments to filter RegistroTallerSteams to delete.
     * @example
     * // Delete a few RegistroTallerSteams
     * const { count } = await prisma.registroTallerSteam.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroTallerSteamDeleteManyArgs>(args?: SelectSubset<T, RegistroTallerSteamDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroTallerSteams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroTallerSteamUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroTallerSteams
     * const registroTallerSteam = await prisma.registroTallerSteam.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroTallerSteamUpdateManyArgs>(args: SelectSubset<T, RegistroTallerSteamUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroTallerSteams and returns the data updated in the database.
     * @param {RegistroTallerSteamUpdateManyAndReturnArgs} args - Arguments to update many RegistroTallerSteams.
     * @example
     * // Update many RegistroTallerSteams
     * const registroTallerSteam = await prisma.registroTallerSteam.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RegistroTallerSteams and only return the `id`
     * const registroTallerSteamWithIdOnly = await prisma.registroTallerSteam.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegistroTallerSteamUpdateManyAndReturnArgs>(args: SelectSubset<T, RegistroTallerSteamUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroTallerSteamPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RegistroTallerSteam.
     * @param {RegistroTallerSteamUpsertArgs} args - Arguments to update or create a RegistroTallerSteam.
     * @example
     * // Update or create a RegistroTallerSteam
     * const registroTallerSteam = await prisma.registroTallerSteam.upsert({
     *   create: {
     *     // ... data to create a RegistroTallerSteam
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroTallerSteam we want to update
     *   }
     * })
     */
    upsert<T extends RegistroTallerSteamUpsertArgs>(args: SelectSubset<T, RegistroTallerSteamUpsertArgs<ExtArgs>>): Prisma__RegistroTallerSteamClient<$Result.GetResult<Prisma.$RegistroTallerSteamPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RegistroTallerSteams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroTallerSteamCountArgs} args - Arguments to filter RegistroTallerSteams to count.
     * @example
     * // Count the number of RegistroTallerSteams
     * const count = await prisma.registroTallerSteam.count({
     *   where: {
     *     // ... the filter for the RegistroTallerSteams we want to count
     *   }
     * })
    **/
    count<T extends RegistroTallerSteamCountArgs>(
      args?: Subset<T, RegistroTallerSteamCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroTallerSteamCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroTallerSteam.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroTallerSteamAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroTallerSteamAggregateArgs>(args: Subset<T, RegistroTallerSteamAggregateArgs>): Prisma.PrismaPromise<GetRegistroTallerSteamAggregateType<T>>

    /**
     * Group by RegistroTallerSteam.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroTallerSteamGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroTallerSteamGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroTallerSteamGroupByArgs['orderBy'] }
        : { orderBy?: RegistroTallerSteamGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroTallerSteamGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroTallerSteamGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroTallerSteam model
   */
  readonly fields: RegistroTallerSteamFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroTallerSteam.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroTallerSteamClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroTallerSteam model
   */
  interface RegistroTallerSteamFieldRefs {
    readonly id: FieldRef<"RegistroTallerSteam", 'Int'>
    readonly nombreCompleto: FieldRef<"RegistroTallerSteam", 'String'>
    readonly fechaNacimiento: FieldRef<"RegistroTallerSteam", 'DateTime'>
    readonly comuna: FieldRef<"RegistroTallerSteam", 'String'>
    readonly estratoSocial: FieldRef<"RegistroTallerSteam", 'EstratoSocial'>
    readonly edad: FieldRef<"RegistroTallerSteam", 'Int'>
    readonly grupoEtnico: FieldRef<"RegistroTallerSteam", 'GrupoEtnico'>
    readonly institucionEducativa: FieldRef<"RegistroTallerSteam", 'String'>
    readonly cursoGrado: FieldRef<"RegistroTallerSteam", 'String'>
    readonly direccion: FieldRef<"RegistroTallerSteam", 'String'>
    readonly nombreAcudiente: FieldRef<"RegistroTallerSteam", 'String'>
    readonly relacionNino: FieldRef<"RegistroTallerSteam", 'String'>
    readonly telefonoContacto: FieldRef<"RegistroTallerSteam", 'String'>
    readonly correoElectronico: FieldRef<"RegistroTallerSteam", 'String'>
    readonly participacionPrevia: FieldRef<"RegistroTallerSteam", 'Boolean'>
    readonly actividadesInteres: FieldRef<"RegistroTallerSteam", 'String[]'>
    readonly otrasActividades: FieldRef<"RegistroTallerSteam", 'String'>
    readonly disponibilidad: FieldRef<"RegistroTallerSteam", 'String'>
    readonly accesoComputadora: FieldRef<"RegistroTallerSteam", 'Boolean'>
    readonly accesoInternet: FieldRef<"RegistroTallerSteam", 'Boolean'>
    readonly motivacion: FieldRef<"RegistroTallerSteam", 'String'>
    readonly expectativa: FieldRef<"RegistroTallerSteam", 'String'>
    readonly aceptaTerminos: FieldRef<"RegistroTallerSteam", 'Boolean'>
    readonly createdAt: FieldRef<"RegistroTallerSteam", 'DateTime'>
    readonly updatedAt: FieldRef<"RegistroTallerSteam", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RegistroTallerSteam findUnique
   */
  export type RegistroTallerSteamFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroTallerSteam
     */
    select?: RegistroTallerSteamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroTallerSteam
     */
    omit?: RegistroTallerSteamOmit<ExtArgs> | null
    /**
     * Filter, which RegistroTallerSteam to fetch.
     */
    where: RegistroTallerSteamWhereUniqueInput
  }

  /**
   * RegistroTallerSteam findUniqueOrThrow
   */
  export type RegistroTallerSteamFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroTallerSteam
     */
    select?: RegistroTallerSteamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroTallerSteam
     */
    omit?: RegistroTallerSteamOmit<ExtArgs> | null
    /**
     * Filter, which RegistroTallerSteam to fetch.
     */
    where: RegistroTallerSteamWhereUniqueInput
  }

  /**
   * RegistroTallerSteam findFirst
   */
  export type RegistroTallerSteamFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroTallerSteam
     */
    select?: RegistroTallerSteamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroTallerSteam
     */
    omit?: RegistroTallerSteamOmit<ExtArgs> | null
    /**
     * Filter, which RegistroTallerSteam to fetch.
     */
    where?: RegistroTallerSteamWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroTallerSteams to fetch.
     */
    orderBy?: RegistroTallerSteamOrderByWithRelationInput | RegistroTallerSteamOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroTallerSteams.
     */
    cursor?: RegistroTallerSteamWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroTallerSteams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroTallerSteams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroTallerSteams.
     */
    distinct?: RegistroTallerSteamScalarFieldEnum | RegistroTallerSteamScalarFieldEnum[]
  }

  /**
   * RegistroTallerSteam findFirstOrThrow
   */
  export type RegistroTallerSteamFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroTallerSteam
     */
    select?: RegistroTallerSteamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroTallerSteam
     */
    omit?: RegistroTallerSteamOmit<ExtArgs> | null
    /**
     * Filter, which RegistroTallerSteam to fetch.
     */
    where?: RegistroTallerSteamWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroTallerSteams to fetch.
     */
    orderBy?: RegistroTallerSteamOrderByWithRelationInput | RegistroTallerSteamOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroTallerSteams.
     */
    cursor?: RegistroTallerSteamWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroTallerSteams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroTallerSteams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroTallerSteams.
     */
    distinct?: RegistroTallerSteamScalarFieldEnum | RegistroTallerSteamScalarFieldEnum[]
  }

  /**
   * RegistroTallerSteam findMany
   */
  export type RegistroTallerSteamFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroTallerSteam
     */
    select?: RegistroTallerSteamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroTallerSteam
     */
    omit?: RegistroTallerSteamOmit<ExtArgs> | null
    /**
     * Filter, which RegistroTallerSteams to fetch.
     */
    where?: RegistroTallerSteamWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroTallerSteams to fetch.
     */
    orderBy?: RegistroTallerSteamOrderByWithRelationInput | RegistroTallerSteamOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroTallerSteams.
     */
    cursor?: RegistroTallerSteamWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroTallerSteams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroTallerSteams.
     */
    skip?: number
    distinct?: RegistroTallerSteamScalarFieldEnum | RegistroTallerSteamScalarFieldEnum[]
  }

  /**
   * RegistroTallerSteam create
   */
  export type RegistroTallerSteamCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroTallerSteam
     */
    select?: RegistroTallerSteamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroTallerSteam
     */
    omit?: RegistroTallerSteamOmit<ExtArgs> | null
    /**
     * The data needed to create a RegistroTallerSteam.
     */
    data: XOR<RegistroTallerSteamCreateInput, RegistroTallerSteamUncheckedCreateInput>
  }

  /**
   * RegistroTallerSteam createMany
   */
  export type RegistroTallerSteamCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroTallerSteams.
     */
    data: RegistroTallerSteamCreateManyInput | RegistroTallerSteamCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroTallerSteam createManyAndReturn
   */
  export type RegistroTallerSteamCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroTallerSteam
     */
    select?: RegistroTallerSteamSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroTallerSteam
     */
    omit?: RegistroTallerSteamOmit<ExtArgs> | null
    /**
     * The data used to create many RegistroTallerSteams.
     */
    data: RegistroTallerSteamCreateManyInput | RegistroTallerSteamCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroTallerSteam update
   */
  export type RegistroTallerSteamUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroTallerSteam
     */
    select?: RegistroTallerSteamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroTallerSteam
     */
    omit?: RegistroTallerSteamOmit<ExtArgs> | null
    /**
     * The data needed to update a RegistroTallerSteam.
     */
    data: XOR<RegistroTallerSteamUpdateInput, RegistroTallerSteamUncheckedUpdateInput>
    /**
     * Choose, which RegistroTallerSteam to update.
     */
    where: RegistroTallerSteamWhereUniqueInput
  }

  /**
   * RegistroTallerSteam updateMany
   */
  export type RegistroTallerSteamUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroTallerSteams.
     */
    data: XOR<RegistroTallerSteamUpdateManyMutationInput, RegistroTallerSteamUncheckedUpdateManyInput>
    /**
     * Filter which RegistroTallerSteams to update
     */
    where?: RegistroTallerSteamWhereInput
    /**
     * Limit how many RegistroTallerSteams to update.
     */
    limit?: number
  }

  /**
   * RegistroTallerSteam updateManyAndReturn
   */
  export type RegistroTallerSteamUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroTallerSteam
     */
    select?: RegistroTallerSteamSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroTallerSteam
     */
    omit?: RegistroTallerSteamOmit<ExtArgs> | null
    /**
     * The data used to update RegistroTallerSteams.
     */
    data: XOR<RegistroTallerSteamUpdateManyMutationInput, RegistroTallerSteamUncheckedUpdateManyInput>
    /**
     * Filter which RegistroTallerSteams to update
     */
    where?: RegistroTallerSteamWhereInput
    /**
     * Limit how many RegistroTallerSteams to update.
     */
    limit?: number
  }

  /**
   * RegistroTallerSteam upsert
   */
  export type RegistroTallerSteamUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroTallerSteam
     */
    select?: RegistroTallerSteamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroTallerSteam
     */
    omit?: RegistroTallerSteamOmit<ExtArgs> | null
    /**
     * The filter to search for the RegistroTallerSteam to update in case it exists.
     */
    where: RegistroTallerSteamWhereUniqueInput
    /**
     * In case the RegistroTallerSteam found by the `where` argument doesn't exist, create a new RegistroTallerSteam with this data.
     */
    create: XOR<RegistroTallerSteamCreateInput, RegistroTallerSteamUncheckedCreateInput>
    /**
     * In case the RegistroTallerSteam was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroTallerSteamUpdateInput, RegistroTallerSteamUncheckedUpdateInput>
  }

  /**
   * RegistroTallerSteam delete
   */
  export type RegistroTallerSteamDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroTallerSteam
     */
    select?: RegistroTallerSteamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroTallerSteam
     */
    omit?: RegistroTallerSteamOmit<ExtArgs> | null
    /**
     * Filter which RegistroTallerSteam to delete.
     */
    where: RegistroTallerSteamWhereUniqueInput
  }

  /**
   * RegistroTallerSteam deleteMany
   */
  export type RegistroTallerSteamDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroTallerSteams to delete
     */
    where?: RegistroTallerSteamWhereInput
    /**
     * Limit how many RegistroTallerSteams to delete.
     */
    limit?: number
  }

  /**
   * RegistroTallerSteam without action
   */
  export type RegistroTallerSteamDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroTallerSteam
     */
    select?: RegistroTallerSteamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroTallerSteam
     */
    omit?: RegistroTallerSteamOmit<ExtArgs> | null
  }


  /**
   * Model RegistroSeguridadAlimentaria
   */

  export type AggregateRegistroSeguridadAlimentaria = {
    _count: RegistroSeguridadAlimentariaCountAggregateOutputType | null
    _avg: RegistroSeguridadAlimentariaAvgAggregateOutputType | null
    _sum: RegistroSeguridadAlimentariaSumAggregateOutputType | null
    _min: RegistroSeguridadAlimentariaMinAggregateOutputType | null
    _max: RegistroSeguridadAlimentariaMaxAggregateOutputType | null
  }

  export type RegistroSeguridadAlimentariaAvgAggregateOutputType = {
    id: number | null
    hectareas: number | null
  }

  export type RegistroSeguridadAlimentariaSumAggregateOutputType = {
    id: number | null
    hectareas: number | null
  }

  export type RegistroSeguridadAlimentariaMinAggregateOutputType = {
    id: number | null
    nombreResponsable: string | null
    tipoDocumento: $Enums.TipoDocumento | null
    numeroDocumento: string | null
    fechaNacimiento: Date | null
    telefono: string | null
    correoElectronico: string | null
    direccion: string | null
    barrio: string | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    grupoEtnico: $Enums.GrupoEtnico | null
    esAgricultor: boolean | null
    tieneTierras: boolean | null
    hectareas: number | null
    pisoTermico: string | null
    tieneCultivo: boolean | null
    tiposCultivo: string | null
    participacionPrevia: boolean | null
    proyectosAnteriores: string | null
    tieneRiego: boolean | null
    tieneHerramientas: boolean | null
    tiposHerramientas: string | null
    tieneAsistenciaTecnica: boolean | null
    motivacion: string | null
    tiempoSemanal: string | null
    expectativas: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroSeguridadAlimentariaMaxAggregateOutputType = {
    id: number | null
    nombreResponsable: string | null
    tipoDocumento: $Enums.TipoDocumento | null
    numeroDocumento: string | null
    fechaNacimiento: Date | null
    telefono: string | null
    correoElectronico: string | null
    direccion: string | null
    barrio: string | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    grupoEtnico: $Enums.GrupoEtnico | null
    esAgricultor: boolean | null
    tieneTierras: boolean | null
    hectareas: number | null
    pisoTermico: string | null
    tieneCultivo: boolean | null
    tiposCultivo: string | null
    participacionPrevia: boolean | null
    proyectosAnteriores: string | null
    tieneRiego: boolean | null
    tieneHerramientas: boolean | null
    tiposHerramientas: string | null
    tieneAsistenciaTecnica: boolean | null
    motivacion: string | null
    tiempoSemanal: string | null
    expectativas: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroSeguridadAlimentariaCountAggregateOutputType = {
    id: number
    nombreResponsable: number
    tipoDocumento: number
    numeroDocumento: number
    fechaNacimiento: number
    telefono: number
    correoElectronico: number
    direccion: number
    barrio: number
    comuna: number
    estratoSocial: number
    grupoEtnico: number
    esAgricultor: number
    tieneTierras: number
    hectareas: number
    pisoTermico: number
    tieneCultivo: number
    tiposCultivo: number
    participacionPrevia: number
    proyectosAnteriores: number
    tieneRiego: number
    tieneHerramientas: number
    tiposHerramientas: number
    tieneAsistenciaTecnica: number
    motivacion: number
    tiempoSemanal: number
    expectativas: number
    aceptaTerminos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RegistroSeguridadAlimentariaAvgAggregateInputType = {
    id?: true
    hectareas?: true
  }

  export type RegistroSeguridadAlimentariaSumAggregateInputType = {
    id?: true
    hectareas?: true
  }

  export type RegistroSeguridadAlimentariaMinAggregateInputType = {
    id?: true
    nombreResponsable?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    telefono?: true
    correoElectronico?: true
    direccion?: true
    barrio?: true
    comuna?: true
    estratoSocial?: true
    grupoEtnico?: true
    esAgricultor?: true
    tieneTierras?: true
    hectareas?: true
    pisoTermico?: true
    tieneCultivo?: true
    tiposCultivo?: true
    participacionPrevia?: true
    proyectosAnteriores?: true
    tieneRiego?: true
    tieneHerramientas?: true
    tiposHerramientas?: true
    tieneAsistenciaTecnica?: true
    motivacion?: true
    tiempoSemanal?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroSeguridadAlimentariaMaxAggregateInputType = {
    id?: true
    nombreResponsable?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    telefono?: true
    correoElectronico?: true
    direccion?: true
    barrio?: true
    comuna?: true
    estratoSocial?: true
    grupoEtnico?: true
    esAgricultor?: true
    tieneTierras?: true
    hectareas?: true
    pisoTermico?: true
    tieneCultivo?: true
    tiposCultivo?: true
    participacionPrevia?: true
    proyectosAnteriores?: true
    tieneRiego?: true
    tieneHerramientas?: true
    tiposHerramientas?: true
    tieneAsistenciaTecnica?: true
    motivacion?: true
    tiempoSemanal?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroSeguridadAlimentariaCountAggregateInputType = {
    id?: true
    nombreResponsable?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    telefono?: true
    correoElectronico?: true
    direccion?: true
    barrio?: true
    comuna?: true
    estratoSocial?: true
    grupoEtnico?: true
    esAgricultor?: true
    tieneTierras?: true
    hectareas?: true
    pisoTermico?: true
    tieneCultivo?: true
    tiposCultivo?: true
    participacionPrevia?: true
    proyectosAnteriores?: true
    tieneRiego?: true
    tieneHerramientas?: true
    tiposHerramientas?: true
    tieneAsistenciaTecnica?: true
    motivacion?: true
    tiempoSemanal?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RegistroSeguridadAlimentariaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroSeguridadAlimentaria to aggregate.
     */
    where?: RegistroSeguridadAlimentariaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroSeguridadAlimentarias to fetch.
     */
    orderBy?: RegistroSeguridadAlimentariaOrderByWithRelationInput | RegistroSeguridadAlimentariaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroSeguridadAlimentariaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroSeguridadAlimentarias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroSeguridadAlimentarias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroSeguridadAlimentarias
    **/
    _count?: true | RegistroSeguridadAlimentariaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroSeguridadAlimentariaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroSeguridadAlimentariaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroSeguridadAlimentariaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroSeguridadAlimentariaMaxAggregateInputType
  }

  export type GetRegistroSeguridadAlimentariaAggregateType<T extends RegistroSeguridadAlimentariaAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroSeguridadAlimentaria]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroSeguridadAlimentaria[P]>
      : GetScalarType<T[P], AggregateRegistroSeguridadAlimentaria[P]>
  }




  export type RegistroSeguridadAlimentariaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroSeguridadAlimentariaWhereInput
    orderBy?: RegistroSeguridadAlimentariaOrderByWithAggregationInput | RegistroSeguridadAlimentariaOrderByWithAggregationInput[]
    by: RegistroSeguridadAlimentariaScalarFieldEnum[] | RegistroSeguridadAlimentariaScalarFieldEnum
    having?: RegistroSeguridadAlimentariaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroSeguridadAlimentariaCountAggregateInputType | true
    _avg?: RegistroSeguridadAlimentariaAvgAggregateInputType
    _sum?: RegistroSeguridadAlimentariaSumAggregateInputType
    _min?: RegistroSeguridadAlimentariaMinAggregateInputType
    _max?: RegistroSeguridadAlimentariaMaxAggregateInputType
  }

  export type RegistroSeguridadAlimentariaGroupByOutputType = {
    id: number
    nombreResponsable: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date
    telefono: string
    correoElectronico: string | null
    direccion: string
    barrio: string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    grupoEtnico: $Enums.GrupoEtnico
    esAgricultor: boolean
    tieneTierras: boolean
    hectareas: number | null
    pisoTermico: string | null
    tieneCultivo: boolean
    tiposCultivo: string | null
    participacionPrevia: boolean
    proyectosAnteriores: string | null
    tieneRiego: boolean
    tieneHerramientas: boolean
    tiposHerramientas: string | null
    tieneAsistenciaTecnica: boolean
    motivacion: string
    tiempoSemanal: string
    expectativas: string
    aceptaTerminos: boolean
    createdAt: Date
    updatedAt: Date
    _count: RegistroSeguridadAlimentariaCountAggregateOutputType | null
    _avg: RegistroSeguridadAlimentariaAvgAggregateOutputType | null
    _sum: RegistroSeguridadAlimentariaSumAggregateOutputType | null
    _min: RegistroSeguridadAlimentariaMinAggregateOutputType | null
    _max: RegistroSeguridadAlimentariaMaxAggregateOutputType | null
  }

  type GetRegistroSeguridadAlimentariaGroupByPayload<T extends RegistroSeguridadAlimentariaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroSeguridadAlimentariaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroSeguridadAlimentariaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroSeguridadAlimentariaGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroSeguridadAlimentariaGroupByOutputType[P]>
        }
      >
    >


  export type RegistroSeguridadAlimentariaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreResponsable?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    telefono?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    barrio?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    grupoEtnico?: boolean
    esAgricultor?: boolean
    tieneTierras?: boolean
    hectareas?: boolean
    pisoTermico?: boolean
    tieneCultivo?: boolean
    tiposCultivo?: boolean
    participacionPrevia?: boolean
    proyectosAnteriores?: boolean
    tieneRiego?: boolean
    tieneHerramientas?: boolean
    tiposHerramientas?: boolean
    tieneAsistenciaTecnica?: boolean
    motivacion?: boolean
    tiempoSemanal?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroSeguridadAlimentaria"]>

  export type RegistroSeguridadAlimentariaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreResponsable?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    telefono?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    barrio?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    grupoEtnico?: boolean
    esAgricultor?: boolean
    tieneTierras?: boolean
    hectareas?: boolean
    pisoTermico?: boolean
    tieneCultivo?: boolean
    tiposCultivo?: boolean
    participacionPrevia?: boolean
    proyectosAnteriores?: boolean
    tieneRiego?: boolean
    tieneHerramientas?: boolean
    tiposHerramientas?: boolean
    tieneAsistenciaTecnica?: boolean
    motivacion?: boolean
    tiempoSemanal?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroSeguridadAlimentaria"]>

  export type RegistroSeguridadAlimentariaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreResponsable?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    telefono?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    barrio?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    grupoEtnico?: boolean
    esAgricultor?: boolean
    tieneTierras?: boolean
    hectareas?: boolean
    pisoTermico?: boolean
    tieneCultivo?: boolean
    tiposCultivo?: boolean
    participacionPrevia?: boolean
    proyectosAnteriores?: boolean
    tieneRiego?: boolean
    tieneHerramientas?: boolean
    tiposHerramientas?: boolean
    tieneAsistenciaTecnica?: boolean
    motivacion?: boolean
    tiempoSemanal?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroSeguridadAlimentaria"]>

  export type RegistroSeguridadAlimentariaSelectScalar = {
    id?: boolean
    nombreResponsable?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    telefono?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    barrio?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    grupoEtnico?: boolean
    esAgricultor?: boolean
    tieneTierras?: boolean
    hectareas?: boolean
    pisoTermico?: boolean
    tieneCultivo?: boolean
    tiposCultivo?: boolean
    participacionPrevia?: boolean
    proyectosAnteriores?: boolean
    tieneRiego?: boolean
    tieneHerramientas?: boolean
    tiposHerramientas?: boolean
    tieneAsistenciaTecnica?: boolean
    motivacion?: boolean
    tiempoSemanal?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RegistroSeguridadAlimentariaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombreResponsable" | "tipoDocumento" | "numeroDocumento" | "fechaNacimiento" | "telefono" | "correoElectronico" | "direccion" | "barrio" | "comuna" | "estratoSocial" | "grupoEtnico" | "esAgricultor" | "tieneTierras" | "hectareas" | "pisoTermico" | "tieneCultivo" | "tiposCultivo" | "participacionPrevia" | "proyectosAnteriores" | "tieneRiego" | "tieneHerramientas" | "tiposHerramientas" | "tieneAsistenciaTecnica" | "motivacion" | "tiempoSemanal" | "expectativas" | "aceptaTerminos" | "createdAt" | "updatedAt", ExtArgs["result"]["registroSeguridadAlimentaria"]>

  export type $RegistroSeguridadAlimentariaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroSeguridadAlimentaria"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombreResponsable: string
      tipoDocumento: $Enums.TipoDocumento
      numeroDocumento: string
      fechaNacimiento: Date
      telefono: string
      correoElectronico: string | null
      direccion: string
      barrio: string
      comuna: string
      estratoSocial: $Enums.EstratoSocial
      grupoEtnico: $Enums.GrupoEtnico
      esAgricultor: boolean
      tieneTierras: boolean
      hectareas: number | null
      pisoTermico: string | null
      tieneCultivo: boolean
      tiposCultivo: string | null
      participacionPrevia: boolean
      proyectosAnteriores: string | null
      tieneRiego: boolean
      tieneHerramientas: boolean
      tiposHerramientas: string | null
      tieneAsistenciaTecnica: boolean
      motivacion: string
      tiempoSemanal: string
      expectativas: string
      aceptaTerminos: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["registroSeguridadAlimentaria"]>
    composites: {}
  }

  type RegistroSeguridadAlimentariaGetPayload<S extends boolean | null | undefined | RegistroSeguridadAlimentariaDefaultArgs> = $Result.GetResult<Prisma.$RegistroSeguridadAlimentariaPayload, S>

  type RegistroSeguridadAlimentariaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegistroSeguridadAlimentariaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegistroSeguridadAlimentariaCountAggregateInputType | true
    }

  export interface RegistroSeguridadAlimentariaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroSeguridadAlimentaria'], meta: { name: 'RegistroSeguridadAlimentaria' } }
    /**
     * Find zero or one RegistroSeguridadAlimentaria that matches the filter.
     * @param {RegistroSeguridadAlimentariaFindUniqueArgs} args - Arguments to find a RegistroSeguridadAlimentaria
     * @example
     * // Get one RegistroSeguridadAlimentaria
     * const registroSeguridadAlimentaria = await prisma.registroSeguridadAlimentaria.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroSeguridadAlimentariaFindUniqueArgs>(args: SelectSubset<T, RegistroSeguridadAlimentariaFindUniqueArgs<ExtArgs>>): Prisma__RegistroSeguridadAlimentariaClient<$Result.GetResult<Prisma.$RegistroSeguridadAlimentariaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RegistroSeguridadAlimentaria that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegistroSeguridadAlimentariaFindUniqueOrThrowArgs} args - Arguments to find a RegistroSeguridadAlimentaria
     * @example
     * // Get one RegistroSeguridadAlimentaria
     * const registroSeguridadAlimentaria = await prisma.registroSeguridadAlimentaria.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroSeguridadAlimentariaFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroSeguridadAlimentariaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroSeguridadAlimentariaClient<$Result.GetResult<Prisma.$RegistroSeguridadAlimentariaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroSeguridadAlimentaria that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSeguridadAlimentariaFindFirstArgs} args - Arguments to find a RegistroSeguridadAlimentaria
     * @example
     * // Get one RegistroSeguridadAlimentaria
     * const registroSeguridadAlimentaria = await prisma.registroSeguridadAlimentaria.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroSeguridadAlimentariaFindFirstArgs>(args?: SelectSubset<T, RegistroSeguridadAlimentariaFindFirstArgs<ExtArgs>>): Prisma__RegistroSeguridadAlimentariaClient<$Result.GetResult<Prisma.$RegistroSeguridadAlimentariaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroSeguridadAlimentaria that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSeguridadAlimentariaFindFirstOrThrowArgs} args - Arguments to find a RegistroSeguridadAlimentaria
     * @example
     * // Get one RegistroSeguridadAlimentaria
     * const registroSeguridadAlimentaria = await prisma.registroSeguridadAlimentaria.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroSeguridadAlimentariaFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroSeguridadAlimentariaFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroSeguridadAlimentariaClient<$Result.GetResult<Prisma.$RegistroSeguridadAlimentariaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RegistroSeguridadAlimentarias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSeguridadAlimentariaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroSeguridadAlimentarias
     * const registroSeguridadAlimentarias = await prisma.registroSeguridadAlimentaria.findMany()
     * 
     * // Get first 10 RegistroSeguridadAlimentarias
     * const registroSeguridadAlimentarias = await prisma.registroSeguridadAlimentaria.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroSeguridadAlimentariaWithIdOnly = await prisma.registroSeguridadAlimentaria.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroSeguridadAlimentariaFindManyArgs>(args?: SelectSubset<T, RegistroSeguridadAlimentariaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroSeguridadAlimentariaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RegistroSeguridadAlimentaria.
     * @param {RegistroSeguridadAlimentariaCreateArgs} args - Arguments to create a RegistroSeguridadAlimentaria.
     * @example
     * // Create one RegistroSeguridadAlimentaria
     * const RegistroSeguridadAlimentaria = await prisma.registroSeguridadAlimentaria.create({
     *   data: {
     *     // ... data to create a RegistroSeguridadAlimentaria
     *   }
     * })
     * 
     */
    create<T extends RegistroSeguridadAlimentariaCreateArgs>(args: SelectSubset<T, RegistroSeguridadAlimentariaCreateArgs<ExtArgs>>): Prisma__RegistroSeguridadAlimentariaClient<$Result.GetResult<Prisma.$RegistroSeguridadAlimentariaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RegistroSeguridadAlimentarias.
     * @param {RegistroSeguridadAlimentariaCreateManyArgs} args - Arguments to create many RegistroSeguridadAlimentarias.
     * @example
     * // Create many RegistroSeguridadAlimentarias
     * const registroSeguridadAlimentaria = await prisma.registroSeguridadAlimentaria.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroSeguridadAlimentariaCreateManyArgs>(args?: SelectSubset<T, RegistroSeguridadAlimentariaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroSeguridadAlimentarias and returns the data saved in the database.
     * @param {RegistroSeguridadAlimentariaCreateManyAndReturnArgs} args - Arguments to create many RegistroSeguridadAlimentarias.
     * @example
     * // Create many RegistroSeguridadAlimentarias
     * const registroSeguridadAlimentaria = await prisma.registroSeguridadAlimentaria.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroSeguridadAlimentarias and only return the `id`
     * const registroSeguridadAlimentariaWithIdOnly = await prisma.registroSeguridadAlimentaria.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroSeguridadAlimentariaCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroSeguridadAlimentariaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroSeguridadAlimentariaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RegistroSeguridadAlimentaria.
     * @param {RegistroSeguridadAlimentariaDeleteArgs} args - Arguments to delete one RegistroSeguridadAlimentaria.
     * @example
     * // Delete one RegistroSeguridadAlimentaria
     * const RegistroSeguridadAlimentaria = await prisma.registroSeguridadAlimentaria.delete({
     *   where: {
     *     // ... filter to delete one RegistroSeguridadAlimentaria
     *   }
     * })
     * 
     */
    delete<T extends RegistroSeguridadAlimentariaDeleteArgs>(args: SelectSubset<T, RegistroSeguridadAlimentariaDeleteArgs<ExtArgs>>): Prisma__RegistroSeguridadAlimentariaClient<$Result.GetResult<Prisma.$RegistroSeguridadAlimentariaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RegistroSeguridadAlimentaria.
     * @param {RegistroSeguridadAlimentariaUpdateArgs} args - Arguments to update one RegistroSeguridadAlimentaria.
     * @example
     * // Update one RegistroSeguridadAlimentaria
     * const registroSeguridadAlimentaria = await prisma.registroSeguridadAlimentaria.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroSeguridadAlimentariaUpdateArgs>(args: SelectSubset<T, RegistroSeguridadAlimentariaUpdateArgs<ExtArgs>>): Prisma__RegistroSeguridadAlimentariaClient<$Result.GetResult<Prisma.$RegistroSeguridadAlimentariaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RegistroSeguridadAlimentarias.
     * @param {RegistroSeguridadAlimentariaDeleteManyArgs} args - Arguments to filter RegistroSeguridadAlimentarias to delete.
     * @example
     * // Delete a few RegistroSeguridadAlimentarias
     * const { count } = await prisma.registroSeguridadAlimentaria.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroSeguridadAlimentariaDeleteManyArgs>(args?: SelectSubset<T, RegistroSeguridadAlimentariaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroSeguridadAlimentarias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSeguridadAlimentariaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroSeguridadAlimentarias
     * const registroSeguridadAlimentaria = await prisma.registroSeguridadAlimentaria.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroSeguridadAlimentariaUpdateManyArgs>(args: SelectSubset<T, RegistroSeguridadAlimentariaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroSeguridadAlimentarias and returns the data updated in the database.
     * @param {RegistroSeguridadAlimentariaUpdateManyAndReturnArgs} args - Arguments to update many RegistroSeguridadAlimentarias.
     * @example
     * // Update many RegistroSeguridadAlimentarias
     * const registroSeguridadAlimentaria = await prisma.registroSeguridadAlimentaria.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RegistroSeguridadAlimentarias and only return the `id`
     * const registroSeguridadAlimentariaWithIdOnly = await prisma.registroSeguridadAlimentaria.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegistroSeguridadAlimentariaUpdateManyAndReturnArgs>(args: SelectSubset<T, RegistroSeguridadAlimentariaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroSeguridadAlimentariaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RegistroSeguridadAlimentaria.
     * @param {RegistroSeguridadAlimentariaUpsertArgs} args - Arguments to update or create a RegistroSeguridadAlimentaria.
     * @example
     * // Update or create a RegistroSeguridadAlimentaria
     * const registroSeguridadAlimentaria = await prisma.registroSeguridadAlimentaria.upsert({
     *   create: {
     *     // ... data to create a RegistroSeguridadAlimentaria
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroSeguridadAlimentaria we want to update
     *   }
     * })
     */
    upsert<T extends RegistroSeguridadAlimentariaUpsertArgs>(args: SelectSubset<T, RegistroSeguridadAlimentariaUpsertArgs<ExtArgs>>): Prisma__RegistroSeguridadAlimentariaClient<$Result.GetResult<Prisma.$RegistroSeguridadAlimentariaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RegistroSeguridadAlimentarias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSeguridadAlimentariaCountArgs} args - Arguments to filter RegistroSeguridadAlimentarias to count.
     * @example
     * // Count the number of RegistroSeguridadAlimentarias
     * const count = await prisma.registroSeguridadAlimentaria.count({
     *   where: {
     *     // ... the filter for the RegistroSeguridadAlimentarias we want to count
     *   }
     * })
    **/
    count<T extends RegistroSeguridadAlimentariaCountArgs>(
      args?: Subset<T, RegistroSeguridadAlimentariaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroSeguridadAlimentariaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroSeguridadAlimentaria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSeguridadAlimentariaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroSeguridadAlimentariaAggregateArgs>(args: Subset<T, RegistroSeguridadAlimentariaAggregateArgs>): Prisma.PrismaPromise<GetRegistroSeguridadAlimentariaAggregateType<T>>

    /**
     * Group by RegistroSeguridadAlimentaria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSeguridadAlimentariaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroSeguridadAlimentariaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroSeguridadAlimentariaGroupByArgs['orderBy'] }
        : { orderBy?: RegistroSeguridadAlimentariaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroSeguridadAlimentariaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroSeguridadAlimentariaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroSeguridadAlimentaria model
   */
  readonly fields: RegistroSeguridadAlimentariaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroSeguridadAlimentaria.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroSeguridadAlimentariaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroSeguridadAlimentaria model
   */
  interface RegistroSeguridadAlimentariaFieldRefs {
    readonly id: FieldRef<"RegistroSeguridadAlimentaria", 'Int'>
    readonly nombreResponsable: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly tipoDocumento: FieldRef<"RegistroSeguridadAlimentaria", 'TipoDocumento'>
    readonly numeroDocumento: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly fechaNacimiento: FieldRef<"RegistroSeguridadAlimentaria", 'DateTime'>
    readonly telefono: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly correoElectronico: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly direccion: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly barrio: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly comuna: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly estratoSocial: FieldRef<"RegistroSeguridadAlimentaria", 'EstratoSocial'>
    readonly grupoEtnico: FieldRef<"RegistroSeguridadAlimentaria", 'GrupoEtnico'>
    readonly esAgricultor: FieldRef<"RegistroSeguridadAlimentaria", 'Boolean'>
    readonly tieneTierras: FieldRef<"RegistroSeguridadAlimentaria", 'Boolean'>
    readonly hectareas: FieldRef<"RegistroSeguridadAlimentaria", 'Float'>
    readonly pisoTermico: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly tieneCultivo: FieldRef<"RegistroSeguridadAlimentaria", 'Boolean'>
    readonly tiposCultivo: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly participacionPrevia: FieldRef<"RegistroSeguridadAlimentaria", 'Boolean'>
    readonly proyectosAnteriores: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly tieneRiego: FieldRef<"RegistroSeguridadAlimentaria", 'Boolean'>
    readonly tieneHerramientas: FieldRef<"RegistroSeguridadAlimentaria", 'Boolean'>
    readonly tiposHerramientas: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly tieneAsistenciaTecnica: FieldRef<"RegistroSeguridadAlimentaria", 'Boolean'>
    readonly motivacion: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly tiempoSemanal: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly expectativas: FieldRef<"RegistroSeguridadAlimentaria", 'String'>
    readonly aceptaTerminos: FieldRef<"RegistroSeguridadAlimentaria", 'Boolean'>
    readonly createdAt: FieldRef<"RegistroSeguridadAlimentaria", 'DateTime'>
    readonly updatedAt: FieldRef<"RegistroSeguridadAlimentaria", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RegistroSeguridadAlimentaria findUnique
   */
  export type RegistroSeguridadAlimentariaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSeguridadAlimentaria
     */
    select?: RegistroSeguridadAlimentariaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSeguridadAlimentaria
     */
    omit?: RegistroSeguridadAlimentariaOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSeguridadAlimentaria to fetch.
     */
    where: RegistroSeguridadAlimentariaWhereUniqueInput
  }

  /**
   * RegistroSeguridadAlimentaria findUniqueOrThrow
   */
  export type RegistroSeguridadAlimentariaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSeguridadAlimentaria
     */
    select?: RegistroSeguridadAlimentariaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSeguridadAlimentaria
     */
    omit?: RegistroSeguridadAlimentariaOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSeguridadAlimentaria to fetch.
     */
    where: RegistroSeguridadAlimentariaWhereUniqueInput
  }

  /**
   * RegistroSeguridadAlimentaria findFirst
   */
  export type RegistroSeguridadAlimentariaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSeguridadAlimentaria
     */
    select?: RegistroSeguridadAlimentariaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSeguridadAlimentaria
     */
    omit?: RegistroSeguridadAlimentariaOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSeguridadAlimentaria to fetch.
     */
    where?: RegistroSeguridadAlimentariaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroSeguridadAlimentarias to fetch.
     */
    orderBy?: RegistroSeguridadAlimentariaOrderByWithRelationInput | RegistroSeguridadAlimentariaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroSeguridadAlimentarias.
     */
    cursor?: RegistroSeguridadAlimentariaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroSeguridadAlimentarias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroSeguridadAlimentarias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroSeguridadAlimentarias.
     */
    distinct?: RegistroSeguridadAlimentariaScalarFieldEnum | RegistroSeguridadAlimentariaScalarFieldEnum[]
  }

  /**
   * RegistroSeguridadAlimentaria findFirstOrThrow
   */
  export type RegistroSeguridadAlimentariaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSeguridadAlimentaria
     */
    select?: RegistroSeguridadAlimentariaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSeguridadAlimentaria
     */
    omit?: RegistroSeguridadAlimentariaOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSeguridadAlimentaria to fetch.
     */
    where?: RegistroSeguridadAlimentariaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroSeguridadAlimentarias to fetch.
     */
    orderBy?: RegistroSeguridadAlimentariaOrderByWithRelationInput | RegistroSeguridadAlimentariaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroSeguridadAlimentarias.
     */
    cursor?: RegistroSeguridadAlimentariaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroSeguridadAlimentarias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroSeguridadAlimentarias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroSeguridadAlimentarias.
     */
    distinct?: RegistroSeguridadAlimentariaScalarFieldEnum | RegistroSeguridadAlimentariaScalarFieldEnum[]
  }

  /**
   * RegistroSeguridadAlimentaria findMany
   */
  export type RegistroSeguridadAlimentariaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSeguridadAlimentaria
     */
    select?: RegistroSeguridadAlimentariaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSeguridadAlimentaria
     */
    omit?: RegistroSeguridadAlimentariaOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSeguridadAlimentarias to fetch.
     */
    where?: RegistroSeguridadAlimentariaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroSeguridadAlimentarias to fetch.
     */
    orderBy?: RegistroSeguridadAlimentariaOrderByWithRelationInput | RegistroSeguridadAlimentariaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroSeguridadAlimentarias.
     */
    cursor?: RegistroSeguridadAlimentariaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroSeguridadAlimentarias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroSeguridadAlimentarias.
     */
    skip?: number
    distinct?: RegistroSeguridadAlimentariaScalarFieldEnum | RegistroSeguridadAlimentariaScalarFieldEnum[]
  }

  /**
   * RegistroSeguridadAlimentaria create
   */
  export type RegistroSeguridadAlimentariaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSeguridadAlimentaria
     */
    select?: RegistroSeguridadAlimentariaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSeguridadAlimentaria
     */
    omit?: RegistroSeguridadAlimentariaOmit<ExtArgs> | null
    /**
     * The data needed to create a RegistroSeguridadAlimentaria.
     */
    data: XOR<RegistroSeguridadAlimentariaCreateInput, RegistroSeguridadAlimentariaUncheckedCreateInput>
  }

  /**
   * RegistroSeguridadAlimentaria createMany
   */
  export type RegistroSeguridadAlimentariaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroSeguridadAlimentarias.
     */
    data: RegistroSeguridadAlimentariaCreateManyInput | RegistroSeguridadAlimentariaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroSeguridadAlimentaria createManyAndReturn
   */
  export type RegistroSeguridadAlimentariaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSeguridadAlimentaria
     */
    select?: RegistroSeguridadAlimentariaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSeguridadAlimentaria
     */
    omit?: RegistroSeguridadAlimentariaOmit<ExtArgs> | null
    /**
     * The data used to create many RegistroSeguridadAlimentarias.
     */
    data: RegistroSeguridadAlimentariaCreateManyInput | RegistroSeguridadAlimentariaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroSeguridadAlimentaria update
   */
  export type RegistroSeguridadAlimentariaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSeguridadAlimentaria
     */
    select?: RegistroSeguridadAlimentariaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSeguridadAlimentaria
     */
    omit?: RegistroSeguridadAlimentariaOmit<ExtArgs> | null
    /**
     * The data needed to update a RegistroSeguridadAlimentaria.
     */
    data: XOR<RegistroSeguridadAlimentariaUpdateInput, RegistroSeguridadAlimentariaUncheckedUpdateInput>
    /**
     * Choose, which RegistroSeguridadAlimentaria to update.
     */
    where: RegistroSeguridadAlimentariaWhereUniqueInput
  }

  /**
   * RegistroSeguridadAlimentaria updateMany
   */
  export type RegistroSeguridadAlimentariaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroSeguridadAlimentarias.
     */
    data: XOR<RegistroSeguridadAlimentariaUpdateManyMutationInput, RegistroSeguridadAlimentariaUncheckedUpdateManyInput>
    /**
     * Filter which RegistroSeguridadAlimentarias to update
     */
    where?: RegistroSeguridadAlimentariaWhereInput
    /**
     * Limit how many RegistroSeguridadAlimentarias to update.
     */
    limit?: number
  }

  /**
   * RegistroSeguridadAlimentaria updateManyAndReturn
   */
  export type RegistroSeguridadAlimentariaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSeguridadAlimentaria
     */
    select?: RegistroSeguridadAlimentariaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSeguridadAlimentaria
     */
    omit?: RegistroSeguridadAlimentariaOmit<ExtArgs> | null
    /**
     * The data used to update RegistroSeguridadAlimentarias.
     */
    data: XOR<RegistroSeguridadAlimentariaUpdateManyMutationInput, RegistroSeguridadAlimentariaUncheckedUpdateManyInput>
    /**
     * Filter which RegistroSeguridadAlimentarias to update
     */
    where?: RegistroSeguridadAlimentariaWhereInput
    /**
     * Limit how many RegistroSeguridadAlimentarias to update.
     */
    limit?: number
  }

  /**
   * RegistroSeguridadAlimentaria upsert
   */
  export type RegistroSeguridadAlimentariaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSeguridadAlimentaria
     */
    select?: RegistroSeguridadAlimentariaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSeguridadAlimentaria
     */
    omit?: RegistroSeguridadAlimentariaOmit<ExtArgs> | null
    /**
     * The filter to search for the RegistroSeguridadAlimentaria to update in case it exists.
     */
    where: RegistroSeguridadAlimentariaWhereUniqueInput
    /**
     * In case the RegistroSeguridadAlimentaria found by the `where` argument doesn't exist, create a new RegistroSeguridadAlimentaria with this data.
     */
    create: XOR<RegistroSeguridadAlimentariaCreateInput, RegistroSeguridadAlimentariaUncheckedCreateInput>
    /**
     * In case the RegistroSeguridadAlimentaria was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroSeguridadAlimentariaUpdateInput, RegistroSeguridadAlimentariaUncheckedUpdateInput>
  }

  /**
   * RegistroSeguridadAlimentaria delete
   */
  export type RegistroSeguridadAlimentariaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSeguridadAlimentaria
     */
    select?: RegistroSeguridadAlimentariaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSeguridadAlimentaria
     */
    omit?: RegistroSeguridadAlimentariaOmit<ExtArgs> | null
    /**
     * Filter which RegistroSeguridadAlimentaria to delete.
     */
    where: RegistroSeguridadAlimentariaWhereUniqueInput
  }

  /**
   * RegistroSeguridadAlimentaria deleteMany
   */
  export type RegistroSeguridadAlimentariaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroSeguridadAlimentarias to delete
     */
    where?: RegistroSeguridadAlimentariaWhereInput
    /**
     * Limit how many RegistroSeguridadAlimentarias to delete.
     */
    limit?: number
  }

  /**
   * RegistroSeguridadAlimentaria without action
   */
  export type RegistroSeguridadAlimentariaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSeguridadAlimentaria
     */
    select?: RegistroSeguridadAlimentariaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSeguridadAlimentaria
     */
    omit?: RegistroSeguridadAlimentariaOmit<ExtArgs> | null
  }


  /**
   * Model RegistroRefuerzoEscolar
   */

  export type AggregateRegistroRefuerzoEscolar = {
    _count: RegistroRefuerzoEscolarCountAggregateOutputType | null
    _avg: RegistroRefuerzoEscolarAvgAggregateOutputType | null
    _sum: RegistroRefuerzoEscolarSumAggregateOutputType | null
    _min: RegistroRefuerzoEscolarMinAggregateOutputType | null
    _max: RegistroRefuerzoEscolarMaxAggregateOutputType | null
  }

  export type RegistroRefuerzoEscolarAvgAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type RegistroRefuerzoEscolarSumAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type RegistroRefuerzoEscolarMinAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    fechaNacimiento: Date | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    institucionEducativa: string | null
    cursoGrado: string | null
    direccion: string | null
    nombreAcudiente: string | null
    relacionNino: string | null
    telefonoContacto: string | null
    correoElectronico: string | null
    otrasAreas: string | null
    refuerzoPrevio: boolean | null
    dificultadesAcademicas: string | null
    disponibilidad: string | null
    accesoMateriales: boolean | null
    apoyoHabitos: boolean | null
    motivacion: string | null
    expectativas: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroRefuerzoEscolarMaxAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    fechaNacimiento: Date | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    institucionEducativa: string | null
    cursoGrado: string | null
    direccion: string | null
    nombreAcudiente: string | null
    relacionNino: string | null
    telefonoContacto: string | null
    correoElectronico: string | null
    otrasAreas: string | null
    refuerzoPrevio: boolean | null
    dificultadesAcademicas: string | null
    disponibilidad: string | null
    accesoMateriales: boolean | null
    apoyoHabitos: boolean | null
    motivacion: string | null
    expectativas: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroRefuerzoEscolarCountAggregateOutputType = {
    id: number
    nombreCompleto: number
    fechaNacimiento: number
    comuna: number
    estratoSocial: number
    edad: number
    grupoEtnico: number
    institucionEducativa: number
    cursoGrado: number
    direccion: number
    nombreAcudiente: number
    relacionNino: number
    telefonoContacto: number
    correoElectronico: number
    areasAyuda: number
    otrasAreas: number
    refuerzoPrevio: number
    dificultadesAcademicas: number
    disponibilidad: number
    accesoMateriales: number
    apoyoHabitos: number
    motivacion: number
    expectativas: number
    aceptaTerminos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RegistroRefuerzoEscolarAvgAggregateInputType = {
    id?: true
    edad?: true
  }

  export type RegistroRefuerzoEscolarSumAggregateInputType = {
    id?: true
    edad?: true
  }

  export type RegistroRefuerzoEscolarMinAggregateInputType = {
    id?: true
    nombreCompleto?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    institucionEducativa?: true
    cursoGrado?: true
    direccion?: true
    nombreAcudiente?: true
    relacionNino?: true
    telefonoContacto?: true
    correoElectronico?: true
    otrasAreas?: true
    refuerzoPrevio?: true
    dificultadesAcademicas?: true
    disponibilidad?: true
    accesoMateriales?: true
    apoyoHabitos?: true
    motivacion?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroRefuerzoEscolarMaxAggregateInputType = {
    id?: true
    nombreCompleto?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    institucionEducativa?: true
    cursoGrado?: true
    direccion?: true
    nombreAcudiente?: true
    relacionNino?: true
    telefonoContacto?: true
    correoElectronico?: true
    otrasAreas?: true
    refuerzoPrevio?: true
    dificultadesAcademicas?: true
    disponibilidad?: true
    accesoMateriales?: true
    apoyoHabitos?: true
    motivacion?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroRefuerzoEscolarCountAggregateInputType = {
    id?: true
    nombreCompleto?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    institucionEducativa?: true
    cursoGrado?: true
    direccion?: true
    nombreAcudiente?: true
    relacionNino?: true
    telefonoContacto?: true
    correoElectronico?: true
    areasAyuda?: true
    otrasAreas?: true
    refuerzoPrevio?: true
    dificultadesAcademicas?: true
    disponibilidad?: true
    accesoMateriales?: true
    apoyoHabitos?: true
    motivacion?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RegistroRefuerzoEscolarAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroRefuerzoEscolar to aggregate.
     */
    where?: RegistroRefuerzoEscolarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroRefuerzoEscolars to fetch.
     */
    orderBy?: RegistroRefuerzoEscolarOrderByWithRelationInput | RegistroRefuerzoEscolarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroRefuerzoEscolarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroRefuerzoEscolars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroRefuerzoEscolars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroRefuerzoEscolars
    **/
    _count?: true | RegistroRefuerzoEscolarCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroRefuerzoEscolarAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroRefuerzoEscolarSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroRefuerzoEscolarMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroRefuerzoEscolarMaxAggregateInputType
  }

  export type GetRegistroRefuerzoEscolarAggregateType<T extends RegistroRefuerzoEscolarAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroRefuerzoEscolar]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroRefuerzoEscolar[P]>
      : GetScalarType<T[P], AggregateRegistroRefuerzoEscolar[P]>
  }




  export type RegistroRefuerzoEscolarGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroRefuerzoEscolarWhereInput
    orderBy?: RegistroRefuerzoEscolarOrderByWithAggregationInput | RegistroRefuerzoEscolarOrderByWithAggregationInput[]
    by: RegistroRefuerzoEscolarScalarFieldEnum[] | RegistroRefuerzoEscolarScalarFieldEnum
    having?: RegistroRefuerzoEscolarScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroRefuerzoEscolarCountAggregateInputType | true
    _avg?: RegistroRefuerzoEscolarAvgAggregateInputType
    _sum?: RegistroRefuerzoEscolarSumAggregateInputType
    _min?: RegistroRefuerzoEscolarMinAggregateInputType
    _max?: RegistroRefuerzoEscolarMaxAggregateInputType
  }

  export type RegistroRefuerzoEscolarGroupByOutputType = {
    id: number
    nombreCompleto: string
    fechaNacimiento: Date
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    institucionEducativa: string
    cursoGrado: string
    direccion: string
    nombreAcudiente: string
    relacionNino: string
    telefonoContacto: string
    correoElectronico: string | null
    areasAyuda: string[]
    otrasAreas: string | null
    refuerzoPrevio: boolean
    dificultadesAcademicas: string
    disponibilidad: string
    accesoMateriales: boolean
    apoyoHabitos: boolean
    motivacion: string
    expectativas: string
    aceptaTerminos: boolean
    createdAt: Date
    updatedAt: Date
    _count: RegistroRefuerzoEscolarCountAggregateOutputType | null
    _avg: RegistroRefuerzoEscolarAvgAggregateOutputType | null
    _sum: RegistroRefuerzoEscolarSumAggregateOutputType | null
    _min: RegistroRefuerzoEscolarMinAggregateOutputType | null
    _max: RegistroRefuerzoEscolarMaxAggregateOutputType | null
  }

  type GetRegistroRefuerzoEscolarGroupByPayload<T extends RegistroRefuerzoEscolarGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroRefuerzoEscolarGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroRefuerzoEscolarGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroRefuerzoEscolarGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroRefuerzoEscolarGroupByOutputType[P]>
        }
      >
    >


  export type RegistroRefuerzoEscolarSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    institucionEducativa?: boolean
    cursoGrado?: boolean
    direccion?: boolean
    nombreAcudiente?: boolean
    relacionNino?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    areasAyuda?: boolean
    otrasAreas?: boolean
    refuerzoPrevio?: boolean
    dificultadesAcademicas?: boolean
    disponibilidad?: boolean
    accesoMateriales?: boolean
    apoyoHabitos?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroRefuerzoEscolar"]>

  export type RegistroRefuerzoEscolarSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    institucionEducativa?: boolean
    cursoGrado?: boolean
    direccion?: boolean
    nombreAcudiente?: boolean
    relacionNino?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    areasAyuda?: boolean
    otrasAreas?: boolean
    refuerzoPrevio?: boolean
    dificultadesAcademicas?: boolean
    disponibilidad?: boolean
    accesoMateriales?: boolean
    apoyoHabitos?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroRefuerzoEscolar"]>

  export type RegistroRefuerzoEscolarSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    institucionEducativa?: boolean
    cursoGrado?: boolean
    direccion?: boolean
    nombreAcudiente?: boolean
    relacionNino?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    areasAyuda?: boolean
    otrasAreas?: boolean
    refuerzoPrevio?: boolean
    dificultadesAcademicas?: boolean
    disponibilidad?: boolean
    accesoMateriales?: boolean
    apoyoHabitos?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroRefuerzoEscolar"]>

  export type RegistroRefuerzoEscolarSelectScalar = {
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    institucionEducativa?: boolean
    cursoGrado?: boolean
    direccion?: boolean
    nombreAcudiente?: boolean
    relacionNino?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    areasAyuda?: boolean
    otrasAreas?: boolean
    refuerzoPrevio?: boolean
    dificultadesAcademicas?: boolean
    disponibilidad?: boolean
    accesoMateriales?: boolean
    apoyoHabitos?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RegistroRefuerzoEscolarOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombreCompleto" | "fechaNacimiento" | "comuna" | "estratoSocial" | "edad" | "grupoEtnico" | "institucionEducativa" | "cursoGrado" | "direccion" | "nombreAcudiente" | "relacionNino" | "telefonoContacto" | "correoElectronico" | "areasAyuda" | "otrasAreas" | "refuerzoPrevio" | "dificultadesAcademicas" | "disponibilidad" | "accesoMateriales" | "apoyoHabitos" | "motivacion" | "expectativas" | "aceptaTerminos" | "createdAt" | "updatedAt", ExtArgs["result"]["registroRefuerzoEscolar"]>

  export type $RegistroRefuerzoEscolarPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroRefuerzoEscolar"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombreCompleto: string
      fechaNacimiento: Date
      comuna: string
      estratoSocial: $Enums.EstratoSocial
      edad: number
      grupoEtnico: $Enums.GrupoEtnico
      institucionEducativa: string
      cursoGrado: string
      direccion: string
      nombreAcudiente: string
      relacionNino: string
      telefonoContacto: string
      correoElectronico: string | null
      areasAyuda: string[]
      otrasAreas: string | null
      refuerzoPrevio: boolean
      dificultadesAcademicas: string
      disponibilidad: string
      accesoMateriales: boolean
      apoyoHabitos: boolean
      motivacion: string
      expectativas: string
      aceptaTerminos: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["registroRefuerzoEscolar"]>
    composites: {}
  }

  type RegistroRefuerzoEscolarGetPayload<S extends boolean | null | undefined | RegistroRefuerzoEscolarDefaultArgs> = $Result.GetResult<Prisma.$RegistroRefuerzoEscolarPayload, S>

  type RegistroRefuerzoEscolarCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegistroRefuerzoEscolarFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegistroRefuerzoEscolarCountAggregateInputType | true
    }

  export interface RegistroRefuerzoEscolarDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroRefuerzoEscolar'], meta: { name: 'RegistroRefuerzoEscolar' } }
    /**
     * Find zero or one RegistroRefuerzoEscolar that matches the filter.
     * @param {RegistroRefuerzoEscolarFindUniqueArgs} args - Arguments to find a RegistroRefuerzoEscolar
     * @example
     * // Get one RegistroRefuerzoEscolar
     * const registroRefuerzoEscolar = await prisma.registroRefuerzoEscolar.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroRefuerzoEscolarFindUniqueArgs>(args: SelectSubset<T, RegistroRefuerzoEscolarFindUniqueArgs<ExtArgs>>): Prisma__RegistroRefuerzoEscolarClient<$Result.GetResult<Prisma.$RegistroRefuerzoEscolarPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RegistroRefuerzoEscolar that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegistroRefuerzoEscolarFindUniqueOrThrowArgs} args - Arguments to find a RegistroRefuerzoEscolar
     * @example
     * // Get one RegistroRefuerzoEscolar
     * const registroRefuerzoEscolar = await prisma.registroRefuerzoEscolar.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroRefuerzoEscolarFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroRefuerzoEscolarFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroRefuerzoEscolarClient<$Result.GetResult<Prisma.$RegistroRefuerzoEscolarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroRefuerzoEscolar that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroRefuerzoEscolarFindFirstArgs} args - Arguments to find a RegistroRefuerzoEscolar
     * @example
     * // Get one RegistroRefuerzoEscolar
     * const registroRefuerzoEscolar = await prisma.registroRefuerzoEscolar.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroRefuerzoEscolarFindFirstArgs>(args?: SelectSubset<T, RegistroRefuerzoEscolarFindFirstArgs<ExtArgs>>): Prisma__RegistroRefuerzoEscolarClient<$Result.GetResult<Prisma.$RegistroRefuerzoEscolarPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroRefuerzoEscolar that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroRefuerzoEscolarFindFirstOrThrowArgs} args - Arguments to find a RegistroRefuerzoEscolar
     * @example
     * // Get one RegistroRefuerzoEscolar
     * const registroRefuerzoEscolar = await prisma.registroRefuerzoEscolar.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroRefuerzoEscolarFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroRefuerzoEscolarFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroRefuerzoEscolarClient<$Result.GetResult<Prisma.$RegistroRefuerzoEscolarPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RegistroRefuerzoEscolars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroRefuerzoEscolarFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroRefuerzoEscolars
     * const registroRefuerzoEscolars = await prisma.registroRefuerzoEscolar.findMany()
     * 
     * // Get first 10 RegistroRefuerzoEscolars
     * const registroRefuerzoEscolars = await prisma.registroRefuerzoEscolar.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroRefuerzoEscolarWithIdOnly = await prisma.registroRefuerzoEscolar.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroRefuerzoEscolarFindManyArgs>(args?: SelectSubset<T, RegistroRefuerzoEscolarFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroRefuerzoEscolarPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RegistroRefuerzoEscolar.
     * @param {RegistroRefuerzoEscolarCreateArgs} args - Arguments to create a RegistroRefuerzoEscolar.
     * @example
     * // Create one RegistroRefuerzoEscolar
     * const RegistroRefuerzoEscolar = await prisma.registroRefuerzoEscolar.create({
     *   data: {
     *     // ... data to create a RegistroRefuerzoEscolar
     *   }
     * })
     * 
     */
    create<T extends RegistroRefuerzoEscolarCreateArgs>(args: SelectSubset<T, RegistroRefuerzoEscolarCreateArgs<ExtArgs>>): Prisma__RegistroRefuerzoEscolarClient<$Result.GetResult<Prisma.$RegistroRefuerzoEscolarPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RegistroRefuerzoEscolars.
     * @param {RegistroRefuerzoEscolarCreateManyArgs} args - Arguments to create many RegistroRefuerzoEscolars.
     * @example
     * // Create many RegistroRefuerzoEscolars
     * const registroRefuerzoEscolar = await prisma.registroRefuerzoEscolar.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroRefuerzoEscolarCreateManyArgs>(args?: SelectSubset<T, RegistroRefuerzoEscolarCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroRefuerzoEscolars and returns the data saved in the database.
     * @param {RegistroRefuerzoEscolarCreateManyAndReturnArgs} args - Arguments to create many RegistroRefuerzoEscolars.
     * @example
     * // Create many RegistroRefuerzoEscolars
     * const registroRefuerzoEscolar = await prisma.registroRefuerzoEscolar.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroRefuerzoEscolars and only return the `id`
     * const registroRefuerzoEscolarWithIdOnly = await prisma.registroRefuerzoEscolar.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroRefuerzoEscolarCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroRefuerzoEscolarCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroRefuerzoEscolarPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RegistroRefuerzoEscolar.
     * @param {RegistroRefuerzoEscolarDeleteArgs} args - Arguments to delete one RegistroRefuerzoEscolar.
     * @example
     * // Delete one RegistroRefuerzoEscolar
     * const RegistroRefuerzoEscolar = await prisma.registroRefuerzoEscolar.delete({
     *   where: {
     *     // ... filter to delete one RegistroRefuerzoEscolar
     *   }
     * })
     * 
     */
    delete<T extends RegistroRefuerzoEscolarDeleteArgs>(args: SelectSubset<T, RegistroRefuerzoEscolarDeleteArgs<ExtArgs>>): Prisma__RegistroRefuerzoEscolarClient<$Result.GetResult<Prisma.$RegistroRefuerzoEscolarPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RegistroRefuerzoEscolar.
     * @param {RegistroRefuerzoEscolarUpdateArgs} args - Arguments to update one RegistroRefuerzoEscolar.
     * @example
     * // Update one RegistroRefuerzoEscolar
     * const registroRefuerzoEscolar = await prisma.registroRefuerzoEscolar.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroRefuerzoEscolarUpdateArgs>(args: SelectSubset<T, RegistroRefuerzoEscolarUpdateArgs<ExtArgs>>): Prisma__RegistroRefuerzoEscolarClient<$Result.GetResult<Prisma.$RegistroRefuerzoEscolarPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RegistroRefuerzoEscolars.
     * @param {RegistroRefuerzoEscolarDeleteManyArgs} args - Arguments to filter RegistroRefuerzoEscolars to delete.
     * @example
     * // Delete a few RegistroRefuerzoEscolars
     * const { count } = await prisma.registroRefuerzoEscolar.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroRefuerzoEscolarDeleteManyArgs>(args?: SelectSubset<T, RegistroRefuerzoEscolarDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroRefuerzoEscolars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroRefuerzoEscolarUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroRefuerzoEscolars
     * const registroRefuerzoEscolar = await prisma.registroRefuerzoEscolar.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroRefuerzoEscolarUpdateManyArgs>(args: SelectSubset<T, RegistroRefuerzoEscolarUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroRefuerzoEscolars and returns the data updated in the database.
     * @param {RegistroRefuerzoEscolarUpdateManyAndReturnArgs} args - Arguments to update many RegistroRefuerzoEscolars.
     * @example
     * // Update many RegistroRefuerzoEscolars
     * const registroRefuerzoEscolar = await prisma.registroRefuerzoEscolar.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RegistroRefuerzoEscolars and only return the `id`
     * const registroRefuerzoEscolarWithIdOnly = await prisma.registroRefuerzoEscolar.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegistroRefuerzoEscolarUpdateManyAndReturnArgs>(args: SelectSubset<T, RegistroRefuerzoEscolarUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroRefuerzoEscolarPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RegistroRefuerzoEscolar.
     * @param {RegistroRefuerzoEscolarUpsertArgs} args - Arguments to update or create a RegistroRefuerzoEscolar.
     * @example
     * // Update or create a RegistroRefuerzoEscolar
     * const registroRefuerzoEscolar = await prisma.registroRefuerzoEscolar.upsert({
     *   create: {
     *     // ... data to create a RegistroRefuerzoEscolar
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroRefuerzoEscolar we want to update
     *   }
     * })
     */
    upsert<T extends RegistroRefuerzoEscolarUpsertArgs>(args: SelectSubset<T, RegistroRefuerzoEscolarUpsertArgs<ExtArgs>>): Prisma__RegistroRefuerzoEscolarClient<$Result.GetResult<Prisma.$RegistroRefuerzoEscolarPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RegistroRefuerzoEscolars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroRefuerzoEscolarCountArgs} args - Arguments to filter RegistroRefuerzoEscolars to count.
     * @example
     * // Count the number of RegistroRefuerzoEscolars
     * const count = await prisma.registroRefuerzoEscolar.count({
     *   where: {
     *     // ... the filter for the RegistroRefuerzoEscolars we want to count
     *   }
     * })
    **/
    count<T extends RegistroRefuerzoEscolarCountArgs>(
      args?: Subset<T, RegistroRefuerzoEscolarCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroRefuerzoEscolarCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroRefuerzoEscolar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroRefuerzoEscolarAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroRefuerzoEscolarAggregateArgs>(args: Subset<T, RegistroRefuerzoEscolarAggregateArgs>): Prisma.PrismaPromise<GetRegistroRefuerzoEscolarAggregateType<T>>

    /**
     * Group by RegistroRefuerzoEscolar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroRefuerzoEscolarGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroRefuerzoEscolarGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroRefuerzoEscolarGroupByArgs['orderBy'] }
        : { orderBy?: RegistroRefuerzoEscolarGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroRefuerzoEscolarGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroRefuerzoEscolarGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroRefuerzoEscolar model
   */
  readonly fields: RegistroRefuerzoEscolarFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroRefuerzoEscolar.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroRefuerzoEscolarClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroRefuerzoEscolar model
   */
  interface RegistroRefuerzoEscolarFieldRefs {
    readonly id: FieldRef<"RegistroRefuerzoEscolar", 'Int'>
    readonly nombreCompleto: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly fechaNacimiento: FieldRef<"RegistroRefuerzoEscolar", 'DateTime'>
    readonly comuna: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly estratoSocial: FieldRef<"RegistroRefuerzoEscolar", 'EstratoSocial'>
    readonly edad: FieldRef<"RegistroRefuerzoEscolar", 'Int'>
    readonly grupoEtnico: FieldRef<"RegistroRefuerzoEscolar", 'GrupoEtnico'>
    readonly institucionEducativa: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly cursoGrado: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly direccion: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly nombreAcudiente: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly relacionNino: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly telefonoContacto: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly correoElectronico: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly areasAyuda: FieldRef<"RegistroRefuerzoEscolar", 'String[]'>
    readonly otrasAreas: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly refuerzoPrevio: FieldRef<"RegistroRefuerzoEscolar", 'Boolean'>
    readonly dificultadesAcademicas: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly disponibilidad: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly accesoMateriales: FieldRef<"RegistroRefuerzoEscolar", 'Boolean'>
    readonly apoyoHabitos: FieldRef<"RegistroRefuerzoEscolar", 'Boolean'>
    readonly motivacion: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly expectativas: FieldRef<"RegistroRefuerzoEscolar", 'String'>
    readonly aceptaTerminos: FieldRef<"RegistroRefuerzoEscolar", 'Boolean'>
    readonly createdAt: FieldRef<"RegistroRefuerzoEscolar", 'DateTime'>
    readonly updatedAt: FieldRef<"RegistroRefuerzoEscolar", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RegistroRefuerzoEscolar findUnique
   */
  export type RegistroRefuerzoEscolarFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroRefuerzoEscolar
     */
    select?: RegistroRefuerzoEscolarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroRefuerzoEscolar
     */
    omit?: RegistroRefuerzoEscolarOmit<ExtArgs> | null
    /**
     * Filter, which RegistroRefuerzoEscolar to fetch.
     */
    where: RegistroRefuerzoEscolarWhereUniqueInput
  }

  /**
   * RegistroRefuerzoEscolar findUniqueOrThrow
   */
  export type RegistroRefuerzoEscolarFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroRefuerzoEscolar
     */
    select?: RegistroRefuerzoEscolarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroRefuerzoEscolar
     */
    omit?: RegistroRefuerzoEscolarOmit<ExtArgs> | null
    /**
     * Filter, which RegistroRefuerzoEscolar to fetch.
     */
    where: RegistroRefuerzoEscolarWhereUniqueInput
  }

  /**
   * RegistroRefuerzoEscolar findFirst
   */
  export type RegistroRefuerzoEscolarFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroRefuerzoEscolar
     */
    select?: RegistroRefuerzoEscolarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroRefuerzoEscolar
     */
    omit?: RegistroRefuerzoEscolarOmit<ExtArgs> | null
    /**
     * Filter, which RegistroRefuerzoEscolar to fetch.
     */
    where?: RegistroRefuerzoEscolarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroRefuerzoEscolars to fetch.
     */
    orderBy?: RegistroRefuerzoEscolarOrderByWithRelationInput | RegistroRefuerzoEscolarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroRefuerzoEscolars.
     */
    cursor?: RegistroRefuerzoEscolarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroRefuerzoEscolars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroRefuerzoEscolars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroRefuerzoEscolars.
     */
    distinct?: RegistroRefuerzoEscolarScalarFieldEnum | RegistroRefuerzoEscolarScalarFieldEnum[]
  }

  /**
   * RegistroRefuerzoEscolar findFirstOrThrow
   */
  export type RegistroRefuerzoEscolarFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroRefuerzoEscolar
     */
    select?: RegistroRefuerzoEscolarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroRefuerzoEscolar
     */
    omit?: RegistroRefuerzoEscolarOmit<ExtArgs> | null
    /**
     * Filter, which RegistroRefuerzoEscolar to fetch.
     */
    where?: RegistroRefuerzoEscolarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroRefuerzoEscolars to fetch.
     */
    orderBy?: RegistroRefuerzoEscolarOrderByWithRelationInput | RegistroRefuerzoEscolarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroRefuerzoEscolars.
     */
    cursor?: RegistroRefuerzoEscolarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroRefuerzoEscolars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroRefuerzoEscolars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroRefuerzoEscolars.
     */
    distinct?: RegistroRefuerzoEscolarScalarFieldEnum | RegistroRefuerzoEscolarScalarFieldEnum[]
  }

  /**
   * RegistroRefuerzoEscolar findMany
   */
  export type RegistroRefuerzoEscolarFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroRefuerzoEscolar
     */
    select?: RegistroRefuerzoEscolarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroRefuerzoEscolar
     */
    omit?: RegistroRefuerzoEscolarOmit<ExtArgs> | null
    /**
     * Filter, which RegistroRefuerzoEscolars to fetch.
     */
    where?: RegistroRefuerzoEscolarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroRefuerzoEscolars to fetch.
     */
    orderBy?: RegistroRefuerzoEscolarOrderByWithRelationInput | RegistroRefuerzoEscolarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroRefuerzoEscolars.
     */
    cursor?: RegistroRefuerzoEscolarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroRefuerzoEscolars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroRefuerzoEscolars.
     */
    skip?: number
    distinct?: RegistroRefuerzoEscolarScalarFieldEnum | RegistroRefuerzoEscolarScalarFieldEnum[]
  }

  /**
   * RegistroRefuerzoEscolar create
   */
  export type RegistroRefuerzoEscolarCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroRefuerzoEscolar
     */
    select?: RegistroRefuerzoEscolarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroRefuerzoEscolar
     */
    omit?: RegistroRefuerzoEscolarOmit<ExtArgs> | null
    /**
     * The data needed to create a RegistroRefuerzoEscolar.
     */
    data: XOR<RegistroRefuerzoEscolarCreateInput, RegistroRefuerzoEscolarUncheckedCreateInput>
  }

  /**
   * RegistroRefuerzoEscolar createMany
   */
  export type RegistroRefuerzoEscolarCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroRefuerzoEscolars.
     */
    data: RegistroRefuerzoEscolarCreateManyInput | RegistroRefuerzoEscolarCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroRefuerzoEscolar createManyAndReturn
   */
  export type RegistroRefuerzoEscolarCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroRefuerzoEscolar
     */
    select?: RegistroRefuerzoEscolarSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroRefuerzoEscolar
     */
    omit?: RegistroRefuerzoEscolarOmit<ExtArgs> | null
    /**
     * The data used to create many RegistroRefuerzoEscolars.
     */
    data: RegistroRefuerzoEscolarCreateManyInput | RegistroRefuerzoEscolarCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroRefuerzoEscolar update
   */
  export type RegistroRefuerzoEscolarUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroRefuerzoEscolar
     */
    select?: RegistroRefuerzoEscolarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroRefuerzoEscolar
     */
    omit?: RegistroRefuerzoEscolarOmit<ExtArgs> | null
    /**
     * The data needed to update a RegistroRefuerzoEscolar.
     */
    data: XOR<RegistroRefuerzoEscolarUpdateInput, RegistroRefuerzoEscolarUncheckedUpdateInput>
    /**
     * Choose, which RegistroRefuerzoEscolar to update.
     */
    where: RegistroRefuerzoEscolarWhereUniqueInput
  }

  /**
   * RegistroRefuerzoEscolar updateMany
   */
  export type RegistroRefuerzoEscolarUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroRefuerzoEscolars.
     */
    data: XOR<RegistroRefuerzoEscolarUpdateManyMutationInput, RegistroRefuerzoEscolarUncheckedUpdateManyInput>
    /**
     * Filter which RegistroRefuerzoEscolars to update
     */
    where?: RegistroRefuerzoEscolarWhereInput
    /**
     * Limit how many RegistroRefuerzoEscolars to update.
     */
    limit?: number
  }

  /**
   * RegistroRefuerzoEscolar updateManyAndReturn
   */
  export type RegistroRefuerzoEscolarUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroRefuerzoEscolar
     */
    select?: RegistroRefuerzoEscolarSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroRefuerzoEscolar
     */
    omit?: RegistroRefuerzoEscolarOmit<ExtArgs> | null
    /**
     * The data used to update RegistroRefuerzoEscolars.
     */
    data: XOR<RegistroRefuerzoEscolarUpdateManyMutationInput, RegistroRefuerzoEscolarUncheckedUpdateManyInput>
    /**
     * Filter which RegistroRefuerzoEscolars to update
     */
    where?: RegistroRefuerzoEscolarWhereInput
    /**
     * Limit how many RegistroRefuerzoEscolars to update.
     */
    limit?: number
  }

  /**
   * RegistroRefuerzoEscolar upsert
   */
  export type RegistroRefuerzoEscolarUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroRefuerzoEscolar
     */
    select?: RegistroRefuerzoEscolarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroRefuerzoEscolar
     */
    omit?: RegistroRefuerzoEscolarOmit<ExtArgs> | null
    /**
     * The filter to search for the RegistroRefuerzoEscolar to update in case it exists.
     */
    where: RegistroRefuerzoEscolarWhereUniqueInput
    /**
     * In case the RegistroRefuerzoEscolar found by the `where` argument doesn't exist, create a new RegistroRefuerzoEscolar with this data.
     */
    create: XOR<RegistroRefuerzoEscolarCreateInput, RegistroRefuerzoEscolarUncheckedCreateInput>
    /**
     * In case the RegistroRefuerzoEscolar was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroRefuerzoEscolarUpdateInput, RegistroRefuerzoEscolarUncheckedUpdateInput>
  }

  /**
   * RegistroRefuerzoEscolar delete
   */
  export type RegistroRefuerzoEscolarDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroRefuerzoEscolar
     */
    select?: RegistroRefuerzoEscolarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroRefuerzoEscolar
     */
    omit?: RegistroRefuerzoEscolarOmit<ExtArgs> | null
    /**
     * Filter which RegistroRefuerzoEscolar to delete.
     */
    where: RegistroRefuerzoEscolarWhereUniqueInput
  }

  /**
   * RegistroRefuerzoEscolar deleteMany
   */
  export type RegistroRefuerzoEscolarDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroRefuerzoEscolars to delete
     */
    where?: RegistroRefuerzoEscolarWhereInput
    /**
     * Limit how many RegistroRefuerzoEscolars to delete.
     */
    limit?: number
  }

  /**
   * RegistroRefuerzoEscolar without action
   */
  export type RegistroRefuerzoEscolarDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroRefuerzoEscolar
     */
    select?: RegistroRefuerzoEscolarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroRefuerzoEscolar
     */
    omit?: RegistroRefuerzoEscolarOmit<ExtArgs> | null
  }


  /**
   * Model RegistroSoftwareFactory
   */

  export type AggregateRegistroSoftwareFactory = {
    _count: RegistroSoftwareFactoryCountAggregateOutputType | null
    _avg: RegistroSoftwareFactoryAvgAggregateOutputType | null
    _sum: RegistroSoftwareFactorySumAggregateOutputType | null
    _min: RegistroSoftwareFactoryMinAggregateOutputType | null
    _max: RegistroSoftwareFactoryMaxAggregateOutputType | null
  }

  export type RegistroSoftwareFactoryAvgAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type RegistroSoftwareFactorySumAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type RegistroSoftwareFactoryMinAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    tipoDocumento: $Enums.TipoDocumento | null
    numeroDocumento: string | null
    fechaNacimiento: Date | null
    telefonoContacto: string | null
    correoElectronico: string | null
    direccion: string | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    modalidadVinculacion: string | null
    institucionEducativa: string | null
    programaAcademico: string | null
    semestreNivel: string | null
    tiempoDisponible: string | null
    proyectosRealizados: string | null
    otrasAreas: string | null
    experienciaAgile: string | null
    motivacion: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroSoftwareFactoryMaxAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    tipoDocumento: $Enums.TipoDocumento | null
    numeroDocumento: string | null
    fechaNacimiento: Date | null
    telefonoContacto: string | null
    correoElectronico: string | null
    direccion: string | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    modalidadVinculacion: string | null
    institucionEducativa: string | null
    programaAcademico: string | null
    semestreNivel: string | null
    tiempoDisponible: string | null
    proyectosRealizados: string | null
    otrasAreas: string | null
    experienciaAgile: string | null
    motivacion: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroSoftwareFactoryCountAggregateOutputType = {
    id: number
    nombreCompleto: number
    tipoDocumento: number
    numeroDocumento: number
    fechaNacimiento: number
    telefonoContacto: number
    correoElectronico: number
    direccion: number
    comuna: number
    estratoSocial: number
    edad: number
    grupoEtnico: number
    modalidadVinculacion: number
    institucionEducativa: number
    programaAcademico: number
    semestreNivel: number
    tiempoDisponible: number
    tecnologias: number
    proyectosRealizados: number
    areasInteres: number
    otrasAreas: number
    experienciaAgile: number
    motivacion: number
    aceptaTerminos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RegistroSoftwareFactoryAvgAggregateInputType = {
    id?: true
    edad?: true
  }

  export type RegistroSoftwareFactorySumAggregateInputType = {
    id?: true
    edad?: true
  }

  export type RegistroSoftwareFactoryMinAggregateInputType = {
    id?: true
    nombreCompleto?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    modalidadVinculacion?: true
    institucionEducativa?: true
    programaAcademico?: true
    semestreNivel?: true
    tiempoDisponible?: true
    proyectosRealizados?: true
    otrasAreas?: true
    experienciaAgile?: true
    motivacion?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroSoftwareFactoryMaxAggregateInputType = {
    id?: true
    nombreCompleto?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    modalidadVinculacion?: true
    institucionEducativa?: true
    programaAcademico?: true
    semestreNivel?: true
    tiempoDisponible?: true
    proyectosRealizados?: true
    otrasAreas?: true
    experienciaAgile?: true
    motivacion?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroSoftwareFactoryCountAggregateInputType = {
    id?: true
    nombreCompleto?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    modalidadVinculacion?: true
    institucionEducativa?: true
    programaAcademico?: true
    semestreNivel?: true
    tiempoDisponible?: true
    tecnologias?: true
    proyectosRealizados?: true
    areasInteres?: true
    otrasAreas?: true
    experienciaAgile?: true
    motivacion?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RegistroSoftwareFactoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroSoftwareFactory to aggregate.
     */
    where?: RegistroSoftwareFactoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroSoftwareFactories to fetch.
     */
    orderBy?: RegistroSoftwareFactoryOrderByWithRelationInput | RegistroSoftwareFactoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroSoftwareFactoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroSoftwareFactories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroSoftwareFactories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroSoftwareFactories
    **/
    _count?: true | RegistroSoftwareFactoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroSoftwareFactoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroSoftwareFactorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroSoftwareFactoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroSoftwareFactoryMaxAggregateInputType
  }

  export type GetRegistroSoftwareFactoryAggregateType<T extends RegistroSoftwareFactoryAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroSoftwareFactory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroSoftwareFactory[P]>
      : GetScalarType<T[P], AggregateRegistroSoftwareFactory[P]>
  }




  export type RegistroSoftwareFactoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroSoftwareFactoryWhereInput
    orderBy?: RegistroSoftwareFactoryOrderByWithAggregationInput | RegistroSoftwareFactoryOrderByWithAggregationInput[]
    by: RegistroSoftwareFactoryScalarFieldEnum[] | RegistroSoftwareFactoryScalarFieldEnum
    having?: RegistroSoftwareFactoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroSoftwareFactoryCountAggregateInputType | true
    _avg?: RegistroSoftwareFactoryAvgAggregateInputType
    _sum?: RegistroSoftwareFactorySumAggregateInputType
    _min?: RegistroSoftwareFactoryMinAggregateInputType
    _max?: RegistroSoftwareFactoryMaxAggregateInputType
  }

  export type RegistroSoftwareFactoryGroupByOutputType = {
    id: number
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date
    telefonoContacto: string
    correoElectronico: string | null
    direccion: string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    modalidadVinculacion: string
    institucionEducativa: string
    programaAcademico: string
    semestreNivel: string
    tiempoDisponible: string
    tecnologias: string[]
    proyectosRealizados: string | null
    areasInteres: string[]
    otrasAreas: string | null
    experienciaAgile: string | null
    motivacion: string
    aceptaTerminos: boolean
    createdAt: Date
    updatedAt: Date
    _count: RegistroSoftwareFactoryCountAggregateOutputType | null
    _avg: RegistroSoftwareFactoryAvgAggregateOutputType | null
    _sum: RegistroSoftwareFactorySumAggregateOutputType | null
    _min: RegistroSoftwareFactoryMinAggregateOutputType | null
    _max: RegistroSoftwareFactoryMaxAggregateOutputType | null
  }

  type GetRegistroSoftwareFactoryGroupByPayload<T extends RegistroSoftwareFactoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroSoftwareFactoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroSoftwareFactoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroSoftwareFactoryGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroSoftwareFactoryGroupByOutputType[P]>
        }
      >
    >


  export type RegistroSoftwareFactorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    modalidadVinculacion?: boolean
    institucionEducativa?: boolean
    programaAcademico?: boolean
    semestreNivel?: boolean
    tiempoDisponible?: boolean
    tecnologias?: boolean
    proyectosRealizados?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    experienciaAgile?: boolean
    motivacion?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroSoftwareFactory"]>

  export type RegistroSoftwareFactorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    modalidadVinculacion?: boolean
    institucionEducativa?: boolean
    programaAcademico?: boolean
    semestreNivel?: boolean
    tiempoDisponible?: boolean
    tecnologias?: boolean
    proyectosRealizados?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    experienciaAgile?: boolean
    motivacion?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroSoftwareFactory"]>

  export type RegistroSoftwareFactorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    modalidadVinculacion?: boolean
    institucionEducativa?: boolean
    programaAcademico?: boolean
    semestreNivel?: boolean
    tiempoDisponible?: boolean
    tecnologias?: boolean
    proyectosRealizados?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    experienciaAgile?: boolean
    motivacion?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroSoftwareFactory"]>

  export type RegistroSoftwareFactorySelectScalar = {
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    modalidadVinculacion?: boolean
    institucionEducativa?: boolean
    programaAcademico?: boolean
    semestreNivel?: boolean
    tiempoDisponible?: boolean
    tecnologias?: boolean
    proyectosRealizados?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    experienciaAgile?: boolean
    motivacion?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RegistroSoftwareFactoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombreCompleto" | "tipoDocumento" | "numeroDocumento" | "fechaNacimiento" | "telefonoContacto" | "correoElectronico" | "direccion" | "comuna" | "estratoSocial" | "edad" | "grupoEtnico" | "modalidadVinculacion" | "institucionEducativa" | "programaAcademico" | "semestreNivel" | "tiempoDisponible" | "tecnologias" | "proyectosRealizados" | "areasInteres" | "otrasAreas" | "experienciaAgile" | "motivacion" | "aceptaTerminos" | "createdAt" | "updatedAt", ExtArgs["result"]["registroSoftwareFactory"]>

  export type $RegistroSoftwareFactoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroSoftwareFactory"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombreCompleto: string
      tipoDocumento: $Enums.TipoDocumento
      numeroDocumento: string
      fechaNacimiento: Date
      telefonoContacto: string
      correoElectronico: string | null
      direccion: string
      comuna: string
      estratoSocial: $Enums.EstratoSocial
      edad: number
      grupoEtnico: $Enums.GrupoEtnico
      modalidadVinculacion: string
      institucionEducativa: string
      programaAcademico: string
      semestreNivel: string
      tiempoDisponible: string
      tecnologias: string[]
      proyectosRealizados: string | null
      areasInteres: string[]
      otrasAreas: string | null
      experienciaAgile: string | null
      motivacion: string
      aceptaTerminos: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["registroSoftwareFactory"]>
    composites: {}
  }

  type RegistroSoftwareFactoryGetPayload<S extends boolean | null | undefined | RegistroSoftwareFactoryDefaultArgs> = $Result.GetResult<Prisma.$RegistroSoftwareFactoryPayload, S>

  type RegistroSoftwareFactoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegistroSoftwareFactoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegistroSoftwareFactoryCountAggregateInputType | true
    }

  export interface RegistroSoftwareFactoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroSoftwareFactory'], meta: { name: 'RegistroSoftwareFactory' } }
    /**
     * Find zero or one RegistroSoftwareFactory that matches the filter.
     * @param {RegistroSoftwareFactoryFindUniqueArgs} args - Arguments to find a RegistroSoftwareFactory
     * @example
     * // Get one RegistroSoftwareFactory
     * const registroSoftwareFactory = await prisma.registroSoftwareFactory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroSoftwareFactoryFindUniqueArgs>(args: SelectSubset<T, RegistroSoftwareFactoryFindUniqueArgs<ExtArgs>>): Prisma__RegistroSoftwareFactoryClient<$Result.GetResult<Prisma.$RegistroSoftwareFactoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RegistroSoftwareFactory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegistroSoftwareFactoryFindUniqueOrThrowArgs} args - Arguments to find a RegistroSoftwareFactory
     * @example
     * // Get one RegistroSoftwareFactory
     * const registroSoftwareFactory = await prisma.registroSoftwareFactory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroSoftwareFactoryFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroSoftwareFactoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroSoftwareFactoryClient<$Result.GetResult<Prisma.$RegistroSoftwareFactoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroSoftwareFactory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSoftwareFactoryFindFirstArgs} args - Arguments to find a RegistroSoftwareFactory
     * @example
     * // Get one RegistroSoftwareFactory
     * const registroSoftwareFactory = await prisma.registroSoftwareFactory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroSoftwareFactoryFindFirstArgs>(args?: SelectSubset<T, RegistroSoftwareFactoryFindFirstArgs<ExtArgs>>): Prisma__RegistroSoftwareFactoryClient<$Result.GetResult<Prisma.$RegistroSoftwareFactoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroSoftwareFactory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSoftwareFactoryFindFirstOrThrowArgs} args - Arguments to find a RegistroSoftwareFactory
     * @example
     * // Get one RegistroSoftwareFactory
     * const registroSoftwareFactory = await prisma.registroSoftwareFactory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroSoftwareFactoryFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroSoftwareFactoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroSoftwareFactoryClient<$Result.GetResult<Prisma.$RegistroSoftwareFactoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RegistroSoftwareFactories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSoftwareFactoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroSoftwareFactories
     * const registroSoftwareFactories = await prisma.registroSoftwareFactory.findMany()
     * 
     * // Get first 10 RegistroSoftwareFactories
     * const registroSoftwareFactories = await prisma.registroSoftwareFactory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroSoftwareFactoryWithIdOnly = await prisma.registroSoftwareFactory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroSoftwareFactoryFindManyArgs>(args?: SelectSubset<T, RegistroSoftwareFactoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroSoftwareFactoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RegistroSoftwareFactory.
     * @param {RegistroSoftwareFactoryCreateArgs} args - Arguments to create a RegistroSoftwareFactory.
     * @example
     * // Create one RegistroSoftwareFactory
     * const RegistroSoftwareFactory = await prisma.registroSoftwareFactory.create({
     *   data: {
     *     // ... data to create a RegistroSoftwareFactory
     *   }
     * })
     * 
     */
    create<T extends RegistroSoftwareFactoryCreateArgs>(args: SelectSubset<T, RegistroSoftwareFactoryCreateArgs<ExtArgs>>): Prisma__RegistroSoftwareFactoryClient<$Result.GetResult<Prisma.$RegistroSoftwareFactoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RegistroSoftwareFactories.
     * @param {RegistroSoftwareFactoryCreateManyArgs} args - Arguments to create many RegistroSoftwareFactories.
     * @example
     * // Create many RegistroSoftwareFactories
     * const registroSoftwareFactory = await prisma.registroSoftwareFactory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroSoftwareFactoryCreateManyArgs>(args?: SelectSubset<T, RegistroSoftwareFactoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroSoftwareFactories and returns the data saved in the database.
     * @param {RegistroSoftwareFactoryCreateManyAndReturnArgs} args - Arguments to create many RegistroSoftwareFactories.
     * @example
     * // Create many RegistroSoftwareFactories
     * const registroSoftwareFactory = await prisma.registroSoftwareFactory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroSoftwareFactories and only return the `id`
     * const registroSoftwareFactoryWithIdOnly = await prisma.registroSoftwareFactory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroSoftwareFactoryCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroSoftwareFactoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroSoftwareFactoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RegistroSoftwareFactory.
     * @param {RegistroSoftwareFactoryDeleteArgs} args - Arguments to delete one RegistroSoftwareFactory.
     * @example
     * // Delete one RegistroSoftwareFactory
     * const RegistroSoftwareFactory = await prisma.registroSoftwareFactory.delete({
     *   where: {
     *     // ... filter to delete one RegistroSoftwareFactory
     *   }
     * })
     * 
     */
    delete<T extends RegistroSoftwareFactoryDeleteArgs>(args: SelectSubset<T, RegistroSoftwareFactoryDeleteArgs<ExtArgs>>): Prisma__RegistroSoftwareFactoryClient<$Result.GetResult<Prisma.$RegistroSoftwareFactoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RegistroSoftwareFactory.
     * @param {RegistroSoftwareFactoryUpdateArgs} args - Arguments to update one RegistroSoftwareFactory.
     * @example
     * // Update one RegistroSoftwareFactory
     * const registroSoftwareFactory = await prisma.registroSoftwareFactory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroSoftwareFactoryUpdateArgs>(args: SelectSubset<T, RegistroSoftwareFactoryUpdateArgs<ExtArgs>>): Prisma__RegistroSoftwareFactoryClient<$Result.GetResult<Prisma.$RegistroSoftwareFactoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RegistroSoftwareFactories.
     * @param {RegistroSoftwareFactoryDeleteManyArgs} args - Arguments to filter RegistroSoftwareFactories to delete.
     * @example
     * // Delete a few RegistroSoftwareFactories
     * const { count } = await prisma.registroSoftwareFactory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroSoftwareFactoryDeleteManyArgs>(args?: SelectSubset<T, RegistroSoftwareFactoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroSoftwareFactories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSoftwareFactoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroSoftwareFactories
     * const registroSoftwareFactory = await prisma.registroSoftwareFactory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroSoftwareFactoryUpdateManyArgs>(args: SelectSubset<T, RegistroSoftwareFactoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroSoftwareFactories and returns the data updated in the database.
     * @param {RegistroSoftwareFactoryUpdateManyAndReturnArgs} args - Arguments to update many RegistroSoftwareFactories.
     * @example
     * // Update many RegistroSoftwareFactories
     * const registroSoftwareFactory = await prisma.registroSoftwareFactory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RegistroSoftwareFactories and only return the `id`
     * const registroSoftwareFactoryWithIdOnly = await prisma.registroSoftwareFactory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegistroSoftwareFactoryUpdateManyAndReturnArgs>(args: SelectSubset<T, RegistroSoftwareFactoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroSoftwareFactoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RegistroSoftwareFactory.
     * @param {RegistroSoftwareFactoryUpsertArgs} args - Arguments to update or create a RegistroSoftwareFactory.
     * @example
     * // Update or create a RegistroSoftwareFactory
     * const registroSoftwareFactory = await prisma.registroSoftwareFactory.upsert({
     *   create: {
     *     // ... data to create a RegistroSoftwareFactory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroSoftwareFactory we want to update
     *   }
     * })
     */
    upsert<T extends RegistroSoftwareFactoryUpsertArgs>(args: SelectSubset<T, RegistroSoftwareFactoryUpsertArgs<ExtArgs>>): Prisma__RegistroSoftwareFactoryClient<$Result.GetResult<Prisma.$RegistroSoftwareFactoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RegistroSoftwareFactories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSoftwareFactoryCountArgs} args - Arguments to filter RegistroSoftwareFactories to count.
     * @example
     * // Count the number of RegistroSoftwareFactories
     * const count = await prisma.registroSoftwareFactory.count({
     *   where: {
     *     // ... the filter for the RegistroSoftwareFactories we want to count
     *   }
     * })
    **/
    count<T extends RegistroSoftwareFactoryCountArgs>(
      args?: Subset<T, RegistroSoftwareFactoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroSoftwareFactoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroSoftwareFactory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSoftwareFactoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroSoftwareFactoryAggregateArgs>(args: Subset<T, RegistroSoftwareFactoryAggregateArgs>): Prisma.PrismaPromise<GetRegistroSoftwareFactoryAggregateType<T>>

    /**
     * Group by RegistroSoftwareFactory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroSoftwareFactoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroSoftwareFactoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroSoftwareFactoryGroupByArgs['orderBy'] }
        : { orderBy?: RegistroSoftwareFactoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroSoftwareFactoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroSoftwareFactoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroSoftwareFactory model
   */
  readonly fields: RegistroSoftwareFactoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroSoftwareFactory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroSoftwareFactoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroSoftwareFactory model
   */
  interface RegistroSoftwareFactoryFieldRefs {
    readonly id: FieldRef<"RegistroSoftwareFactory", 'Int'>
    readonly nombreCompleto: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly tipoDocumento: FieldRef<"RegistroSoftwareFactory", 'TipoDocumento'>
    readonly numeroDocumento: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly fechaNacimiento: FieldRef<"RegistroSoftwareFactory", 'DateTime'>
    readonly telefonoContacto: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly correoElectronico: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly direccion: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly comuna: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly estratoSocial: FieldRef<"RegistroSoftwareFactory", 'EstratoSocial'>
    readonly edad: FieldRef<"RegistroSoftwareFactory", 'Int'>
    readonly grupoEtnico: FieldRef<"RegistroSoftwareFactory", 'GrupoEtnico'>
    readonly modalidadVinculacion: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly institucionEducativa: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly programaAcademico: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly semestreNivel: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly tiempoDisponible: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly tecnologias: FieldRef<"RegistroSoftwareFactory", 'String[]'>
    readonly proyectosRealizados: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly areasInteres: FieldRef<"RegistroSoftwareFactory", 'String[]'>
    readonly otrasAreas: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly experienciaAgile: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly motivacion: FieldRef<"RegistroSoftwareFactory", 'String'>
    readonly aceptaTerminos: FieldRef<"RegistroSoftwareFactory", 'Boolean'>
    readonly createdAt: FieldRef<"RegistroSoftwareFactory", 'DateTime'>
    readonly updatedAt: FieldRef<"RegistroSoftwareFactory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RegistroSoftwareFactory findUnique
   */
  export type RegistroSoftwareFactoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSoftwareFactory
     */
    select?: RegistroSoftwareFactorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSoftwareFactory
     */
    omit?: RegistroSoftwareFactoryOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSoftwareFactory to fetch.
     */
    where: RegistroSoftwareFactoryWhereUniqueInput
  }

  /**
   * RegistroSoftwareFactory findUniqueOrThrow
   */
  export type RegistroSoftwareFactoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSoftwareFactory
     */
    select?: RegistroSoftwareFactorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSoftwareFactory
     */
    omit?: RegistroSoftwareFactoryOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSoftwareFactory to fetch.
     */
    where: RegistroSoftwareFactoryWhereUniqueInput
  }

  /**
   * RegistroSoftwareFactory findFirst
   */
  export type RegistroSoftwareFactoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSoftwareFactory
     */
    select?: RegistroSoftwareFactorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSoftwareFactory
     */
    omit?: RegistroSoftwareFactoryOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSoftwareFactory to fetch.
     */
    where?: RegistroSoftwareFactoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroSoftwareFactories to fetch.
     */
    orderBy?: RegistroSoftwareFactoryOrderByWithRelationInput | RegistroSoftwareFactoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroSoftwareFactories.
     */
    cursor?: RegistroSoftwareFactoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroSoftwareFactories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroSoftwareFactories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroSoftwareFactories.
     */
    distinct?: RegistroSoftwareFactoryScalarFieldEnum | RegistroSoftwareFactoryScalarFieldEnum[]
  }

  /**
   * RegistroSoftwareFactory findFirstOrThrow
   */
  export type RegistroSoftwareFactoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSoftwareFactory
     */
    select?: RegistroSoftwareFactorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSoftwareFactory
     */
    omit?: RegistroSoftwareFactoryOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSoftwareFactory to fetch.
     */
    where?: RegistroSoftwareFactoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroSoftwareFactories to fetch.
     */
    orderBy?: RegistroSoftwareFactoryOrderByWithRelationInput | RegistroSoftwareFactoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroSoftwareFactories.
     */
    cursor?: RegistroSoftwareFactoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroSoftwareFactories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroSoftwareFactories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroSoftwareFactories.
     */
    distinct?: RegistroSoftwareFactoryScalarFieldEnum | RegistroSoftwareFactoryScalarFieldEnum[]
  }

  /**
   * RegistroSoftwareFactory findMany
   */
  export type RegistroSoftwareFactoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSoftwareFactory
     */
    select?: RegistroSoftwareFactorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSoftwareFactory
     */
    omit?: RegistroSoftwareFactoryOmit<ExtArgs> | null
    /**
     * Filter, which RegistroSoftwareFactories to fetch.
     */
    where?: RegistroSoftwareFactoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroSoftwareFactories to fetch.
     */
    orderBy?: RegistroSoftwareFactoryOrderByWithRelationInput | RegistroSoftwareFactoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroSoftwareFactories.
     */
    cursor?: RegistroSoftwareFactoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroSoftwareFactories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroSoftwareFactories.
     */
    skip?: number
    distinct?: RegistroSoftwareFactoryScalarFieldEnum | RegistroSoftwareFactoryScalarFieldEnum[]
  }

  /**
   * RegistroSoftwareFactory create
   */
  export type RegistroSoftwareFactoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSoftwareFactory
     */
    select?: RegistroSoftwareFactorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSoftwareFactory
     */
    omit?: RegistroSoftwareFactoryOmit<ExtArgs> | null
    /**
     * The data needed to create a RegistroSoftwareFactory.
     */
    data: XOR<RegistroSoftwareFactoryCreateInput, RegistroSoftwareFactoryUncheckedCreateInput>
  }

  /**
   * RegistroSoftwareFactory createMany
   */
  export type RegistroSoftwareFactoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroSoftwareFactories.
     */
    data: RegistroSoftwareFactoryCreateManyInput | RegistroSoftwareFactoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroSoftwareFactory createManyAndReturn
   */
  export type RegistroSoftwareFactoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSoftwareFactory
     */
    select?: RegistroSoftwareFactorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSoftwareFactory
     */
    omit?: RegistroSoftwareFactoryOmit<ExtArgs> | null
    /**
     * The data used to create many RegistroSoftwareFactories.
     */
    data: RegistroSoftwareFactoryCreateManyInput | RegistroSoftwareFactoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroSoftwareFactory update
   */
  export type RegistroSoftwareFactoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSoftwareFactory
     */
    select?: RegistroSoftwareFactorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSoftwareFactory
     */
    omit?: RegistroSoftwareFactoryOmit<ExtArgs> | null
    /**
     * The data needed to update a RegistroSoftwareFactory.
     */
    data: XOR<RegistroSoftwareFactoryUpdateInput, RegistroSoftwareFactoryUncheckedUpdateInput>
    /**
     * Choose, which RegistroSoftwareFactory to update.
     */
    where: RegistroSoftwareFactoryWhereUniqueInput
  }

  /**
   * RegistroSoftwareFactory updateMany
   */
  export type RegistroSoftwareFactoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroSoftwareFactories.
     */
    data: XOR<RegistroSoftwareFactoryUpdateManyMutationInput, RegistroSoftwareFactoryUncheckedUpdateManyInput>
    /**
     * Filter which RegistroSoftwareFactories to update
     */
    where?: RegistroSoftwareFactoryWhereInput
    /**
     * Limit how many RegistroSoftwareFactories to update.
     */
    limit?: number
  }

  /**
   * RegistroSoftwareFactory updateManyAndReturn
   */
  export type RegistroSoftwareFactoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSoftwareFactory
     */
    select?: RegistroSoftwareFactorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSoftwareFactory
     */
    omit?: RegistroSoftwareFactoryOmit<ExtArgs> | null
    /**
     * The data used to update RegistroSoftwareFactories.
     */
    data: XOR<RegistroSoftwareFactoryUpdateManyMutationInput, RegistroSoftwareFactoryUncheckedUpdateManyInput>
    /**
     * Filter which RegistroSoftwareFactories to update
     */
    where?: RegistroSoftwareFactoryWhereInput
    /**
     * Limit how many RegistroSoftwareFactories to update.
     */
    limit?: number
  }

  /**
   * RegistroSoftwareFactory upsert
   */
  export type RegistroSoftwareFactoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSoftwareFactory
     */
    select?: RegistroSoftwareFactorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSoftwareFactory
     */
    omit?: RegistroSoftwareFactoryOmit<ExtArgs> | null
    /**
     * The filter to search for the RegistroSoftwareFactory to update in case it exists.
     */
    where: RegistroSoftwareFactoryWhereUniqueInput
    /**
     * In case the RegistroSoftwareFactory found by the `where` argument doesn't exist, create a new RegistroSoftwareFactory with this data.
     */
    create: XOR<RegistroSoftwareFactoryCreateInput, RegistroSoftwareFactoryUncheckedCreateInput>
    /**
     * In case the RegistroSoftwareFactory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroSoftwareFactoryUpdateInput, RegistroSoftwareFactoryUncheckedUpdateInput>
  }

  /**
   * RegistroSoftwareFactory delete
   */
  export type RegistroSoftwareFactoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSoftwareFactory
     */
    select?: RegistroSoftwareFactorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSoftwareFactory
     */
    omit?: RegistroSoftwareFactoryOmit<ExtArgs> | null
    /**
     * Filter which RegistroSoftwareFactory to delete.
     */
    where: RegistroSoftwareFactoryWhereUniqueInput
  }

  /**
   * RegistroSoftwareFactory deleteMany
   */
  export type RegistroSoftwareFactoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroSoftwareFactories to delete
     */
    where?: RegistroSoftwareFactoryWhereInput
    /**
     * Limit how many RegistroSoftwareFactories to delete.
     */
    limit?: number
  }

  /**
   * RegistroSoftwareFactory without action
   */
  export type RegistroSoftwareFactoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroSoftwareFactory
     */
    select?: RegistroSoftwareFactorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroSoftwareFactory
     */
    omit?: RegistroSoftwareFactoryOmit<ExtArgs> | null
  }


  /**
   * Model RegistroVoluntariado
   */

  export type AggregateRegistroVoluntariado = {
    _count: RegistroVoluntariadoCountAggregateOutputType | null
    _avg: RegistroVoluntariadoAvgAggregateOutputType | null
    _sum: RegistroVoluntariadoSumAggregateOutputType | null
    _min: RegistroVoluntariadoMinAggregateOutputType | null
    _max: RegistroVoluntariadoMaxAggregateOutputType | null
  }

  export type RegistroVoluntariadoAvgAggregateOutputType = {
    id: number | null
    edad: number | null
    horasDisponibles: number | null
  }

  export type RegistroVoluntariadoSumAggregateOutputType = {
    id: number | null
    edad: number | null
    horasDisponibles: number | null
  }

  export type RegistroVoluntariadoMinAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    tipoDocumento: $Enums.TipoDocumento | null
    numeroDocumento: string | null
    fechaNacimiento: Date | null
    telefonoContacto: string | null
    correoElectronico: string | null
    direccion: string | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    nivelEducativo: $Enums.NivelEducativo | null
    profesionOcupacion: string | null
    disponibilidadTipo: $Enums.TipoDisponibilidad | null
    diasEspecificos: string | null
    horasDisponibles: number | null
    otrasAreas: string | null
    habilidades: string | null
    fundacion: string | null
    funcion: string | null
    tiempo: string | null
    motivacion: string | null
    referencia1Nombre: string | null
    referencia1Telefono: string | null
    referencia2Nombre: string | null
    referencia2Telefono: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroVoluntariadoMaxAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    tipoDocumento: $Enums.TipoDocumento | null
    numeroDocumento: string | null
    fechaNacimiento: Date | null
    telefonoContacto: string | null
    correoElectronico: string | null
    direccion: string | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    nivelEducativo: $Enums.NivelEducativo | null
    profesionOcupacion: string | null
    disponibilidadTipo: $Enums.TipoDisponibilidad | null
    diasEspecificos: string | null
    horasDisponibles: number | null
    otrasAreas: string | null
    habilidades: string | null
    fundacion: string | null
    funcion: string | null
    tiempo: string | null
    motivacion: string | null
    referencia1Nombre: string | null
    referencia1Telefono: string | null
    referencia2Nombre: string | null
    referencia2Telefono: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroVoluntariadoCountAggregateOutputType = {
    id: number
    nombreCompleto: number
    tipoDocumento: number
    numeroDocumento: number
    fechaNacimiento: number
    telefonoContacto: number
    correoElectronico: number
    direccion: number
    comuna: number
    estratoSocial: number
    edad: number
    grupoEtnico: number
    nivelEducativo: number
    profesionOcupacion: number
    disponibilidadTipo: number
    diasEspecificos: number
    horasDisponibles: number
    areasInteres: number
    otrasAreas: number
    habilidades: number
    fundacion: number
    funcion: number
    tiempo: number
    motivacion: number
    referencia1Nombre: number
    referencia1Telefono: number
    referencia2Nombre: number
    referencia2Telefono: number
    aceptaTerminos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RegistroVoluntariadoAvgAggregateInputType = {
    id?: true
    edad?: true
    horasDisponibles?: true
  }

  export type RegistroVoluntariadoSumAggregateInputType = {
    id?: true
    edad?: true
    horasDisponibles?: true
  }

  export type RegistroVoluntariadoMinAggregateInputType = {
    id?: true
    nombreCompleto?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    nivelEducativo?: true
    profesionOcupacion?: true
    disponibilidadTipo?: true
    diasEspecificos?: true
    horasDisponibles?: true
    otrasAreas?: true
    habilidades?: true
    fundacion?: true
    funcion?: true
    tiempo?: true
    motivacion?: true
    referencia1Nombre?: true
    referencia1Telefono?: true
    referencia2Nombre?: true
    referencia2Telefono?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroVoluntariadoMaxAggregateInputType = {
    id?: true
    nombreCompleto?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    nivelEducativo?: true
    profesionOcupacion?: true
    disponibilidadTipo?: true
    diasEspecificos?: true
    horasDisponibles?: true
    otrasAreas?: true
    habilidades?: true
    fundacion?: true
    funcion?: true
    tiempo?: true
    motivacion?: true
    referencia1Nombre?: true
    referencia1Telefono?: true
    referencia2Nombre?: true
    referencia2Telefono?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroVoluntariadoCountAggregateInputType = {
    id?: true
    nombreCompleto?: true
    tipoDocumento?: true
    numeroDocumento?: true
    fechaNacimiento?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    nivelEducativo?: true
    profesionOcupacion?: true
    disponibilidadTipo?: true
    diasEspecificos?: true
    horasDisponibles?: true
    areasInteres?: true
    otrasAreas?: true
    habilidades?: true
    fundacion?: true
    funcion?: true
    tiempo?: true
    motivacion?: true
    referencia1Nombre?: true
    referencia1Telefono?: true
    referencia2Nombre?: true
    referencia2Telefono?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RegistroVoluntariadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroVoluntariado to aggregate.
     */
    where?: RegistroVoluntariadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroVoluntariados to fetch.
     */
    orderBy?: RegistroVoluntariadoOrderByWithRelationInput | RegistroVoluntariadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroVoluntariadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroVoluntariados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroVoluntariados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroVoluntariados
    **/
    _count?: true | RegistroVoluntariadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroVoluntariadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroVoluntariadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroVoluntariadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroVoluntariadoMaxAggregateInputType
  }

  export type GetRegistroVoluntariadoAggregateType<T extends RegistroVoluntariadoAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroVoluntariado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroVoluntariado[P]>
      : GetScalarType<T[P], AggregateRegistroVoluntariado[P]>
  }




  export type RegistroVoluntariadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroVoluntariadoWhereInput
    orderBy?: RegistroVoluntariadoOrderByWithAggregationInput | RegistroVoluntariadoOrderByWithAggregationInput[]
    by: RegistroVoluntariadoScalarFieldEnum[] | RegistroVoluntariadoScalarFieldEnum
    having?: RegistroVoluntariadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroVoluntariadoCountAggregateInputType | true
    _avg?: RegistroVoluntariadoAvgAggregateInputType
    _sum?: RegistroVoluntariadoSumAggregateInputType
    _min?: RegistroVoluntariadoMinAggregateInputType
    _max?: RegistroVoluntariadoMaxAggregateInputType
  }

  export type RegistroVoluntariadoGroupByOutputType = {
    id: number
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date
    telefonoContacto: string
    correoElectronico: string | null
    direccion: string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    nivelEducativo: $Enums.NivelEducativo
    profesionOcupacion: string
    disponibilidadTipo: $Enums.TipoDisponibilidad
    diasEspecificos: string | null
    horasDisponibles: number
    areasInteres: string[]
    otrasAreas: string | null
    habilidades: string
    fundacion: string
    funcion: string
    tiempo: string
    motivacion: string
    referencia1Nombre: string | null
    referencia1Telefono: string | null
    referencia2Nombre: string | null
    referencia2Telefono: string | null
    aceptaTerminos: boolean
    createdAt: Date
    updatedAt: Date
    _count: RegistroVoluntariadoCountAggregateOutputType | null
    _avg: RegistroVoluntariadoAvgAggregateOutputType | null
    _sum: RegistroVoluntariadoSumAggregateOutputType | null
    _min: RegistroVoluntariadoMinAggregateOutputType | null
    _max: RegistroVoluntariadoMaxAggregateOutputType | null
  }

  type GetRegistroVoluntariadoGroupByPayload<T extends RegistroVoluntariadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroVoluntariadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroVoluntariadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroVoluntariadoGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroVoluntariadoGroupByOutputType[P]>
        }
      >
    >


  export type RegistroVoluntariadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    nivelEducativo?: boolean
    profesionOcupacion?: boolean
    disponibilidadTipo?: boolean
    diasEspecificos?: boolean
    horasDisponibles?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    habilidades?: boolean
    fundacion?: boolean
    funcion?: boolean
    tiempo?: boolean
    motivacion?: boolean
    referencia1Nombre?: boolean
    referencia1Telefono?: boolean
    referencia2Nombre?: boolean
    referencia2Telefono?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroVoluntariado"]>

  export type RegistroVoluntariadoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    nivelEducativo?: boolean
    profesionOcupacion?: boolean
    disponibilidadTipo?: boolean
    diasEspecificos?: boolean
    horasDisponibles?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    habilidades?: boolean
    fundacion?: boolean
    funcion?: boolean
    tiempo?: boolean
    motivacion?: boolean
    referencia1Nombre?: boolean
    referencia1Telefono?: boolean
    referencia2Nombre?: boolean
    referencia2Telefono?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroVoluntariado"]>

  export type RegistroVoluntariadoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    nivelEducativo?: boolean
    profesionOcupacion?: boolean
    disponibilidadTipo?: boolean
    diasEspecificos?: boolean
    horasDisponibles?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    habilidades?: boolean
    fundacion?: boolean
    funcion?: boolean
    tiempo?: boolean
    motivacion?: boolean
    referencia1Nombre?: boolean
    referencia1Telefono?: boolean
    referencia2Nombre?: boolean
    referencia2Telefono?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroVoluntariado"]>

  export type RegistroVoluntariadoSelectScalar = {
    id?: boolean
    nombreCompleto?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    fechaNacimiento?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    nivelEducativo?: boolean
    profesionOcupacion?: boolean
    disponibilidadTipo?: boolean
    diasEspecificos?: boolean
    horasDisponibles?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    habilidades?: boolean
    fundacion?: boolean
    funcion?: boolean
    tiempo?: boolean
    motivacion?: boolean
    referencia1Nombre?: boolean
    referencia1Telefono?: boolean
    referencia2Nombre?: boolean
    referencia2Telefono?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RegistroVoluntariadoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombreCompleto" | "tipoDocumento" | "numeroDocumento" | "fechaNacimiento" | "telefonoContacto" | "correoElectronico" | "direccion" | "comuna" | "estratoSocial" | "edad" | "grupoEtnico" | "nivelEducativo" | "profesionOcupacion" | "disponibilidadTipo" | "diasEspecificos" | "horasDisponibles" | "areasInteres" | "otrasAreas" | "habilidades" | "fundacion" | "funcion" | "tiempo" | "motivacion" | "referencia1Nombre" | "referencia1Telefono" | "referencia2Nombre" | "referencia2Telefono" | "aceptaTerminos" | "createdAt" | "updatedAt", ExtArgs["result"]["registroVoluntariado"]>

  export type $RegistroVoluntariadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroVoluntariado"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombreCompleto: string
      tipoDocumento: $Enums.TipoDocumento
      numeroDocumento: string
      fechaNacimiento: Date
      telefonoContacto: string
      correoElectronico: string | null
      direccion: string
      comuna: string
      estratoSocial: $Enums.EstratoSocial
      edad: number
      grupoEtnico: $Enums.GrupoEtnico
      nivelEducativo: $Enums.NivelEducativo
      profesionOcupacion: string
      disponibilidadTipo: $Enums.TipoDisponibilidad
      diasEspecificos: string | null
      horasDisponibles: number
      areasInteres: string[]
      otrasAreas: string | null
      habilidades: string
      fundacion: string
      funcion: string
      tiempo: string
      motivacion: string
      referencia1Nombre: string | null
      referencia1Telefono: string | null
      referencia2Nombre: string | null
      referencia2Telefono: string | null
      aceptaTerminos: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["registroVoluntariado"]>
    composites: {}
  }

  type RegistroVoluntariadoGetPayload<S extends boolean | null | undefined | RegistroVoluntariadoDefaultArgs> = $Result.GetResult<Prisma.$RegistroVoluntariadoPayload, S>

  type RegistroVoluntariadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegistroVoluntariadoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegistroVoluntariadoCountAggregateInputType | true
    }

  export interface RegistroVoluntariadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroVoluntariado'], meta: { name: 'RegistroVoluntariado' } }
    /**
     * Find zero or one RegistroVoluntariado that matches the filter.
     * @param {RegistroVoluntariadoFindUniqueArgs} args - Arguments to find a RegistroVoluntariado
     * @example
     * // Get one RegistroVoluntariado
     * const registroVoluntariado = await prisma.registroVoluntariado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroVoluntariadoFindUniqueArgs>(args: SelectSubset<T, RegistroVoluntariadoFindUniqueArgs<ExtArgs>>): Prisma__RegistroVoluntariadoClient<$Result.GetResult<Prisma.$RegistroVoluntariadoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RegistroVoluntariado that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegistroVoluntariadoFindUniqueOrThrowArgs} args - Arguments to find a RegistroVoluntariado
     * @example
     * // Get one RegistroVoluntariado
     * const registroVoluntariado = await prisma.registroVoluntariado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroVoluntariadoFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroVoluntariadoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroVoluntariadoClient<$Result.GetResult<Prisma.$RegistroVoluntariadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroVoluntariado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroVoluntariadoFindFirstArgs} args - Arguments to find a RegistroVoluntariado
     * @example
     * // Get one RegistroVoluntariado
     * const registroVoluntariado = await prisma.registroVoluntariado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroVoluntariadoFindFirstArgs>(args?: SelectSubset<T, RegistroVoluntariadoFindFirstArgs<ExtArgs>>): Prisma__RegistroVoluntariadoClient<$Result.GetResult<Prisma.$RegistroVoluntariadoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroVoluntariado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroVoluntariadoFindFirstOrThrowArgs} args - Arguments to find a RegistroVoluntariado
     * @example
     * // Get one RegistroVoluntariado
     * const registroVoluntariado = await prisma.registroVoluntariado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroVoluntariadoFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroVoluntariadoFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroVoluntariadoClient<$Result.GetResult<Prisma.$RegistroVoluntariadoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RegistroVoluntariados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroVoluntariadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroVoluntariados
     * const registroVoluntariados = await prisma.registroVoluntariado.findMany()
     * 
     * // Get first 10 RegistroVoluntariados
     * const registroVoluntariados = await prisma.registroVoluntariado.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroVoluntariadoWithIdOnly = await prisma.registroVoluntariado.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroVoluntariadoFindManyArgs>(args?: SelectSubset<T, RegistroVoluntariadoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroVoluntariadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RegistroVoluntariado.
     * @param {RegistroVoluntariadoCreateArgs} args - Arguments to create a RegistroVoluntariado.
     * @example
     * // Create one RegistroVoluntariado
     * const RegistroVoluntariado = await prisma.registroVoluntariado.create({
     *   data: {
     *     // ... data to create a RegistroVoluntariado
     *   }
     * })
     * 
     */
    create<T extends RegistroVoluntariadoCreateArgs>(args: SelectSubset<T, RegistroVoluntariadoCreateArgs<ExtArgs>>): Prisma__RegistroVoluntariadoClient<$Result.GetResult<Prisma.$RegistroVoluntariadoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RegistroVoluntariados.
     * @param {RegistroVoluntariadoCreateManyArgs} args - Arguments to create many RegistroVoluntariados.
     * @example
     * // Create many RegistroVoluntariados
     * const registroVoluntariado = await prisma.registroVoluntariado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroVoluntariadoCreateManyArgs>(args?: SelectSubset<T, RegistroVoluntariadoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroVoluntariados and returns the data saved in the database.
     * @param {RegistroVoluntariadoCreateManyAndReturnArgs} args - Arguments to create many RegistroVoluntariados.
     * @example
     * // Create many RegistroVoluntariados
     * const registroVoluntariado = await prisma.registroVoluntariado.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroVoluntariados and only return the `id`
     * const registroVoluntariadoWithIdOnly = await prisma.registroVoluntariado.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroVoluntariadoCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroVoluntariadoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroVoluntariadoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RegistroVoluntariado.
     * @param {RegistroVoluntariadoDeleteArgs} args - Arguments to delete one RegistroVoluntariado.
     * @example
     * // Delete one RegistroVoluntariado
     * const RegistroVoluntariado = await prisma.registroVoluntariado.delete({
     *   where: {
     *     // ... filter to delete one RegistroVoluntariado
     *   }
     * })
     * 
     */
    delete<T extends RegistroVoluntariadoDeleteArgs>(args: SelectSubset<T, RegistroVoluntariadoDeleteArgs<ExtArgs>>): Prisma__RegistroVoluntariadoClient<$Result.GetResult<Prisma.$RegistroVoluntariadoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RegistroVoluntariado.
     * @param {RegistroVoluntariadoUpdateArgs} args - Arguments to update one RegistroVoluntariado.
     * @example
     * // Update one RegistroVoluntariado
     * const registroVoluntariado = await prisma.registroVoluntariado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroVoluntariadoUpdateArgs>(args: SelectSubset<T, RegistroVoluntariadoUpdateArgs<ExtArgs>>): Prisma__RegistroVoluntariadoClient<$Result.GetResult<Prisma.$RegistroVoluntariadoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RegistroVoluntariados.
     * @param {RegistroVoluntariadoDeleteManyArgs} args - Arguments to filter RegistroVoluntariados to delete.
     * @example
     * // Delete a few RegistroVoluntariados
     * const { count } = await prisma.registroVoluntariado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroVoluntariadoDeleteManyArgs>(args?: SelectSubset<T, RegistroVoluntariadoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroVoluntariados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroVoluntariadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroVoluntariados
     * const registroVoluntariado = await prisma.registroVoluntariado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroVoluntariadoUpdateManyArgs>(args: SelectSubset<T, RegistroVoluntariadoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroVoluntariados and returns the data updated in the database.
     * @param {RegistroVoluntariadoUpdateManyAndReturnArgs} args - Arguments to update many RegistroVoluntariados.
     * @example
     * // Update many RegistroVoluntariados
     * const registroVoluntariado = await prisma.registroVoluntariado.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RegistroVoluntariados and only return the `id`
     * const registroVoluntariadoWithIdOnly = await prisma.registroVoluntariado.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegistroVoluntariadoUpdateManyAndReturnArgs>(args: SelectSubset<T, RegistroVoluntariadoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroVoluntariadoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RegistroVoluntariado.
     * @param {RegistroVoluntariadoUpsertArgs} args - Arguments to update or create a RegistroVoluntariado.
     * @example
     * // Update or create a RegistroVoluntariado
     * const registroVoluntariado = await prisma.registroVoluntariado.upsert({
     *   create: {
     *     // ... data to create a RegistroVoluntariado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroVoluntariado we want to update
     *   }
     * })
     */
    upsert<T extends RegistroVoluntariadoUpsertArgs>(args: SelectSubset<T, RegistroVoluntariadoUpsertArgs<ExtArgs>>): Prisma__RegistroVoluntariadoClient<$Result.GetResult<Prisma.$RegistroVoluntariadoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RegistroVoluntariados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroVoluntariadoCountArgs} args - Arguments to filter RegistroVoluntariados to count.
     * @example
     * // Count the number of RegistroVoluntariados
     * const count = await prisma.registroVoluntariado.count({
     *   where: {
     *     // ... the filter for the RegistroVoluntariados we want to count
     *   }
     * })
    **/
    count<T extends RegistroVoluntariadoCountArgs>(
      args?: Subset<T, RegistroVoluntariadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroVoluntariadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroVoluntariado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroVoluntariadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroVoluntariadoAggregateArgs>(args: Subset<T, RegistroVoluntariadoAggregateArgs>): Prisma.PrismaPromise<GetRegistroVoluntariadoAggregateType<T>>

    /**
     * Group by RegistroVoluntariado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroVoluntariadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroVoluntariadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroVoluntariadoGroupByArgs['orderBy'] }
        : { orderBy?: RegistroVoluntariadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroVoluntariadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroVoluntariadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroVoluntariado model
   */
  readonly fields: RegistroVoluntariadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroVoluntariado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroVoluntariadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroVoluntariado model
   */
  interface RegistroVoluntariadoFieldRefs {
    readonly id: FieldRef<"RegistroVoluntariado", 'Int'>
    readonly nombreCompleto: FieldRef<"RegistroVoluntariado", 'String'>
    readonly tipoDocumento: FieldRef<"RegistroVoluntariado", 'TipoDocumento'>
    readonly numeroDocumento: FieldRef<"RegistroVoluntariado", 'String'>
    readonly fechaNacimiento: FieldRef<"RegistroVoluntariado", 'DateTime'>
    readonly telefonoContacto: FieldRef<"RegistroVoluntariado", 'String'>
    readonly correoElectronico: FieldRef<"RegistroVoluntariado", 'String'>
    readonly direccion: FieldRef<"RegistroVoluntariado", 'String'>
    readonly comuna: FieldRef<"RegistroVoluntariado", 'String'>
    readonly estratoSocial: FieldRef<"RegistroVoluntariado", 'EstratoSocial'>
    readonly edad: FieldRef<"RegistroVoluntariado", 'Int'>
    readonly grupoEtnico: FieldRef<"RegistroVoluntariado", 'GrupoEtnico'>
    readonly nivelEducativo: FieldRef<"RegistroVoluntariado", 'NivelEducativo'>
    readonly profesionOcupacion: FieldRef<"RegistroVoluntariado", 'String'>
    readonly disponibilidadTipo: FieldRef<"RegistroVoluntariado", 'TipoDisponibilidad'>
    readonly diasEspecificos: FieldRef<"RegistroVoluntariado", 'String'>
    readonly horasDisponibles: FieldRef<"RegistroVoluntariado", 'Int'>
    readonly areasInteres: FieldRef<"RegistroVoluntariado", 'String[]'>
    readonly otrasAreas: FieldRef<"RegistroVoluntariado", 'String'>
    readonly habilidades: FieldRef<"RegistroVoluntariado", 'String'>
    readonly fundacion: FieldRef<"RegistroVoluntariado", 'String'>
    readonly funcion: FieldRef<"RegistroVoluntariado", 'String'>
    readonly tiempo: FieldRef<"RegistroVoluntariado", 'String'>
    readonly motivacion: FieldRef<"RegistroVoluntariado", 'String'>
    readonly referencia1Nombre: FieldRef<"RegistroVoluntariado", 'String'>
    readonly referencia1Telefono: FieldRef<"RegistroVoluntariado", 'String'>
    readonly referencia2Nombre: FieldRef<"RegistroVoluntariado", 'String'>
    readonly referencia2Telefono: FieldRef<"RegistroVoluntariado", 'String'>
    readonly aceptaTerminos: FieldRef<"RegistroVoluntariado", 'Boolean'>
    readonly createdAt: FieldRef<"RegistroVoluntariado", 'DateTime'>
    readonly updatedAt: FieldRef<"RegistroVoluntariado", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RegistroVoluntariado findUnique
   */
  export type RegistroVoluntariadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroVoluntariado
     */
    select?: RegistroVoluntariadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroVoluntariado
     */
    omit?: RegistroVoluntariadoOmit<ExtArgs> | null
    /**
     * Filter, which RegistroVoluntariado to fetch.
     */
    where: RegistroVoluntariadoWhereUniqueInput
  }

  /**
   * RegistroVoluntariado findUniqueOrThrow
   */
  export type RegistroVoluntariadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroVoluntariado
     */
    select?: RegistroVoluntariadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroVoluntariado
     */
    omit?: RegistroVoluntariadoOmit<ExtArgs> | null
    /**
     * Filter, which RegistroVoluntariado to fetch.
     */
    where: RegistroVoluntariadoWhereUniqueInput
  }

  /**
   * RegistroVoluntariado findFirst
   */
  export type RegistroVoluntariadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroVoluntariado
     */
    select?: RegistroVoluntariadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroVoluntariado
     */
    omit?: RegistroVoluntariadoOmit<ExtArgs> | null
    /**
     * Filter, which RegistroVoluntariado to fetch.
     */
    where?: RegistroVoluntariadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroVoluntariados to fetch.
     */
    orderBy?: RegistroVoluntariadoOrderByWithRelationInput | RegistroVoluntariadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroVoluntariados.
     */
    cursor?: RegistroVoluntariadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroVoluntariados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroVoluntariados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroVoluntariados.
     */
    distinct?: RegistroVoluntariadoScalarFieldEnum | RegistroVoluntariadoScalarFieldEnum[]
  }

  /**
   * RegistroVoluntariado findFirstOrThrow
   */
  export type RegistroVoluntariadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroVoluntariado
     */
    select?: RegistroVoluntariadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroVoluntariado
     */
    omit?: RegistroVoluntariadoOmit<ExtArgs> | null
    /**
     * Filter, which RegistroVoluntariado to fetch.
     */
    where?: RegistroVoluntariadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroVoluntariados to fetch.
     */
    orderBy?: RegistroVoluntariadoOrderByWithRelationInput | RegistroVoluntariadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroVoluntariados.
     */
    cursor?: RegistroVoluntariadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroVoluntariados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroVoluntariados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroVoluntariados.
     */
    distinct?: RegistroVoluntariadoScalarFieldEnum | RegistroVoluntariadoScalarFieldEnum[]
  }

  /**
   * RegistroVoluntariado findMany
   */
  export type RegistroVoluntariadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroVoluntariado
     */
    select?: RegistroVoluntariadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroVoluntariado
     */
    omit?: RegistroVoluntariadoOmit<ExtArgs> | null
    /**
     * Filter, which RegistroVoluntariados to fetch.
     */
    where?: RegistroVoluntariadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroVoluntariados to fetch.
     */
    orderBy?: RegistroVoluntariadoOrderByWithRelationInput | RegistroVoluntariadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroVoluntariados.
     */
    cursor?: RegistroVoluntariadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroVoluntariados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroVoluntariados.
     */
    skip?: number
    distinct?: RegistroVoluntariadoScalarFieldEnum | RegistroVoluntariadoScalarFieldEnum[]
  }

  /**
   * RegistroVoluntariado create
   */
  export type RegistroVoluntariadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroVoluntariado
     */
    select?: RegistroVoluntariadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroVoluntariado
     */
    omit?: RegistroVoluntariadoOmit<ExtArgs> | null
    /**
     * The data needed to create a RegistroVoluntariado.
     */
    data: XOR<RegistroVoluntariadoCreateInput, RegistroVoluntariadoUncheckedCreateInput>
  }

  /**
   * RegistroVoluntariado createMany
   */
  export type RegistroVoluntariadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroVoluntariados.
     */
    data: RegistroVoluntariadoCreateManyInput | RegistroVoluntariadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroVoluntariado createManyAndReturn
   */
  export type RegistroVoluntariadoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroVoluntariado
     */
    select?: RegistroVoluntariadoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroVoluntariado
     */
    omit?: RegistroVoluntariadoOmit<ExtArgs> | null
    /**
     * The data used to create many RegistroVoluntariados.
     */
    data: RegistroVoluntariadoCreateManyInput | RegistroVoluntariadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroVoluntariado update
   */
  export type RegistroVoluntariadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroVoluntariado
     */
    select?: RegistroVoluntariadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroVoluntariado
     */
    omit?: RegistroVoluntariadoOmit<ExtArgs> | null
    /**
     * The data needed to update a RegistroVoluntariado.
     */
    data: XOR<RegistroVoluntariadoUpdateInput, RegistroVoluntariadoUncheckedUpdateInput>
    /**
     * Choose, which RegistroVoluntariado to update.
     */
    where: RegistroVoluntariadoWhereUniqueInput
  }

  /**
   * RegistroVoluntariado updateMany
   */
  export type RegistroVoluntariadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroVoluntariados.
     */
    data: XOR<RegistroVoluntariadoUpdateManyMutationInput, RegistroVoluntariadoUncheckedUpdateManyInput>
    /**
     * Filter which RegistroVoluntariados to update
     */
    where?: RegistroVoluntariadoWhereInput
    /**
     * Limit how many RegistroVoluntariados to update.
     */
    limit?: number
  }

  /**
   * RegistroVoluntariado updateManyAndReturn
   */
  export type RegistroVoluntariadoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroVoluntariado
     */
    select?: RegistroVoluntariadoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroVoluntariado
     */
    omit?: RegistroVoluntariadoOmit<ExtArgs> | null
    /**
     * The data used to update RegistroVoluntariados.
     */
    data: XOR<RegistroVoluntariadoUpdateManyMutationInput, RegistroVoluntariadoUncheckedUpdateManyInput>
    /**
     * Filter which RegistroVoluntariados to update
     */
    where?: RegistroVoluntariadoWhereInput
    /**
     * Limit how many RegistroVoluntariados to update.
     */
    limit?: number
  }

  /**
   * RegistroVoluntariado upsert
   */
  export type RegistroVoluntariadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroVoluntariado
     */
    select?: RegistroVoluntariadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroVoluntariado
     */
    omit?: RegistroVoluntariadoOmit<ExtArgs> | null
    /**
     * The filter to search for the RegistroVoluntariado to update in case it exists.
     */
    where: RegistroVoluntariadoWhereUniqueInput
    /**
     * In case the RegistroVoluntariado found by the `where` argument doesn't exist, create a new RegistroVoluntariado with this data.
     */
    create: XOR<RegistroVoluntariadoCreateInput, RegistroVoluntariadoUncheckedCreateInput>
    /**
     * In case the RegistroVoluntariado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroVoluntariadoUpdateInput, RegistroVoluntariadoUncheckedUpdateInput>
  }

  /**
   * RegistroVoluntariado delete
   */
  export type RegistroVoluntariadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroVoluntariado
     */
    select?: RegistroVoluntariadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroVoluntariado
     */
    omit?: RegistroVoluntariadoOmit<ExtArgs> | null
    /**
     * Filter which RegistroVoluntariado to delete.
     */
    where: RegistroVoluntariadoWhereUniqueInput
  }

  /**
   * RegistroVoluntariado deleteMany
   */
  export type RegistroVoluntariadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroVoluntariados to delete
     */
    where?: RegistroVoluntariadoWhereInput
    /**
     * Limit how many RegistroVoluntariados to delete.
     */
    limit?: number
  }

  /**
   * RegistroVoluntariado without action
   */
  export type RegistroVoluntariadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroVoluntariado
     */
    select?: RegistroVoluntariadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroVoluntariado
     */
    omit?: RegistroVoluntariadoOmit<ExtArgs> | null
  }


  /**
   * Model RegistroCultural
   */

  export type AggregateRegistroCultural = {
    _count: RegistroCulturalCountAggregateOutputType | null
    _avg: RegistroCulturalAvgAggregateOutputType | null
    _sum: RegistroCulturalSumAggregateOutputType | null
    _min: RegistroCulturalMinAggregateOutputType | null
    _max: RegistroCulturalMaxAggregateOutputType | null
  }

  export type RegistroCulturalAvgAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type RegistroCulturalSumAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type RegistroCulturalMinAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    fechaNacimiento: Date | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    telefonoContacto: string | null
    correoElectronico: string | null
    direccion: string | null
    documentoIdentidad: string | null
    municipioDepartamento: string | null
    nivelEducativo: $Enums.NivelEducativo | null
    ocupacion: string | null
    areaInteresPrincipal: $Enums.AreaInteresCultural | null
    otraAreaInteres: string | null
    formacionPrevia: boolean | null
    detalleFormacion: string | null
    perteneceGrupo: boolean | null
    detalleGrupo: string | null
    diasDisponibles: string | null
    motivacion: string | null
    expectativas: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroCulturalMaxAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    fechaNacimiento: Date | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    telefonoContacto: string | null
    correoElectronico: string | null
    direccion: string | null
    documentoIdentidad: string | null
    municipioDepartamento: string | null
    nivelEducativo: $Enums.NivelEducativo | null
    ocupacion: string | null
    areaInteresPrincipal: $Enums.AreaInteresCultural | null
    otraAreaInteres: string | null
    formacionPrevia: boolean | null
    detalleFormacion: string | null
    perteneceGrupo: boolean | null
    detalleGrupo: string | null
    diasDisponibles: string | null
    motivacion: string | null
    expectativas: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroCulturalCountAggregateOutputType = {
    id: number
    nombreCompleto: number
    fechaNacimiento: number
    comuna: number
    estratoSocial: number
    edad: number
    grupoEtnico: number
    telefonoContacto: number
    correoElectronico: number
    direccion: number
    documentoIdentidad: number
    municipioDepartamento: number
    nivelEducativo: number
    ocupacion: number
    areaInteresPrincipal: number
    otraAreaInteres: number
    formacionPrevia: number
    detalleFormacion: number
    perteneceGrupo: number
    detalleGrupo: number
    diasDisponibles: number
    motivacion: number
    expectativas: number
    aceptaTerminos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RegistroCulturalAvgAggregateInputType = {
    id?: true
    edad?: true
  }

  export type RegistroCulturalSumAggregateInputType = {
    id?: true
    edad?: true
  }

  export type RegistroCulturalMinAggregateInputType = {
    id?: true
    nombreCompleto?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    documentoIdentidad?: true
    municipioDepartamento?: true
    nivelEducativo?: true
    ocupacion?: true
    areaInteresPrincipal?: true
    otraAreaInteres?: true
    formacionPrevia?: true
    detalleFormacion?: true
    perteneceGrupo?: true
    detalleGrupo?: true
    diasDisponibles?: true
    motivacion?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroCulturalMaxAggregateInputType = {
    id?: true
    nombreCompleto?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    documentoIdentidad?: true
    municipioDepartamento?: true
    nivelEducativo?: true
    ocupacion?: true
    areaInteresPrincipal?: true
    otraAreaInteres?: true
    formacionPrevia?: true
    detalleFormacion?: true
    perteneceGrupo?: true
    detalleGrupo?: true
    diasDisponibles?: true
    motivacion?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroCulturalCountAggregateInputType = {
    id?: true
    nombreCompleto?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    documentoIdentidad?: true
    municipioDepartamento?: true
    nivelEducativo?: true
    ocupacion?: true
    areaInteresPrincipal?: true
    otraAreaInteres?: true
    formacionPrevia?: true
    detalleFormacion?: true
    perteneceGrupo?: true
    detalleGrupo?: true
    diasDisponibles?: true
    motivacion?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RegistroCulturalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroCultural to aggregate.
     */
    where?: RegistroCulturalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroCulturals to fetch.
     */
    orderBy?: RegistroCulturalOrderByWithRelationInput | RegistroCulturalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroCulturalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroCulturals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroCulturals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroCulturals
    **/
    _count?: true | RegistroCulturalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroCulturalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroCulturalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroCulturalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroCulturalMaxAggregateInputType
  }

  export type GetRegistroCulturalAggregateType<T extends RegistroCulturalAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroCultural]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroCultural[P]>
      : GetScalarType<T[P], AggregateRegistroCultural[P]>
  }




  export type RegistroCulturalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroCulturalWhereInput
    orderBy?: RegistroCulturalOrderByWithAggregationInput | RegistroCulturalOrderByWithAggregationInput[]
    by: RegistroCulturalScalarFieldEnum[] | RegistroCulturalScalarFieldEnum
    having?: RegistroCulturalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroCulturalCountAggregateInputType | true
    _avg?: RegistroCulturalAvgAggregateInputType
    _sum?: RegistroCulturalSumAggregateInputType
    _min?: RegistroCulturalMinAggregateInputType
    _max?: RegistroCulturalMaxAggregateInputType
  }

  export type RegistroCulturalGroupByOutputType = {
    id: number
    nombreCompleto: string
    fechaNacimiento: Date
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico: string | null
    direccion: string
    documentoIdentidad: string
    municipioDepartamento: string
    nivelEducativo: $Enums.NivelEducativo
    ocupacion: string
    areaInteresPrincipal: $Enums.AreaInteresCultural
    otraAreaInteres: string | null
    formacionPrevia: boolean
    detalleFormacion: string | null
    perteneceGrupo: boolean
    detalleGrupo: string | null
    diasDisponibles: string
    motivacion: string
    expectativas: string
    aceptaTerminos: boolean
    createdAt: Date
    updatedAt: Date
    _count: RegistroCulturalCountAggregateOutputType | null
    _avg: RegistroCulturalAvgAggregateOutputType | null
    _sum: RegistroCulturalSumAggregateOutputType | null
    _min: RegistroCulturalMinAggregateOutputType | null
    _max: RegistroCulturalMaxAggregateOutputType | null
  }

  type GetRegistroCulturalGroupByPayload<T extends RegistroCulturalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroCulturalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroCulturalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroCulturalGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroCulturalGroupByOutputType[P]>
        }
      >
    >


  export type RegistroCulturalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    documentoIdentidad?: boolean
    municipioDepartamento?: boolean
    nivelEducativo?: boolean
    ocupacion?: boolean
    areaInteresPrincipal?: boolean
    otraAreaInteres?: boolean
    formacionPrevia?: boolean
    detalleFormacion?: boolean
    perteneceGrupo?: boolean
    detalleGrupo?: boolean
    diasDisponibles?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroCultural"]>

  export type RegistroCulturalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    documentoIdentidad?: boolean
    municipioDepartamento?: boolean
    nivelEducativo?: boolean
    ocupacion?: boolean
    areaInteresPrincipal?: boolean
    otraAreaInteres?: boolean
    formacionPrevia?: boolean
    detalleFormacion?: boolean
    perteneceGrupo?: boolean
    detalleGrupo?: boolean
    diasDisponibles?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroCultural"]>

  export type RegistroCulturalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    documentoIdentidad?: boolean
    municipioDepartamento?: boolean
    nivelEducativo?: boolean
    ocupacion?: boolean
    areaInteresPrincipal?: boolean
    otraAreaInteres?: boolean
    formacionPrevia?: boolean
    detalleFormacion?: boolean
    perteneceGrupo?: boolean
    detalleGrupo?: boolean
    diasDisponibles?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroCultural"]>

  export type RegistroCulturalSelectScalar = {
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    documentoIdentidad?: boolean
    municipioDepartamento?: boolean
    nivelEducativo?: boolean
    ocupacion?: boolean
    areaInteresPrincipal?: boolean
    otraAreaInteres?: boolean
    formacionPrevia?: boolean
    detalleFormacion?: boolean
    perteneceGrupo?: boolean
    detalleGrupo?: boolean
    diasDisponibles?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RegistroCulturalOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombreCompleto" | "fechaNacimiento" | "comuna" | "estratoSocial" | "edad" | "grupoEtnico" | "telefonoContacto" | "correoElectronico" | "direccion" | "documentoIdentidad" | "municipioDepartamento" | "nivelEducativo" | "ocupacion" | "areaInteresPrincipal" | "otraAreaInteres" | "formacionPrevia" | "detalleFormacion" | "perteneceGrupo" | "detalleGrupo" | "diasDisponibles" | "motivacion" | "expectativas" | "aceptaTerminos" | "createdAt" | "updatedAt", ExtArgs["result"]["registroCultural"]>

  export type $RegistroCulturalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroCultural"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombreCompleto: string
      fechaNacimiento: Date
      comuna: string
      estratoSocial: $Enums.EstratoSocial
      edad: number
      grupoEtnico: $Enums.GrupoEtnico
      telefonoContacto: string
      correoElectronico: string | null
      direccion: string
      documentoIdentidad: string
      municipioDepartamento: string
      nivelEducativo: $Enums.NivelEducativo
      ocupacion: string
      areaInteresPrincipal: $Enums.AreaInteresCultural
      otraAreaInteres: string | null
      formacionPrevia: boolean
      detalleFormacion: string | null
      perteneceGrupo: boolean
      detalleGrupo: string | null
      diasDisponibles: string
      motivacion: string
      expectativas: string
      aceptaTerminos: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["registroCultural"]>
    composites: {}
  }

  type RegistroCulturalGetPayload<S extends boolean | null | undefined | RegistroCulturalDefaultArgs> = $Result.GetResult<Prisma.$RegistroCulturalPayload, S>

  type RegistroCulturalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegistroCulturalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegistroCulturalCountAggregateInputType | true
    }

  export interface RegistroCulturalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroCultural'], meta: { name: 'RegistroCultural' } }
    /**
     * Find zero or one RegistroCultural that matches the filter.
     * @param {RegistroCulturalFindUniqueArgs} args - Arguments to find a RegistroCultural
     * @example
     * // Get one RegistroCultural
     * const registroCultural = await prisma.registroCultural.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroCulturalFindUniqueArgs>(args: SelectSubset<T, RegistroCulturalFindUniqueArgs<ExtArgs>>): Prisma__RegistroCulturalClient<$Result.GetResult<Prisma.$RegistroCulturalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RegistroCultural that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegistroCulturalFindUniqueOrThrowArgs} args - Arguments to find a RegistroCultural
     * @example
     * // Get one RegistroCultural
     * const registroCultural = await prisma.registroCultural.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroCulturalFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroCulturalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroCulturalClient<$Result.GetResult<Prisma.$RegistroCulturalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroCultural that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCulturalFindFirstArgs} args - Arguments to find a RegistroCultural
     * @example
     * // Get one RegistroCultural
     * const registroCultural = await prisma.registroCultural.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroCulturalFindFirstArgs>(args?: SelectSubset<T, RegistroCulturalFindFirstArgs<ExtArgs>>): Prisma__RegistroCulturalClient<$Result.GetResult<Prisma.$RegistroCulturalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroCultural that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCulturalFindFirstOrThrowArgs} args - Arguments to find a RegistroCultural
     * @example
     * // Get one RegistroCultural
     * const registroCultural = await prisma.registroCultural.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroCulturalFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroCulturalFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroCulturalClient<$Result.GetResult<Prisma.$RegistroCulturalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RegistroCulturals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCulturalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroCulturals
     * const registroCulturals = await prisma.registroCultural.findMany()
     * 
     * // Get first 10 RegistroCulturals
     * const registroCulturals = await prisma.registroCultural.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroCulturalWithIdOnly = await prisma.registroCultural.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroCulturalFindManyArgs>(args?: SelectSubset<T, RegistroCulturalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroCulturalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RegistroCultural.
     * @param {RegistroCulturalCreateArgs} args - Arguments to create a RegistroCultural.
     * @example
     * // Create one RegistroCultural
     * const RegistroCultural = await prisma.registroCultural.create({
     *   data: {
     *     // ... data to create a RegistroCultural
     *   }
     * })
     * 
     */
    create<T extends RegistroCulturalCreateArgs>(args: SelectSubset<T, RegistroCulturalCreateArgs<ExtArgs>>): Prisma__RegistroCulturalClient<$Result.GetResult<Prisma.$RegistroCulturalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RegistroCulturals.
     * @param {RegistroCulturalCreateManyArgs} args - Arguments to create many RegistroCulturals.
     * @example
     * // Create many RegistroCulturals
     * const registroCultural = await prisma.registroCultural.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroCulturalCreateManyArgs>(args?: SelectSubset<T, RegistroCulturalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroCulturals and returns the data saved in the database.
     * @param {RegistroCulturalCreateManyAndReturnArgs} args - Arguments to create many RegistroCulturals.
     * @example
     * // Create many RegistroCulturals
     * const registroCultural = await prisma.registroCultural.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroCulturals and only return the `id`
     * const registroCulturalWithIdOnly = await prisma.registroCultural.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroCulturalCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroCulturalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroCulturalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RegistroCultural.
     * @param {RegistroCulturalDeleteArgs} args - Arguments to delete one RegistroCultural.
     * @example
     * // Delete one RegistroCultural
     * const RegistroCultural = await prisma.registroCultural.delete({
     *   where: {
     *     // ... filter to delete one RegistroCultural
     *   }
     * })
     * 
     */
    delete<T extends RegistroCulturalDeleteArgs>(args: SelectSubset<T, RegistroCulturalDeleteArgs<ExtArgs>>): Prisma__RegistroCulturalClient<$Result.GetResult<Prisma.$RegistroCulturalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RegistroCultural.
     * @param {RegistroCulturalUpdateArgs} args - Arguments to update one RegistroCultural.
     * @example
     * // Update one RegistroCultural
     * const registroCultural = await prisma.registroCultural.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroCulturalUpdateArgs>(args: SelectSubset<T, RegistroCulturalUpdateArgs<ExtArgs>>): Prisma__RegistroCulturalClient<$Result.GetResult<Prisma.$RegistroCulturalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RegistroCulturals.
     * @param {RegistroCulturalDeleteManyArgs} args - Arguments to filter RegistroCulturals to delete.
     * @example
     * // Delete a few RegistroCulturals
     * const { count } = await prisma.registroCultural.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroCulturalDeleteManyArgs>(args?: SelectSubset<T, RegistroCulturalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroCulturals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCulturalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroCulturals
     * const registroCultural = await prisma.registroCultural.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroCulturalUpdateManyArgs>(args: SelectSubset<T, RegistroCulturalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroCulturals and returns the data updated in the database.
     * @param {RegistroCulturalUpdateManyAndReturnArgs} args - Arguments to update many RegistroCulturals.
     * @example
     * // Update many RegistroCulturals
     * const registroCultural = await prisma.registroCultural.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RegistroCulturals and only return the `id`
     * const registroCulturalWithIdOnly = await prisma.registroCultural.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegistroCulturalUpdateManyAndReturnArgs>(args: SelectSubset<T, RegistroCulturalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroCulturalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RegistroCultural.
     * @param {RegistroCulturalUpsertArgs} args - Arguments to update or create a RegistroCultural.
     * @example
     * // Update or create a RegistroCultural
     * const registroCultural = await prisma.registroCultural.upsert({
     *   create: {
     *     // ... data to create a RegistroCultural
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroCultural we want to update
     *   }
     * })
     */
    upsert<T extends RegistroCulturalUpsertArgs>(args: SelectSubset<T, RegistroCulturalUpsertArgs<ExtArgs>>): Prisma__RegistroCulturalClient<$Result.GetResult<Prisma.$RegistroCulturalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RegistroCulturals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCulturalCountArgs} args - Arguments to filter RegistroCulturals to count.
     * @example
     * // Count the number of RegistroCulturals
     * const count = await prisma.registroCultural.count({
     *   where: {
     *     // ... the filter for the RegistroCulturals we want to count
     *   }
     * })
    **/
    count<T extends RegistroCulturalCountArgs>(
      args?: Subset<T, RegistroCulturalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroCulturalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroCultural.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCulturalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroCulturalAggregateArgs>(args: Subset<T, RegistroCulturalAggregateArgs>): Prisma.PrismaPromise<GetRegistroCulturalAggregateType<T>>

    /**
     * Group by RegistroCultural.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCulturalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroCulturalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroCulturalGroupByArgs['orderBy'] }
        : { orderBy?: RegistroCulturalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroCulturalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroCulturalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroCultural model
   */
  readonly fields: RegistroCulturalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroCultural.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroCulturalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroCultural model
   */
  interface RegistroCulturalFieldRefs {
    readonly id: FieldRef<"RegistroCultural", 'Int'>
    readonly nombreCompleto: FieldRef<"RegistroCultural", 'String'>
    readonly fechaNacimiento: FieldRef<"RegistroCultural", 'DateTime'>
    readonly comuna: FieldRef<"RegistroCultural", 'String'>
    readonly estratoSocial: FieldRef<"RegistroCultural", 'EstratoSocial'>
    readonly edad: FieldRef<"RegistroCultural", 'Int'>
    readonly grupoEtnico: FieldRef<"RegistroCultural", 'GrupoEtnico'>
    readonly telefonoContacto: FieldRef<"RegistroCultural", 'String'>
    readonly correoElectronico: FieldRef<"RegistroCultural", 'String'>
    readonly direccion: FieldRef<"RegistroCultural", 'String'>
    readonly documentoIdentidad: FieldRef<"RegistroCultural", 'String'>
    readonly municipioDepartamento: FieldRef<"RegistroCultural", 'String'>
    readonly nivelEducativo: FieldRef<"RegistroCultural", 'NivelEducativo'>
    readonly ocupacion: FieldRef<"RegistroCultural", 'String'>
    readonly areaInteresPrincipal: FieldRef<"RegistroCultural", 'AreaInteresCultural'>
    readonly otraAreaInteres: FieldRef<"RegistroCultural", 'String'>
    readonly formacionPrevia: FieldRef<"RegistroCultural", 'Boolean'>
    readonly detalleFormacion: FieldRef<"RegistroCultural", 'String'>
    readonly perteneceGrupo: FieldRef<"RegistroCultural", 'Boolean'>
    readonly detalleGrupo: FieldRef<"RegistroCultural", 'String'>
    readonly diasDisponibles: FieldRef<"RegistroCultural", 'String'>
    readonly motivacion: FieldRef<"RegistroCultural", 'String'>
    readonly expectativas: FieldRef<"RegistroCultural", 'String'>
    readonly aceptaTerminos: FieldRef<"RegistroCultural", 'Boolean'>
    readonly createdAt: FieldRef<"RegistroCultural", 'DateTime'>
    readonly updatedAt: FieldRef<"RegistroCultural", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RegistroCultural findUnique
   */
  export type RegistroCulturalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCultural
     */
    select?: RegistroCulturalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroCultural
     */
    omit?: RegistroCulturalOmit<ExtArgs> | null
    /**
     * Filter, which RegistroCultural to fetch.
     */
    where: RegistroCulturalWhereUniqueInput
  }

  /**
   * RegistroCultural findUniqueOrThrow
   */
  export type RegistroCulturalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCultural
     */
    select?: RegistroCulturalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroCultural
     */
    omit?: RegistroCulturalOmit<ExtArgs> | null
    /**
     * Filter, which RegistroCultural to fetch.
     */
    where: RegistroCulturalWhereUniqueInput
  }

  /**
   * RegistroCultural findFirst
   */
  export type RegistroCulturalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCultural
     */
    select?: RegistroCulturalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroCultural
     */
    omit?: RegistroCulturalOmit<ExtArgs> | null
    /**
     * Filter, which RegistroCultural to fetch.
     */
    where?: RegistroCulturalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroCulturals to fetch.
     */
    orderBy?: RegistroCulturalOrderByWithRelationInput | RegistroCulturalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroCulturals.
     */
    cursor?: RegistroCulturalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroCulturals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroCulturals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroCulturals.
     */
    distinct?: RegistroCulturalScalarFieldEnum | RegistroCulturalScalarFieldEnum[]
  }

  /**
   * RegistroCultural findFirstOrThrow
   */
  export type RegistroCulturalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCultural
     */
    select?: RegistroCulturalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroCultural
     */
    omit?: RegistroCulturalOmit<ExtArgs> | null
    /**
     * Filter, which RegistroCultural to fetch.
     */
    where?: RegistroCulturalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroCulturals to fetch.
     */
    orderBy?: RegistroCulturalOrderByWithRelationInput | RegistroCulturalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroCulturals.
     */
    cursor?: RegistroCulturalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroCulturals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroCulturals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroCulturals.
     */
    distinct?: RegistroCulturalScalarFieldEnum | RegistroCulturalScalarFieldEnum[]
  }

  /**
   * RegistroCultural findMany
   */
  export type RegistroCulturalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCultural
     */
    select?: RegistroCulturalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroCultural
     */
    omit?: RegistroCulturalOmit<ExtArgs> | null
    /**
     * Filter, which RegistroCulturals to fetch.
     */
    where?: RegistroCulturalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroCulturals to fetch.
     */
    orderBy?: RegistroCulturalOrderByWithRelationInput | RegistroCulturalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroCulturals.
     */
    cursor?: RegistroCulturalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroCulturals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroCulturals.
     */
    skip?: number
    distinct?: RegistroCulturalScalarFieldEnum | RegistroCulturalScalarFieldEnum[]
  }

  /**
   * RegistroCultural create
   */
  export type RegistroCulturalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCultural
     */
    select?: RegistroCulturalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroCultural
     */
    omit?: RegistroCulturalOmit<ExtArgs> | null
    /**
     * The data needed to create a RegistroCultural.
     */
    data: XOR<RegistroCulturalCreateInput, RegistroCulturalUncheckedCreateInput>
  }

  /**
   * RegistroCultural createMany
   */
  export type RegistroCulturalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroCulturals.
     */
    data: RegistroCulturalCreateManyInput | RegistroCulturalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroCultural createManyAndReturn
   */
  export type RegistroCulturalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCultural
     */
    select?: RegistroCulturalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroCultural
     */
    omit?: RegistroCulturalOmit<ExtArgs> | null
    /**
     * The data used to create many RegistroCulturals.
     */
    data: RegistroCulturalCreateManyInput | RegistroCulturalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroCultural update
   */
  export type RegistroCulturalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCultural
     */
    select?: RegistroCulturalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroCultural
     */
    omit?: RegistroCulturalOmit<ExtArgs> | null
    /**
     * The data needed to update a RegistroCultural.
     */
    data: XOR<RegistroCulturalUpdateInput, RegistroCulturalUncheckedUpdateInput>
    /**
     * Choose, which RegistroCultural to update.
     */
    where: RegistroCulturalWhereUniqueInput
  }

  /**
   * RegistroCultural updateMany
   */
  export type RegistroCulturalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroCulturals.
     */
    data: XOR<RegistroCulturalUpdateManyMutationInput, RegistroCulturalUncheckedUpdateManyInput>
    /**
     * Filter which RegistroCulturals to update
     */
    where?: RegistroCulturalWhereInput
    /**
     * Limit how many RegistroCulturals to update.
     */
    limit?: number
  }

  /**
   * RegistroCultural updateManyAndReturn
   */
  export type RegistroCulturalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCultural
     */
    select?: RegistroCulturalSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroCultural
     */
    omit?: RegistroCulturalOmit<ExtArgs> | null
    /**
     * The data used to update RegistroCulturals.
     */
    data: XOR<RegistroCulturalUpdateManyMutationInput, RegistroCulturalUncheckedUpdateManyInput>
    /**
     * Filter which RegistroCulturals to update
     */
    where?: RegistroCulturalWhereInput
    /**
     * Limit how many RegistroCulturals to update.
     */
    limit?: number
  }

  /**
   * RegistroCultural upsert
   */
  export type RegistroCulturalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCultural
     */
    select?: RegistroCulturalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroCultural
     */
    omit?: RegistroCulturalOmit<ExtArgs> | null
    /**
     * The filter to search for the RegistroCultural to update in case it exists.
     */
    where: RegistroCulturalWhereUniqueInput
    /**
     * In case the RegistroCultural found by the `where` argument doesn't exist, create a new RegistroCultural with this data.
     */
    create: XOR<RegistroCulturalCreateInput, RegistroCulturalUncheckedCreateInput>
    /**
     * In case the RegistroCultural was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroCulturalUpdateInput, RegistroCulturalUncheckedUpdateInput>
  }

  /**
   * RegistroCultural delete
   */
  export type RegistroCulturalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCultural
     */
    select?: RegistroCulturalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroCultural
     */
    omit?: RegistroCulturalOmit<ExtArgs> | null
    /**
     * Filter which RegistroCultural to delete.
     */
    where: RegistroCulturalWhereUniqueInput
  }

  /**
   * RegistroCultural deleteMany
   */
  export type RegistroCulturalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroCulturals to delete
     */
    where?: RegistroCulturalWhereInput
    /**
     * Limit how many RegistroCulturals to delete.
     */
    limit?: number
  }

  /**
   * RegistroCultural without action
   */
  export type RegistroCulturalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCultural
     */
    select?: RegistroCulturalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroCultural
     */
    omit?: RegistroCulturalOmit<ExtArgs> | null
  }


  /**
   * Model RegistroEconomiaPlateada
   */

  export type AggregateRegistroEconomiaPlateada = {
    _count: RegistroEconomiaPlateadaCountAggregateOutputType | null
    _avg: RegistroEconomiaPlateadaAvgAggregateOutputType | null
    _sum: RegistroEconomiaPlateadaSumAggregateOutputType | null
    _min: RegistroEconomiaPlateadaMinAggregateOutputType | null
    _max: RegistroEconomiaPlateadaMaxAggregateOutputType | null
  }

  export type RegistroEconomiaPlateadaAvgAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type RegistroEconomiaPlateadaSumAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type RegistroEconomiaPlateadaMinAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    fechaNacimiento: Date | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    telefonoContacto: string | null
    correoElectronico: string | null
    direccion: string | null
    tipoDocumento: $Enums.TipoDocumento | null
    numeroDocumento: string | null
    genero: $Enums.Genero | null
    esPensionado: boolean | null
    actividadEconomica: string | null
    trabajoAnterior: boolean | null
    sectorTrabajo: string | null
    ingresosAdicionales: boolean | null
    fuenteIngresos: string | null
    otrasAreas: string | null
    habilidades: string | null
    tiempoSemanal: string | null
    motivacion: string | null
    expectativas: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroEconomiaPlateadaMaxAggregateOutputType = {
    id: number | null
    nombreCompleto: string | null
    fechaNacimiento: Date | null
    comuna: string | null
    estratoSocial: $Enums.EstratoSocial | null
    edad: number | null
    grupoEtnico: $Enums.GrupoEtnico | null
    telefonoContacto: string | null
    correoElectronico: string | null
    direccion: string | null
    tipoDocumento: $Enums.TipoDocumento | null
    numeroDocumento: string | null
    genero: $Enums.Genero | null
    esPensionado: boolean | null
    actividadEconomica: string | null
    trabajoAnterior: boolean | null
    sectorTrabajo: string | null
    ingresosAdicionales: boolean | null
    fuenteIngresos: string | null
    otrasAreas: string | null
    habilidades: string | null
    tiempoSemanal: string | null
    motivacion: string | null
    expectativas: string | null
    aceptaTerminos: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegistroEconomiaPlateadaCountAggregateOutputType = {
    id: number
    nombreCompleto: number
    fechaNacimiento: number
    comuna: number
    estratoSocial: number
    edad: number
    grupoEtnico: number
    telefonoContacto: number
    correoElectronico: number
    direccion: number
    tipoDocumento: number
    numeroDocumento: number
    genero: number
    esPensionado: number
    actividadEconomica: number
    trabajoAnterior: number
    sectorTrabajo: number
    ingresosAdicionales: number
    fuenteIngresos: number
    areasInteres: number
    otrasAreas: number
    habilidades: number
    tiempoSemanal: number
    motivacion: number
    expectativas: number
    aceptaTerminos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RegistroEconomiaPlateadaAvgAggregateInputType = {
    id?: true
    edad?: true
  }

  export type RegistroEconomiaPlateadaSumAggregateInputType = {
    id?: true
    edad?: true
  }

  export type RegistroEconomiaPlateadaMinAggregateInputType = {
    id?: true
    nombreCompleto?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    tipoDocumento?: true
    numeroDocumento?: true
    genero?: true
    esPensionado?: true
    actividadEconomica?: true
    trabajoAnterior?: true
    sectorTrabajo?: true
    ingresosAdicionales?: true
    fuenteIngresos?: true
    otrasAreas?: true
    habilidades?: true
    tiempoSemanal?: true
    motivacion?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroEconomiaPlateadaMaxAggregateInputType = {
    id?: true
    nombreCompleto?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    tipoDocumento?: true
    numeroDocumento?: true
    genero?: true
    esPensionado?: true
    actividadEconomica?: true
    trabajoAnterior?: true
    sectorTrabajo?: true
    ingresosAdicionales?: true
    fuenteIngresos?: true
    otrasAreas?: true
    habilidades?: true
    tiempoSemanal?: true
    motivacion?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegistroEconomiaPlateadaCountAggregateInputType = {
    id?: true
    nombreCompleto?: true
    fechaNacimiento?: true
    comuna?: true
    estratoSocial?: true
    edad?: true
    grupoEtnico?: true
    telefonoContacto?: true
    correoElectronico?: true
    direccion?: true
    tipoDocumento?: true
    numeroDocumento?: true
    genero?: true
    esPensionado?: true
    actividadEconomica?: true
    trabajoAnterior?: true
    sectorTrabajo?: true
    ingresosAdicionales?: true
    fuenteIngresos?: true
    areasInteres?: true
    otrasAreas?: true
    habilidades?: true
    tiempoSemanal?: true
    motivacion?: true
    expectativas?: true
    aceptaTerminos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RegistroEconomiaPlateadaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroEconomiaPlateada to aggregate.
     */
    where?: RegistroEconomiaPlateadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroEconomiaPlateadas to fetch.
     */
    orderBy?: RegistroEconomiaPlateadaOrderByWithRelationInput | RegistroEconomiaPlateadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroEconomiaPlateadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroEconomiaPlateadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroEconomiaPlateadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroEconomiaPlateadas
    **/
    _count?: true | RegistroEconomiaPlateadaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroEconomiaPlateadaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroEconomiaPlateadaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroEconomiaPlateadaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroEconomiaPlateadaMaxAggregateInputType
  }

  export type GetRegistroEconomiaPlateadaAggregateType<T extends RegistroEconomiaPlateadaAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroEconomiaPlateada]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroEconomiaPlateada[P]>
      : GetScalarType<T[P], AggregateRegistroEconomiaPlateada[P]>
  }




  export type RegistroEconomiaPlateadaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroEconomiaPlateadaWhereInput
    orderBy?: RegistroEconomiaPlateadaOrderByWithAggregationInput | RegistroEconomiaPlateadaOrderByWithAggregationInput[]
    by: RegistroEconomiaPlateadaScalarFieldEnum[] | RegistroEconomiaPlateadaScalarFieldEnum
    having?: RegistroEconomiaPlateadaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroEconomiaPlateadaCountAggregateInputType | true
    _avg?: RegistroEconomiaPlateadaAvgAggregateInputType
    _sum?: RegistroEconomiaPlateadaSumAggregateInputType
    _min?: RegistroEconomiaPlateadaMinAggregateInputType
    _max?: RegistroEconomiaPlateadaMaxAggregateInputType
  }

  export type RegistroEconomiaPlateadaGroupByOutputType = {
    id: number
    nombreCompleto: string
    fechaNacimiento: Date
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico: string | null
    direccion: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    genero: $Enums.Genero
    esPensionado: boolean
    actividadEconomica: string | null
    trabajoAnterior: boolean
    sectorTrabajo: string | null
    ingresosAdicionales: boolean
    fuenteIngresos: string | null
    areasInteres: string[]
    otrasAreas: string | null
    habilidades: string
    tiempoSemanal: string
    motivacion: string
    expectativas: string
    aceptaTerminos: boolean
    createdAt: Date
    updatedAt: Date
    _count: RegistroEconomiaPlateadaCountAggregateOutputType | null
    _avg: RegistroEconomiaPlateadaAvgAggregateOutputType | null
    _sum: RegistroEconomiaPlateadaSumAggregateOutputType | null
    _min: RegistroEconomiaPlateadaMinAggregateOutputType | null
    _max: RegistroEconomiaPlateadaMaxAggregateOutputType | null
  }

  type GetRegistroEconomiaPlateadaGroupByPayload<T extends RegistroEconomiaPlateadaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroEconomiaPlateadaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroEconomiaPlateadaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroEconomiaPlateadaGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroEconomiaPlateadaGroupByOutputType[P]>
        }
      >
    >


  export type RegistroEconomiaPlateadaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    genero?: boolean
    esPensionado?: boolean
    actividadEconomica?: boolean
    trabajoAnterior?: boolean
    sectorTrabajo?: boolean
    ingresosAdicionales?: boolean
    fuenteIngresos?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    habilidades?: boolean
    tiempoSemanal?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroEconomiaPlateada"]>

  export type RegistroEconomiaPlateadaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    genero?: boolean
    esPensionado?: boolean
    actividadEconomica?: boolean
    trabajoAnterior?: boolean
    sectorTrabajo?: boolean
    ingresosAdicionales?: boolean
    fuenteIngresos?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    habilidades?: boolean
    tiempoSemanal?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroEconomiaPlateada"]>

  export type RegistroEconomiaPlateadaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    genero?: boolean
    esPensionado?: boolean
    actividadEconomica?: boolean
    trabajoAnterior?: boolean
    sectorTrabajo?: boolean
    ingresosAdicionales?: boolean
    fuenteIngresos?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    habilidades?: boolean
    tiempoSemanal?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["registroEconomiaPlateada"]>

  export type RegistroEconomiaPlateadaSelectScalar = {
    id?: boolean
    nombreCompleto?: boolean
    fechaNacimiento?: boolean
    comuna?: boolean
    estratoSocial?: boolean
    edad?: boolean
    grupoEtnico?: boolean
    telefonoContacto?: boolean
    correoElectronico?: boolean
    direccion?: boolean
    tipoDocumento?: boolean
    numeroDocumento?: boolean
    genero?: boolean
    esPensionado?: boolean
    actividadEconomica?: boolean
    trabajoAnterior?: boolean
    sectorTrabajo?: boolean
    ingresosAdicionales?: boolean
    fuenteIngresos?: boolean
    areasInteres?: boolean
    otrasAreas?: boolean
    habilidades?: boolean
    tiempoSemanal?: boolean
    motivacion?: boolean
    expectativas?: boolean
    aceptaTerminos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RegistroEconomiaPlateadaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombreCompleto" | "fechaNacimiento" | "comuna" | "estratoSocial" | "edad" | "grupoEtnico" | "telefonoContacto" | "correoElectronico" | "direccion" | "tipoDocumento" | "numeroDocumento" | "genero" | "esPensionado" | "actividadEconomica" | "trabajoAnterior" | "sectorTrabajo" | "ingresosAdicionales" | "fuenteIngresos" | "areasInteres" | "otrasAreas" | "habilidades" | "tiempoSemanal" | "motivacion" | "expectativas" | "aceptaTerminos" | "createdAt" | "updatedAt", ExtArgs["result"]["registroEconomiaPlateada"]>

  export type $RegistroEconomiaPlateadaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroEconomiaPlateada"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombreCompleto: string
      fechaNacimiento: Date
      comuna: string
      estratoSocial: $Enums.EstratoSocial
      edad: number
      grupoEtnico: $Enums.GrupoEtnico
      telefonoContacto: string
      correoElectronico: string | null
      direccion: string
      tipoDocumento: $Enums.TipoDocumento
      numeroDocumento: string
      genero: $Enums.Genero
      esPensionado: boolean
      actividadEconomica: string | null
      trabajoAnterior: boolean
      sectorTrabajo: string | null
      ingresosAdicionales: boolean
      fuenteIngresos: string | null
      areasInteres: string[]
      otrasAreas: string | null
      habilidades: string
      tiempoSemanal: string
      motivacion: string
      expectativas: string
      aceptaTerminos: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["registroEconomiaPlateada"]>
    composites: {}
  }

  type RegistroEconomiaPlateadaGetPayload<S extends boolean | null | undefined | RegistroEconomiaPlateadaDefaultArgs> = $Result.GetResult<Prisma.$RegistroEconomiaPlateadaPayload, S>

  type RegistroEconomiaPlateadaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegistroEconomiaPlateadaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegistroEconomiaPlateadaCountAggregateInputType | true
    }

  export interface RegistroEconomiaPlateadaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroEconomiaPlateada'], meta: { name: 'RegistroEconomiaPlateada' } }
    /**
     * Find zero or one RegistroEconomiaPlateada that matches the filter.
     * @param {RegistroEconomiaPlateadaFindUniqueArgs} args - Arguments to find a RegistroEconomiaPlateada
     * @example
     * // Get one RegistroEconomiaPlateada
     * const registroEconomiaPlateada = await prisma.registroEconomiaPlateada.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroEconomiaPlateadaFindUniqueArgs>(args: SelectSubset<T, RegistroEconomiaPlateadaFindUniqueArgs<ExtArgs>>): Prisma__RegistroEconomiaPlateadaClient<$Result.GetResult<Prisma.$RegistroEconomiaPlateadaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RegistroEconomiaPlateada that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegistroEconomiaPlateadaFindUniqueOrThrowArgs} args - Arguments to find a RegistroEconomiaPlateada
     * @example
     * // Get one RegistroEconomiaPlateada
     * const registroEconomiaPlateada = await prisma.registroEconomiaPlateada.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroEconomiaPlateadaFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroEconomiaPlateadaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroEconomiaPlateadaClient<$Result.GetResult<Prisma.$RegistroEconomiaPlateadaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroEconomiaPlateada that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroEconomiaPlateadaFindFirstArgs} args - Arguments to find a RegistroEconomiaPlateada
     * @example
     * // Get one RegistroEconomiaPlateada
     * const registroEconomiaPlateada = await prisma.registroEconomiaPlateada.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroEconomiaPlateadaFindFirstArgs>(args?: SelectSubset<T, RegistroEconomiaPlateadaFindFirstArgs<ExtArgs>>): Prisma__RegistroEconomiaPlateadaClient<$Result.GetResult<Prisma.$RegistroEconomiaPlateadaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegistroEconomiaPlateada that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroEconomiaPlateadaFindFirstOrThrowArgs} args - Arguments to find a RegistroEconomiaPlateada
     * @example
     * // Get one RegistroEconomiaPlateada
     * const registroEconomiaPlateada = await prisma.registroEconomiaPlateada.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroEconomiaPlateadaFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroEconomiaPlateadaFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroEconomiaPlateadaClient<$Result.GetResult<Prisma.$RegistroEconomiaPlateadaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RegistroEconomiaPlateadas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroEconomiaPlateadaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroEconomiaPlateadas
     * const registroEconomiaPlateadas = await prisma.registroEconomiaPlateada.findMany()
     * 
     * // Get first 10 RegistroEconomiaPlateadas
     * const registroEconomiaPlateadas = await prisma.registroEconomiaPlateada.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroEconomiaPlateadaWithIdOnly = await prisma.registroEconomiaPlateada.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroEconomiaPlateadaFindManyArgs>(args?: SelectSubset<T, RegistroEconomiaPlateadaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroEconomiaPlateadaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RegistroEconomiaPlateada.
     * @param {RegistroEconomiaPlateadaCreateArgs} args - Arguments to create a RegistroEconomiaPlateada.
     * @example
     * // Create one RegistroEconomiaPlateada
     * const RegistroEconomiaPlateada = await prisma.registroEconomiaPlateada.create({
     *   data: {
     *     // ... data to create a RegistroEconomiaPlateada
     *   }
     * })
     * 
     */
    create<T extends RegistroEconomiaPlateadaCreateArgs>(args: SelectSubset<T, RegistroEconomiaPlateadaCreateArgs<ExtArgs>>): Prisma__RegistroEconomiaPlateadaClient<$Result.GetResult<Prisma.$RegistroEconomiaPlateadaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RegistroEconomiaPlateadas.
     * @param {RegistroEconomiaPlateadaCreateManyArgs} args - Arguments to create many RegistroEconomiaPlateadas.
     * @example
     * // Create many RegistroEconomiaPlateadas
     * const registroEconomiaPlateada = await prisma.registroEconomiaPlateada.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroEconomiaPlateadaCreateManyArgs>(args?: SelectSubset<T, RegistroEconomiaPlateadaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroEconomiaPlateadas and returns the data saved in the database.
     * @param {RegistroEconomiaPlateadaCreateManyAndReturnArgs} args - Arguments to create many RegistroEconomiaPlateadas.
     * @example
     * // Create many RegistroEconomiaPlateadas
     * const registroEconomiaPlateada = await prisma.registroEconomiaPlateada.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroEconomiaPlateadas and only return the `id`
     * const registroEconomiaPlateadaWithIdOnly = await prisma.registroEconomiaPlateada.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroEconomiaPlateadaCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroEconomiaPlateadaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroEconomiaPlateadaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RegistroEconomiaPlateada.
     * @param {RegistroEconomiaPlateadaDeleteArgs} args - Arguments to delete one RegistroEconomiaPlateada.
     * @example
     * // Delete one RegistroEconomiaPlateada
     * const RegistroEconomiaPlateada = await prisma.registroEconomiaPlateada.delete({
     *   where: {
     *     // ... filter to delete one RegistroEconomiaPlateada
     *   }
     * })
     * 
     */
    delete<T extends RegistroEconomiaPlateadaDeleteArgs>(args: SelectSubset<T, RegistroEconomiaPlateadaDeleteArgs<ExtArgs>>): Prisma__RegistroEconomiaPlateadaClient<$Result.GetResult<Prisma.$RegistroEconomiaPlateadaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RegistroEconomiaPlateada.
     * @param {RegistroEconomiaPlateadaUpdateArgs} args - Arguments to update one RegistroEconomiaPlateada.
     * @example
     * // Update one RegistroEconomiaPlateada
     * const registroEconomiaPlateada = await prisma.registroEconomiaPlateada.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroEconomiaPlateadaUpdateArgs>(args: SelectSubset<T, RegistroEconomiaPlateadaUpdateArgs<ExtArgs>>): Prisma__RegistroEconomiaPlateadaClient<$Result.GetResult<Prisma.$RegistroEconomiaPlateadaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RegistroEconomiaPlateadas.
     * @param {RegistroEconomiaPlateadaDeleteManyArgs} args - Arguments to filter RegistroEconomiaPlateadas to delete.
     * @example
     * // Delete a few RegistroEconomiaPlateadas
     * const { count } = await prisma.registroEconomiaPlateada.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroEconomiaPlateadaDeleteManyArgs>(args?: SelectSubset<T, RegistroEconomiaPlateadaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroEconomiaPlateadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroEconomiaPlateadaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroEconomiaPlateadas
     * const registroEconomiaPlateada = await prisma.registroEconomiaPlateada.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroEconomiaPlateadaUpdateManyArgs>(args: SelectSubset<T, RegistroEconomiaPlateadaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroEconomiaPlateadas and returns the data updated in the database.
     * @param {RegistroEconomiaPlateadaUpdateManyAndReturnArgs} args - Arguments to update many RegistroEconomiaPlateadas.
     * @example
     * // Update many RegistroEconomiaPlateadas
     * const registroEconomiaPlateada = await prisma.registroEconomiaPlateada.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RegistroEconomiaPlateadas and only return the `id`
     * const registroEconomiaPlateadaWithIdOnly = await prisma.registroEconomiaPlateada.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegistroEconomiaPlateadaUpdateManyAndReturnArgs>(args: SelectSubset<T, RegistroEconomiaPlateadaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroEconomiaPlateadaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RegistroEconomiaPlateada.
     * @param {RegistroEconomiaPlateadaUpsertArgs} args - Arguments to update or create a RegistroEconomiaPlateada.
     * @example
     * // Update or create a RegistroEconomiaPlateada
     * const registroEconomiaPlateada = await prisma.registroEconomiaPlateada.upsert({
     *   create: {
     *     // ... data to create a RegistroEconomiaPlateada
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroEconomiaPlateada we want to update
     *   }
     * })
     */
    upsert<T extends RegistroEconomiaPlateadaUpsertArgs>(args: SelectSubset<T, RegistroEconomiaPlateadaUpsertArgs<ExtArgs>>): Prisma__RegistroEconomiaPlateadaClient<$Result.GetResult<Prisma.$RegistroEconomiaPlateadaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RegistroEconomiaPlateadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroEconomiaPlateadaCountArgs} args - Arguments to filter RegistroEconomiaPlateadas to count.
     * @example
     * // Count the number of RegistroEconomiaPlateadas
     * const count = await prisma.registroEconomiaPlateada.count({
     *   where: {
     *     // ... the filter for the RegistroEconomiaPlateadas we want to count
     *   }
     * })
    **/
    count<T extends RegistroEconomiaPlateadaCountArgs>(
      args?: Subset<T, RegistroEconomiaPlateadaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroEconomiaPlateadaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroEconomiaPlateada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroEconomiaPlateadaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroEconomiaPlateadaAggregateArgs>(args: Subset<T, RegistroEconomiaPlateadaAggregateArgs>): Prisma.PrismaPromise<GetRegistroEconomiaPlateadaAggregateType<T>>

    /**
     * Group by RegistroEconomiaPlateada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroEconomiaPlateadaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroEconomiaPlateadaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroEconomiaPlateadaGroupByArgs['orderBy'] }
        : { orderBy?: RegistroEconomiaPlateadaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroEconomiaPlateadaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroEconomiaPlateadaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroEconomiaPlateada model
   */
  readonly fields: RegistroEconomiaPlateadaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroEconomiaPlateada.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroEconomiaPlateadaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroEconomiaPlateada model
   */
  interface RegistroEconomiaPlateadaFieldRefs {
    readonly id: FieldRef<"RegistroEconomiaPlateada", 'Int'>
    readonly nombreCompleto: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly fechaNacimiento: FieldRef<"RegistroEconomiaPlateada", 'DateTime'>
    readonly comuna: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly estratoSocial: FieldRef<"RegistroEconomiaPlateada", 'EstratoSocial'>
    readonly edad: FieldRef<"RegistroEconomiaPlateada", 'Int'>
    readonly grupoEtnico: FieldRef<"RegistroEconomiaPlateada", 'GrupoEtnico'>
    readonly telefonoContacto: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly correoElectronico: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly direccion: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly tipoDocumento: FieldRef<"RegistroEconomiaPlateada", 'TipoDocumento'>
    readonly numeroDocumento: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly genero: FieldRef<"RegistroEconomiaPlateada", 'Genero'>
    readonly esPensionado: FieldRef<"RegistroEconomiaPlateada", 'Boolean'>
    readonly actividadEconomica: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly trabajoAnterior: FieldRef<"RegistroEconomiaPlateada", 'Boolean'>
    readonly sectorTrabajo: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly ingresosAdicionales: FieldRef<"RegistroEconomiaPlateada", 'Boolean'>
    readonly fuenteIngresos: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly areasInteres: FieldRef<"RegistroEconomiaPlateada", 'String[]'>
    readonly otrasAreas: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly habilidades: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly tiempoSemanal: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly motivacion: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly expectativas: FieldRef<"RegistroEconomiaPlateada", 'String'>
    readonly aceptaTerminos: FieldRef<"RegistroEconomiaPlateada", 'Boolean'>
    readonly createdAt: FieldRef<"RegistroEconomiaPlateada", 'DateTime'>
    readonly updatedAt: FieldRef<"RegistroEconomiaPlateada", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RegistroEconomiaPlateada findUnique
   */
  export type RegistroEconomiaPlateadaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroEconomiaPlateada
     */
    select?: RegistroEconomiaPlateadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroEconomiaPlateada
     */
    omit?: RegistroEconomiaPlateadaOmit<ExtArgs> | null
    /**
     * Filter, which RegistroEconomiaPlateada to fetch.
     */
    where: RegistroEconomiaPlateadaWhereUniqueInput
  }

  /**
   * RegistroEconomiaPlateada findUniqueOrThrow
   */
  export type RegistroEconomiaPlateadaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroEconomiaPlateada
     */
    select?: RegistroEconomiaPlateadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroEconomiaPlateada
     */
    omit?: RegistroEconomiaPlateadaOmit<ExtArgs> | null
    /**
     * Filter, which RegistroEconomiaPlateada to fetch.
     */
    where: RegistroEconomiaPlateadaWhereUniqueInput
  }

  /**
   * RegistroEconomiaPlateada findFirst
   */
  export type RegistroEconomiaPlateadaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroEconomiaPlateada
     */
    select?: RegistroEconomiaPlateadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroEconomiaPlateada
     */
    omit?: RegistroEconomiaPlateadaOmit<ExtArgs> | null
    /**
     * Filter, which RegistroEconomiaPlateada to fetch.
     */
    where?: RegistroEconomiaPlateadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroEconomiaPlateadas to fetch.
     */
    orderBy?: RegistroEconomiaPlateadaOrderByWithRelationInput | RegistroEconomiaPlateadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroEconomiaPlateadas.
     */
    cursor?: RegistroEconomiaPlateadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroEconomiaPlateadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroEconomiaPlateadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroEconomiaPlateadas.
     */
    distinct?: RegistroEconomiaPlateadaScalarFieldEnum | RegistroEconomiaPlateadaScalarFieldEnum[]
  }

  /**
   * RegistroEconomiaPlateada findFirstOrThrow
   */
  export type RegistroEconomiaPlateadaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroEconomiaPlateada
     */
    select?: RegistroEconomiaPlateadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroEconomiaPlateada
     */
    omit?: RegistroEconomiaPlateadaOmit<ExtArgs> | null
    /**
     * Filter, which RegistroEconomiaPlateada to fetch.
     */
    where?: RegistroEconomiaPlateadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroEconomiaPlateadas to fetch.
     */
    orderBy?: RegistroEconomiaPlateadaOrderByWithRelationInput | RegistroEconomiaPlateadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroEconomiaPlateadas.
     */
    cursor?: RegistroEconomiaPlateadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroEconomiaPlateadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroEconomiaPlateadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroEconomiaPlateadas.
     */
    distinct?: RegistroEconomiaPlateadaScalarFieldEnum | RegistroEconomiaPlateadaScalarFieldEnum[]
  }

  /**
   * RegistroEconomiaPlateada findMany
   */
  export type RegistroEconomiaPlateadaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroEconomiaPlateada
     */
    select?: RegistroEconomiaPlateadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroEconomiaPlateada
     */
    omit?: RegistroEconomiaPlateadaOmit<ExtArgs> | null
    /**
     * Filter, which RegistroEconomiaPlateadas to fetch.
     */
    where?: RegistroEconomiaPlateadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroEconomiaPlateadas to fetch.
     */
    orderBy?: RegistroEconomiaPlateadaOrderByWithRelationInput | RegistroEconomiaPlateadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroEconomiaPlateadas.
     */
    cursor?: RegistroEconomiaPlateadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroEconomiaPlateadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroEconomiaPlateadas.
     */
    skip?: number
    distinct?: RegistroEconomiaPlateadaScalarFieldEnum | RegistroEconomiaPlateadaScalarFieldEnum[]
  }

  /**
   * RegistroEconomiaPlateada create
   */
  export type RegistroEconomiaPlateadaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroEconomiaPlateada
     */
    select?: RegistroEconomiaPlateadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroEconomiaPlateada
     */
    omit?: RegistroEconomiaPlateadaOmit<ExtArgs> | null
    /**
     * The data needed to create a RegistroEconomiaPlateada.
     */
    data: XOR<RegistroEconomiaPlateadaCreateInput, RegistroEconomiaPlateadaUncheckedCreateInput>
  }

  /**
   * RegistroEconomiaPlateada createMany
   */
  export type RegistroEconomiaPlateadaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroEconomiaPlateadas.
     */
    data: RegistroEconomiaPlateadaCreateManyInput | RegistroEconomiaPlateadaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroEconomiaPlateada createManyAndReturn
   */
  export type RegistroEconomiaPlateadaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroEconomiaPlateada
     */
    select?: RegistroEconomiaPlateadaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroEconomiaPlateada
     */
    omit?: RegistroEconomiaPlateadaOmit<ExtArgs> | null
    /**
     * The data used to create many RegistroEconomiaPlateadas.
     */
    data: RegistroEconomiaPlateadaCreateManyInput | RegistroEconomiaPlateadaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroEconomiaPlateada update
   */
  export type RegistroEconomiaPlateadaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroEconomiaPlateada
     */
    select?: RegistroEconomiaPlateadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroEconomiaPlateada
     */
    omit?: RegistroEconomiaPlateadaOmit<ExtArgs> | null
    /**
     * The data needed to update a RegistroEconomiaPlateada.
     */
    data: XOR<RegistroEconomiaPlateadaUpdateInput, RegistroEconomiaPlateadaUncheckedUpdateInput>
    /**
     * Choose, which RegistroEconomiaPlateada to update.
     */
    where: RegistroEconomiaPlateadaWhereUniqueInput
  }

  /**
   * RegistroEconomiaPlateada updateMany
   */
  export type RegistroEconomiaPlateadaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroEconomiaPlateadas.
     */
    data: XOR<RegistroEconomiaPlateadaUpdateManyMutationInput, RegistroEconomiaPlateadaUncheckedUpdateManyInput>
    /**
     * Filter which RegistroEconomiaPlateadas to update
     */
    where?: RegistroEconomiaPlateadaWhereInput
    /**
     * Limit how many RegistroEconomiaPlateadas to update.
     */
    limit?: number
  }

  /**
   * RegistroEconomiaPlateada updateManyAndReturn
   */
  export type RegistroEconomiaPlateadaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroEconomiaPlateada
     */
    select?: RegistroEconomiaPlateadaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroEconomiaPlateada
     */
    omit?: RegistroEconomiaPlateadaOmit<ExtArgs> | null
    /**
     * The data used to update RegistroEconomiaPlateadas.
     */
    data: XOR<RegistroEconomiaPlateadaUpdateManyMutationInput, RegistroEconomiaPlateadaUncheckedUpdateManyInput>
    /**
     * Filter which RegistroEconomiaPlateadas to update
     */
    where?: RegistroEconomiaPlateadaWhereInput
    /**
     * Limit how many RegistroEconomiaPlateadas to update.
     */
    limit?: number
  }

  /**
   * RegistroEconomiaPlateada upsert
   */
  export type RegistroEconomiaPlateadaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroEconomiaPlateada
     */
    select?: RegistroEconomiaPlateadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroEconomiaPlateada
     */
    omit?: RegistroEconomiaPlateadaOmit<ExtArgs> | null
    /**
     * The filter to search for the RegistroEconomiaPlateada to update in case it exists.
     */
    where: RegistroEconomiaPlateadaWhereUniqueInput
    /**
     * In case the RegistroEconomiaPlateada found by the `where` argument doesn't exist, create a new RegistroEconomiaPlateada with this data.
     */
    create: XOR<RegistroEconomiaPlateadaCreateInput, RegistroEconomiaPlateadaUncheckedCreateInput>
    /**
     * In case the RegistroEconomiaPlateada was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroEconomiaPlateadaUpdateInput, RegistroEconomiaPlateadaUncheckedUpdateInput>
  }

  /**
   * RegistroEconomiaPlateada delete
   */
  export type RegistroEconomiaPlateadaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroEconomiaPlateada
     */
    select?: RegistroEconomiaPlateadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroEconomiaPlateada
     */
    omit?: RegistroEconomiaPlateadaOmit<ExtArgs> | null
    /**
     * Filter which RegistroEconomiaPlateada to delete.
     */
    where: RegistroEconomiaPlateadaWhereUniqueInput
  }

  /**
   * RegistroEconomiaPlateada deleteMany
   */
  export type RegistroEconomiaPlateadaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroEconomiaPlateadas to delete
     */
    where?: RegistroEconomiaPlateadaWhereInput
    /**
     * Limit how many RegistroEconomiaPlateadas to delete.
     */
    limit?: number
  }

  /**
   * RegistroEconomiaPlateada without action
   */
  export type RegistroEconomiaPlateadaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroEconomiaPlateada
     */
    select?: RegistroEconomiaPlateadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegistroEconomiaPlateada
     */
    omit?: RegistroEconomiaPlateadaOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsersScalarFieldEnum: {
    id: 'id',
    name: 'name',
    lastName: 'lastName',
    email: 'email',
    password: 'password',
    rolId: 'rolId'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const PostScalarFieldEnum: {
    id: 'id',
    title: 'title',
    content: 'content',
    authorId: 'authorId',
    images: 'images'
  };

  export type PostScalarFieldEnum = (typeof PostScalarFieldEnum)[keyof typeof PostScalarFieldEnum]


  export const RegistroMujerVulnerableScalarFieldEnum: {
    id: 'id',
    nombreCompleto: 'nombreCompleto',
    tipoDocumento: 'tipoDocumento',
    numeroDocumento: 'numeroDocumento',
    fechaNacimiento: 'fechaNacimiento',
    comuna: 'comuna',
    estratoSocial: 'estratoSocial',
    edad: 'edad',
    grupoEtnico: 'grupoEtnico',
    telefonoContacto: 'telefonoContacto',
    correoElectronico: 'correoElectronico',
    direccion: 'direccion',
    esMadreCabeza: 'esMadreCabeza',
    numeroHijos: 'numeroHijos',
    conviveConOtrasPersonas: 'conviveConOtrasPersonas',
    conQuienesConvive: 'conQuienesConvive',
    nivelEducativo: 'nivelEducativo',
    tieneEmpleo: 'tieneEmpleo',
    actividadLaboral: 'actividadLaboral',
    fuenteIngresos: 'fuenteIngresos',
    areasApoyo: 'areasApoyo',
    otrasAreas: 'otrasAreas',
    tieneApoyoGubernamental: 'tieneApoyoGubernamental',
    tipoApoyoGubernamental: 'tipoApoyoGubernamental',
    motivacion: 'motivacion',
    tiempoSemanalDisponible: 'tiempoSemanalDisponible',
    expectativas: 'expectativas',
    aceptaTerminos: 'aceptaTerminos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RegistroMujerVulnerableScalarFieldEnum = (typeof RegistroMujerVulnerableScalarFieldEnum)[keyof typeof RegistroMujerVulnerableScalarFieldEnum]


  export const RegistroSemilleroInnovacionScalarFieldEnum: {
    id: 'id',
    nombreCompleto: 'nombreCompleto',
    tipoDocumento: 'tipoDocumento',
    numeroDocumento: 'numeroDocumento',
    fechaNacimiento: 'fechaNacimiento',
    comuna: 'comuna',
    estratoSocial: 'estratoSocial',
    edad: 'edad',
    grupoEtnico: 'grupoEtnico',
    telefonoContacto: 'telefonoContacto',
    correoElectronico: 'correoElectronico',
    direccion: 'direccion',
    tipoVinculacion: 'tipoVinculacion',
    nombreEntidadVinculacion: 'nombreEntidadVinculacion',
    nivelEducativo: 'nivelEducativo',
    participacionPrevia: 'participacionPrevia',
    areasInteres: 'areasInteres',
    otrasAreas: 'otrasAreas',
    tieneProyecto: 'tieneProyecto',
    descripcionProyecto: 'descripcionProyecto',
    habilidades: 'habilidades',
    disponibilidad: 'disponibilidad',
    motivacion: 'motivacion',
    expectativas: 'expectativas',
    aceptaTerminos: 'aceptaTerminos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RegistroSemilleroInnovacionScalarFieldEnum = (typeof RegistroSemilleroInnovacionScalarFieldEnum)[keyof typeof RegistroSemilleroInnovacionScalarFieldEnum]


  export const RegistroTallerSteamScalarFieldEnum: {
    id: 'id',
    nombreCompleto: 'nombreCompleto',
    fechaNacimiento: 'fechaNacimiento',
    comuna: 'comuna',
    estratoSocial: 'estratoSocial',
    edad: 'edad',
    grupoEtnico: 'grupoEtnico',
    institucionEducativa: 'institucionEducativa',
    cursoGrado: 'cursoGrado',
    direccion: 'direccion',
    nombreAcudiente: 'nombreAcudiente',
    relacionNino: 'relacionNino',
    telefonoContacto: 'telefonoContacto',
    correoElectronico: 'correoElectronico',
    participacionPrevia: 'participacionPrevia',
    actividadesInteres: 'actividadesInteres',
    otrasActividades: 'otrasActividades',
    disponibilidad: 'disponibilidad',
    accesoComputadora: 'accesoComputadora',
    accesoInternet: 'accesoInternet',
    motivacion: 'motivacion',
    expectativa: 'expectativa',
    aceptaTerminos: 'aceptaTerminos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RegistroTallerSteamScalarFieldEnum = (typeof RegistroTallerSteamScalarFieldEnum)[keyof typeof RegistroTallerSteamScalarFieldEnum]


  export const RegistroSeguridadAlimentariaScalarFieldEnum: {
    id: 'id',
    nombreResponsable: 'nombreResponsable',
    tipoDocumento: 'tipoDocumento',
    numeroDocumento: 'numeroDocumento',
    fechaNacimiento: 'fechaNacimiento',
    telefono: 'telefono',
    correoElectronico: 'correoElectronico',
    direccion: 'direccion',
    barrio: 'barrio',
    comuna: 'comuna',
    estratoSocial: 'estratoSocial',
    grupoEtnico: 'grupoEtnico',
    esAgricultor: 'esAgricultor',
    tieneTierras: 'tieneTierras',
    hectareas: 'hectareas',
    pisoTermico: 'pisoTermico',
    tieneCultivo: 'tieneCultivo',
    tiposCultivo: 'tiposCultivo',
    participacionPrevia: 'participacionPrevia',
    proyectosAnteriores: 'proyectosAnteriores',
    tieneRiego: 'tieneRiego',
    tieneHerramientas: 'tieneHerramientas',
    tiposHerramientas: 'tiposHerramientas',
    tieneAsistenciaTecnica: 'tieneAsistenciaTecnica',
    motivacion: 'motivacion',
    tiempoSemanal: 'tiempoSemanal',
    expectativas: 'expectativas',
    aceptaTerminos: 'aceptaTerminos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RegistroSeguridadAlimentariaScalarFieldEnum = (typeof RegistroSeguridadAlimentariaScalarFieldEnum)[keyof typeof RegistroSeguridadAlimentariaScalarFieldEnum]


  export const RegistroRefuerzoEscolarScalarFieldEnum: {
    id: 'id',
    nombreCompleto: 'nombreCompleto',
    fechaNacimiento: 'fechaNacimiento',
    comuna: 'comuna',
    estratoSocial: 'estratoSocial',
    edad: 'edad',
    grupoEtnico: 'grupoEtnico',
    institucionEducativa: 'institucionEducativa',
    cursoGrado: 'cursoGrado',
    direccion: 'direccion',
    nombreAcudiente: 'nombreAcudiente',
    relacionNino: 'relacionNino',
    telefonoContacto: 'telefonoContacto',
    correoElectronico: 'correoElectronico',
    areasAyuda: 'areasAyuda',
    otrasAreas: 'otrasAreas',
    refuerzoPrevio: 'refuerzoPrevio',
    dificultadesAcademicas: 'dificultadesAcademicas',
    disponibilidad: 'disponibilidad',
    accesoMateriales: 'accesoMateriales',
    apoyoHabitos: 'apoyoHabitos',
    motivacion: 'motivacion',
    expectativas: 'expectativas',
    aceptaTerminos: 'aceptaTerminos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RegistroRefuerzoEscolarScalarFieldEnum = (typeof RegistroRefuerzoEscolarScalarFieldEnum)[keyof typeof RegistroRefuerzoEscolarScalarFieldEnum]


  export const RegistroSoftwareFactoryScalarFieldEnum: {
    id: 'id',
    nombreCompleto: 'nombreCompleto',
    tipoDocumento: 'tipoDocumento',
    numeroDocumento: 'numeroDocumento',
    fechaNacimiento: 'fechaNacimiento',
    telefonoContacto: 'telefonoContacto',
    correoElectronico: 'correoElectronico',
    direccion: 'direccion',
    comuna: 'comuna',
    estratoSocial: 'estratoSocial',
    edad: 'edad',
    grupoEtnico: 'grupoEtnico',
    modalidadVinculacion: 'modalidadVinculacion',
    institucionEducativa: 'institucionEducativa',
    programaAcademico: 'programaAcademico',
    semestreNivel: 'semestreNivel',
    tiempoDisponible: 'tiempoDisponible',
    tecnologias: 'tecnologias',
    proyectosRealizados: 'proyectosRealizados',
    areasInteres: 'areasInteres',
    otrasAreas: 'otrasAreas',
    experienciaAgile: 'experienciaAgile',
    motivacion: 'motivacion',
    aceptaTerminos: 'aceptaTerminos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RegistroSoftwareFactoryScalarFieldEnum = (typeof RegistroSoftwareFactoryScalarFieldEnum)[keyof typeof RegistroSoftwareFactoryScalarFieldEnum]


  export const RegistroVoluntariadoScalarFieldEnum: {
    id: 'id',
    nombreCompleto: 'nombreCompleto',
    tipoDocumento: 'tipoDocumento',
    numeroDocumento: 'numeroDocumento',
    fechaNacimiento: 'fechaNacimiento',
    telefonoContacto: 'telefonoContacto',
    correoElectronico: 'correoElectronico',
    direccion: 'direccion',
    comuna: 'comuna',
    estratoSocial: 'estratoSocial',
    edad: 'edad',
    grupoEtnico: 'grupoEtnico',
    nivelEducativo: 'nivelEducativo',
    profesionOcupacion: 'profesionOcupacion',
    disponibilidadTipo: 'disponibilidadTipo',
    diasEspecificos: 'diasEspecificos',
    horasDisponibles: 'horasDisponibles',
    areasInteres: 'areasInteres',
    otrasAreas: 'otrasAreas',
    habilidades: 'habilidades',
    fundacion: 'fundacion',
    funcion: 'funcion',
    tiempo: 'tiempo',
    motivacion: 'motivacion',
    referencia1Nombre: 'referencia1Nombre',
    referencia1Telefono: 'referencia1Telefono',
    referencia2Nombre: 'referencia2Nombre',
    referencia2Telefono: 'referencia2Telefono',
    aceptaTerminos: 'aceptaTerminos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RegistroVoluntariadoScalarFieldEnum = (typeof RegistroVoluntariadoScalarFieldEnum)[keyof typeof RegistroVoluntariadoScalarFieldEnum]


  export const RegistroCulturalScalarFieldEnum: {
    id: 'id',
    nombreCompleto: 'nombreCompleto',
    fechaNacimiento: 'fechaNacimiento',
    comuna: 'comuna',
    estratoSocial: 'estratoSocial',
    edad: 'edad',
    grupoEtnico: 'grupoEtnico',
    telefonoContacto: 'telefonoContacto',
    correoElectronico: 'correoElectronico',
    direccion: 'direccion',
    documentoIdentidad: 'documentoIdentidad',
    municipioDepartamento: 'municipioDepartamento',
    nivelEducativo: 'nivelEducativo',
    ocupacion: 'ocupacion',
    areaInteresPrincipal: 'areaInteresPrincipal',
    otraAreaInteres: 'otraAreaInteres',
    formacionPrevia: 'formacionPrevia',
    detalleFormacion: 'detalleFormacion',
    perteneceGrupo: 'perteneceGrupo',
    detalleGrupo: 'detalleGrupo',
    diasDisponibles: 'diasDisponibles',
    motivacion: 'motivacion',
    expectativas: 'expectativas',
    aceptaTerminos: 'aceptaTerminos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RegistroCulturalScalarFieldEnum = (typeof RegistroCulturalScalarFieldEnum)[keyof typeof RegistroCulturalScalarFieldEnum]


  export const RegistroEconomiaPlateadaScalarFieldEnum: {
    id: 'id',
    nombreCompleto: 'nombreCompleto',
    fechaNacimiento: 'fechaNacimiento',
    comuna: 'comuna',
    estratoSocial: 'estratoSocial',
    edad: 'edad',
    grupoEtnico: 'grupoEtnico',
    telefonoContacto: 'telefonoContacto',
    correoElectronico: 'correoElectronico',
    direccion: 'direccion',
    tipoDocumento: 'tipoDocumento',
    numeroDocumento: 'numeroDocumento',
    genero: 'genero',
    esPensionado: 'esPensionado',
    actividadEconomica: 'actividadEconomica',
    trabajoAnterior: 'trabajoAnterior',
    sectorTrabajo: 'sectorTrabajo',
    ingresosAdicionales: 'ingresosAdicionales',
    fuenteIngresos: 'fuenteIngresos',
    areasInteres: 'areasInteres',
    otrasAreas: 'otrasAreas',
    habilidades: 'habilidades',
    tiempoSemanal: 'tiempoSemanal',
    motivacion: 'motivacion',
    expectativas: 'expectativas',
    aceptaTerminos: 'aceptaTerminos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RegistroEconomiaPlateadaScalarFieldEnum = (typeof RegistroEconomiaPlateadaScalarFieldEnum)[keyof typeof RegistroEconomiaPlateadaScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'TipoDocumento'
   */
  export type EnumTipoDocumentoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoDocumento'>
    


  /**
   * Reference to a field of type 'TipoDocumento[]'
   */
  export type ListEnumTipoDocumentoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoDocumento[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'EstratoSocial'
   */
  export type EnumEstratoSocialFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstratoSocial'>
    


  /**
   * Reference to a field of type 'EstratoSocial[]'
   */
  export type ListEnumEstratoSocialFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstratoSocial[]'>
    


  /**
   * Reference to a field of type 'GrupoEtnico'
   */
  export type EnumGrupoEtnicoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'GrupoEtnico'>
    


  /**
   * Reference to a field of type 'GrupoEtnico[]'
   */
  export type ListEnumGrupoEtnicoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'GrupoEtnico[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'NivelEducativo'
   */
  export type EnumNivelEducativoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NivelEducativo'>
    


  /**
   * Reference to a field of type 'NivelEducativo[]'
   */
  export type ListEnumNivelEducativoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NivelEducativo[]'>
    


  /**
   * Reference to a field of type 'AreaApoyo[]'
   */
  export type ListEnumAreaApoyoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AreaApoyo[]'>
    


  /**
   * Reference to a field of type 'AreaApoyo'
   */
  export type EnumAreaApoyoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AreaApoyo'>
    


  /**
   * Reference to a field of type 'TipoVinculacion'
   */
  export type EnumTipoVinculacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoVinculacion'>
    


  /**
   * Reference to a field of type 'TipoVinculacion[]'
   */
  export type ListEnumTipoVinculacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoVinculacion[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'TipoDisponibilidad'
   */
  export type EnumTipoDisponibilidadFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoDisponibilidad'>
    


  /**
   * Reference to a field of type 'TipoDisponibilidad[]'
   */
  export type ListEnumTipoDisponibilidadFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoDisponibilidad[]'>
    


  /**
   * Reference to a field of type 'AreaInteresCultural'
   */
  export type EnumAreaInteresCulturalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AreaInteresCultural'>
    


  /**
   * Reference to a field of type 'AreaInteresCultural[]'
   */
  export type ListEnumAreaInteresCulturalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AreaInteresCultural[]'>
    


  /**
   * Reference to a field of type 'Genero'
   */
  export type EnumGeneroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Genero'>
    


  /**
   * Reference to a field of type 'Genero[]'
   */
  export type ListEnumGeneroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Genero[]'>
    
  /**
   * Deep Input Types
   */


  export type UsersWhereInput = {
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    id?: IntFilter<"Users"> | number
    name?: StringFilter<"Users"> | string
    lastName?: StringFilter<"Users"> | string
    email?: StringFilter<"Users"> | string
    password?: StringFilter<"Users"> | string
    rolId?: IntFilter<"Users"> | number
    posts?: PostListRelationFilter
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }

  export type UsersOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rolId?: SortOrder
    posts?: PostOrderByRelationAggregateInput
    role?: RoleOrderByWithRelationInput
  }

  export type UsersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    name?: StringFilter<"Users"> | string
    lastName?: StringFilter<"Users"> | string
    password?: StringFilter<"Users"> | string
    rolId?: IntFilter<"Users"> | number
    posts?: PostListRelationFilter
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }, "id" | "email">

  export type UsersOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rolId?: SortOrder
    _count?: UsersCountOrderByAggregateInput
    _avg?: UsersAvgOrderByAggregateInput
    _max?: UsersMaxOrderByAggregateInput
    _min?: UsersMinOrderByAggregateInput
    _sum?: UsersSumOrderByAggregateInput
  }

  export type UsersScalarWhereWithAggregatesInput = {
    AND?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    OR?: UsersScalarWhereWithAggregatesInput[]
    NOT?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Users"> | number
    name?: StringWithAggregatesFilter<"Users"> | string
    lastName?: StringWithAggregatesFilter<"Users"> | string
    email?: StringWithAggregatesFilter<"Users"> | string
    password?: StringWithAggregatesFilter<"Users"> | string
    rolId?: IntWithAggregatesFilter<"Users"> | number
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: IntFilter<"Role"> | number
    name?: StringFilter<"Role"> | string
    users?: UsersListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    users?: UsersOrderByRelationAggregateInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    name?: StringFilter<"Role"> | string
    users?: UsersListRelationFilter
  }, "id">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: RoleCountOrderByAggregateInput
    _avg?: RoleAvgOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
    _sum?: RoleSumOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Role"> | number
    name?: StringWithAggregatesFilter<"Role"> | string
  }

  export type PostWhereInput = {
    AND?: PostWhereInput | PostWhereInput[]
    OR?: PostWhereInput[]
    NOT?: PostWhereInput | PostWhereInput[]
    id?: IntFilter<"Post"> | number
    title?: StringFilter<"Post"> | string
    content?: StringNullableFilter<"Post"> | string | null
    authorId?: IntFilter<"Post"> | number
    images?: StringNullableListFilter<"Post">
    author?: XOR<UsersScalarRelationFilter, UsersWhereInput>
  }

  export type PostOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrderInput | SortOrder
    authorId?: SortOrder
    images?: SortOrder
    author?: UsersOrderByWithRelationInput
  }

  export type PostWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PostWhereInput | PostWhereInput[]
    OR?: PostWhereInput[]
    NOT?: PostWhereInput | PostWhereInput[]
    title?: StringFilter<"Post"> | string
    content?: StringNullableFilter<"Post"> | string | null
    authorId?: IntFilter<"Post"> | number
    images?: StringNullableListFilter<"Post">
    author?: XOR<UsersScalarRelationFilter, UsersWhereInput>
  }, "id">

  export type PostOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrderInput | SortOrder
    authorId?: SortOrder
    images?: SortOrder
    _count?: PostCountOrderByAggregateInput
    _avg?: PostAvgOrderByAggregateInput
    _max?: PostMaxOrderByAggregateInput
    _min?: PostMinOrderByAggregateInput
    _sum?: PostSumOrderByAggregateInput
  }

  export type PostScalarWhereWithAggregatesInput = {
    AND?: PostScalarWhereWithAggregatesInput | PostScalarWhereWithAggregatesInput[]
    OR?: PostScalarWhereWithAggregatesInput[]
    NOT?: PostScalarWhereWithAggregatesInput | PostScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Post"> | number
    title?: StringWithAggregatesFilter<"Post"> | string
    content?: StringNullableWithAggregatesFilter<"Post"> | string | null
    authorId?: IntWithAggregatesFilter<"Post"> | number
    images?: StringNullableListFilter<"Post">
  }

  export type RegistroMujerVulnerableWhereInput = {
    AND?: RegistroMujerVulnerableWhereInput | RegistroMujerVulnerableWhereInput[]
    OR?: RegistroMujerVulnerableWhereInput[]
    NOT?: RegistroMujerVulnerableWhereInput | RegistroMujerVulnerableWhereInput[]
    id?: IntFilter<"RegistroMujerVulnerable"> | number
    nombreCompleto?: StringFilter<"RegistroMujerVulnerable"> | string
    tipoDocumento?: EnumTipoDocumentoFilter<"RegistroMujerVulnerable"> | $Enums.TipoDocumento
    numeroDocumento?: StringFilter<"RegistroMujerVulnerable"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroMujerVulnerable"> | Date | string
    comuna?: StringFilter<"RegistroMujerVulnerable"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroMujerVulnerable"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroMujerVulnerable"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroMujerVulnerable"> | $Enums.GrupoEtnico
    telefonoContacto?: StringFilter<"RegistroMujerVulnerable"> | string
    correoElectronico?: StringNullableFilter<"RegistroMujerVulnerable"> | string | null
    direccion?: StringFilter<"RegistroMujerVulnerable"> | string
    esMadreCabeza?: BoolFilter<"RegistroMujerVulnerable"> | boolean
    numeroHijos?: IntFilter<"RegistroMujerVulnerable"> | number
    conviveConOtrasPersonas?: BoolFilter<"RegistroMujerVulnerable"> | boolean
    conQuienesConvive?: StringNullableFilter<"RegistroMujerVulnerable"> | string | null
    nivelEducativo?: EnumNivelEducativoFilter<"RegistroMujerVulnerable"> | $Enums.NivelEducativo
    tieneEmpleo?: BoolFilter<"RegistroMujerVulnerable"> | boolean
    actividadLaboral?: StringNullableFilter<"RegistroMujerVulnerable"> | string | null
    fuenteIngresos?: StringNullableFilter<"RegistroMujerVulnerable"> | string | null
    areasApoyo?: EnumAreaApoyoNullableListFilter<"RegistroMujerVulnerable">
    otrasAreas?: StringNullableFilter<"RegistroMujerVulnerable"> | string | null
    tieneApoyoGubernamental?: BoolFilter<"RegistroMujerVulnerable"> | boolean
    tipoApoyoGubernamental?: StringNullableFilter<"RegistroMujerVulnerable"> | string | null
    motivacion?: StringFilter<"RegistroMujerVulnerable"> | string
    tiempoSemanalDisponible?: StringFilter<"RegistroMujerVulnerable"> | string
    expectativas?: StringFilter<"RegistroMujerVulnerable"> | string
    aceptaTerminos?: BoolFilter<"RegistroMujerVulnerable"> | boolean
    createdAt?: DateTimeFilter<"RegistroMujerVulnerable"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroMujerVulnerable"> | Date | string
  }

  export type RegistroMujerVulnerableOrderByWithRelationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    esMadreCabeza?: SortOrder
    numeroHijos?: SortOrder
    conviveConOtrasPersonas?: SortOrder
    conQuienesConvive?: SortOrderInput | SortOrder
    nivelEducativo?: SortOrder
    tieneEmpleo?: SortOrder
    actividadLaboral?: SortOrderInput | SortOrder
    fuenteIngresos?: SortOrderInput | SortOrder
    areasApoyo?: SortOrder
    otrasAreas?: SortOrderInput | SortOrder
    tieneApoyoGubernamental?: SortOrder
    tipoApoyoGubernamental?: SortOrderInput | SortOrder
    motivacion?: SortOrder
    tiempoSemanalDisponible?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroMujerVulnerableWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    numeroDocumento?: string
    AND?: RegistroMujerVulnerableWhereInput | RegistroMujerVulnerableWhereInput[]
    OR?: RegistroMujerVulnerableWhereInput[]
    NOT?: RegistroMujerVulnerableWhereInput | RegistroMujerVulnerableWhereInput[]
    nombreCompleto?: StringFilter<"RegistroMujerVulnerable"> | string
    tipoDocumento?: EnumTipoDocumentoFilter<"RegistroMujerVulnerable"> | $Enums.TipoDocumento
    fechaNacimiento?: DateTimeFilter<"RegistroMujerVulnerable"> | Date | string
    comuna?: StringFilter<"RegistroMujerVulnerable"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroMujerVulnerable"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroMujerVulnerable"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroMujerVulnerable"> | $Enums.GrupoEtnico
    telefonoContacto?: StringFilter<"RegistroMujerVulnerable"> | string
    correoElectronico?: StringNullableFilter<"RegistroMujerVulnerable"> | string | null
    direccion?: StringFilter<"RegistroMujerVulnerable"> | string
    esMadreCabeza?: BoolFilter<"RegistroMujerVulnerable"> | boolean
    numeroHijos?: IntFilter<"RegistroMujerVulnerable"> | number
    conviveConOtrasPersonas?: BoolFilter<"RegistroMujerVulnerable"> | boolean
    conQuienesConvive?: StringNullableFilter<"RegistroMujerVulnerable"> | string | null
    nivelEducativo?: EnumNivelEducativoFilter<"RegistroMujerVulnerable"> | $Enums.NivelEducativo
    tieneEmpleo?: BoolFilter<"RegistroMujerVulnerable"> | boolean
    actividadLaboral?: StringNullableFilter<"RegistroMujerVulnerable"> | string | null
    fuenteIngresos?: StringNullableFilter<"RegistroMujerVulnerable"> | string | null
    areasApoyo?: EnumAreaApoyoNullableListFilter<"RegistroMujerVulnerable">
    otrasAreas?: StringNullableFilter<"RegistroMujerVulnerable"> | string | null
    tieneApoyoGubernamental?: BoolFilter<"RegistroMujerVulnerable"> | boolean
    tipoApoyoGubernamental?: StringNullableFilter<"RegistroMujerVulnerable"> | string | null
    motivacion?: StringFilter<"RegistroMujerVulnerable"> | string
    tiempoSemanalDisponible?: StringFilter<"RegistroMujerVulnerable"> | string
    expectativas?: StringFilter<"RegistroMujerVulnerable"> | string
    aceptaTerminos?: BoolFilter<"RegistroMujerVulnerable"> | boolean
    createdAt?: DateTimeFilter<"RegistroMujerVulnerable"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroMujerVulnerable"> | Date | string
  }, "id" | "numeroDocumento">

  export type RegistroMujerVulnerableOrderByWithAggregationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    esMadreCabeza?: SortOrder
    numeroHijos?: SortOrder
    conviveConOtrasPersonas?: SortOrder
    conQuienesConvive?: SortOrderInput | SortOrder
    nivelEducativo?: SortOrder
    tieneEmpleo?: SortOrder
    actividadLaboral?: SortOrderInput | SortOrder
    fuenteIngresos?: SortOrderInput | SortOrder
    areasApoyo?: SortOrder
    otrasAreas?: SortOrderInput | SortOrder
    tieneApoyoGubernamental?: SortOrder
    tipoApoyoGubernamental?: SortOrderInput | SortOrder
    motivacion?: SortOrder
    tiempoSemanalDisponible?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RegistroMujerVulnerableCountOrderByAggregateInput
    _avg?: RegistroMujerVulnerableAvgOrderByAggregateInput
    _max?: RegistroMujerVulnerableMaxOrderByAggregateInput
    _min?: RegistroMujerVulnerableMinOrderByAggregateInput
    _sum?: RegistroMujerVulnerableSumOrderByAggregateInput
  }

  export type RegistroMujerVulnerableScalarWhereWithAggregatesInput = {
    AND?: RegistroMujerVulnerableScalarWhereWithAggregatesInput | RegistroMujerVulnerableScalarWhereWithAggregatesInput[]
    OR?: RegistroMujerVulnerableScalarWhereWithAggregatesInput[]
    NOT?: RegistroMujerVulnerableScalarWhereWithAggregatesInput | RegistroMujerVulnerableScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroMujerVulnerable"> | number
    nombreCompleto?: StringWithAggregatesFilter<"RegistroMujerVulnerable"> | string
    tipoDocumento?: EnumTipoDocumentoWithAggregatesFilter<"RegistroMujerVulnerable"> | $Enums.TipoDocumento
    numeroDocumento?: StringWithAggregatesFilter<"RegistroMujerVulnerable"> | string
    fechaNacimiento?: DateTimeWithAggregatesFilter<"RegistroMujerVulnerable"> | Date | string
    comuna?: StringWithAggregatesFilter<"RegistroMujerVulnerable"> | string
    estratoSocial?: EnumEstratoSocialWithAggregatesFilter<"RegistroMujerVulnerable"> | $Enums.EstratoSocial
    edad?: IntWithAggregatesFilter<"RegistroMujerVulnerable"> | number
    grupoEtnico?: EnumGrupoEtnicoWithAggregatesFilter<"RegistroMujerVulnerable"> | $Enums.GrupoEtnico
    telefonoContacto?: StringWithAggregatesFilter<"RegistroMujerVulnerable"> | string
    correoElectronico?: StringNullableWithAggregatesFilter<"RegistroMujerVulnerable"> | string | null
    direccion?: StringWithAggregatesFilter<"RegistroMujerVulnerable"> | string
    esMadreCabeza?: BoolWithAggregatesFilter<"RegistroMujerVulnerable"> | boolean
    numeroHijos?: IntWithAggregatesFilter<"RegistroMujerVulnerable"> | number
    conviveConOtrasPersonas?: BoolWithAggregatesFilter<"RegistroMujerVulnerable"> | boolean
    conQuienesConvive?: StringNullableWithAggregatesFilter<"RegistroMujerVulnerable"> | string | null
    nivelEducativo?: EnumNivelEducativoWithAggregatesFilter<"RegistroMujerVulnerable"> | $Enums.NivelEducativo
    tieneEmpleo?: BoolWithAggregatesFilter<"RegistroMujerVulnerable"> | boolean
    actividadLaboral?: StringNullableWithAggregatesFilter<"RegistroMujerVulnerable"> | string | null
    fuenteIngresos?: StringNullableWithAggregatesFilter<"RegistroMujerVulnerable"> | string | null
    areasApoyo?: EnumAreaApoyoNullableListFilter<"RegistroMujerVulnerable">
    otrasAreas?: StringNullableWithAggregatesFilter<"RegistroMujerVulnerable"> | string | null
    tieneApoyoGubernamental?: BoolWithAggregatesFilter<"RegistroMujerVulnerable"> | boolean
    tipoApoyoGubernamental?: StringNullableWithAggregatesFilter<"RegistroMujerVulnerable"> | string | null
    motivacion?: StringWithAggregatesFilter<"RegistroMujerVulnerable"> | string
    tiempoSemanalDisponible?: StringWithAggregatesFilter<"RegistroMujerVulnerable"> | string
    expectativas?: StringWithAggregatesFilter<"RegistroMujerVulnerable"> | string
    aceptaTerminos?: BoolWithAggregatesFilter<"RegistroMujerVulnerable"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"RegistroMujerVulnerable"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RegistroMujerVulnerable"> | Date | string
  }

  export type RegistroSemilleroInnovacionWhereInput = {
    AND?: RegistroSemilleroInnovacionWhereInput | RegistroSemilleroInnovacionWhereInput[]
    OR?: RegistroSemilleroInnovacionWhereInput[]
    NOT?: RegistroSemilleroInnovacionWhereInput | RegistroSemilleroInnovacionWhereInput[]
    id?: IntFilter<"RegistroSemilleroInnovacion"> | number
    nombreCompleto?: StringFilter<"RegistroSemilleroInnovacion"> | string
    tipoDocumento?: EnumTipoDocumentoFilter<"RegistroSemilleroInnovacion"> | $Enums.TipoDocumento
    numeroDocumento?: StringFilter<"RegistroSemilleroInnovacion"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroSemilleroInnovacion"> | Date | string
    comuna?: StringFilter<"RegistroSemilleroInnovacion"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroSemilleroInnovacion"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroSemilleroInnovacion"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroSemilleroInnovacion"> | $Enums.GrupoEtnico
    telefonoContacto?: StringFilter<"RegistroSemilleroInnovacion"> | string
    correoElectronico?: StringNullableFilter<"RegistroSemilleroInnovacion"> | string | null
    direccion?: StringFilter<"RegistroSemilleroInnovacion"> | string
    tipoVinculacion?: EnumTipoVinculacionFilter<"RegistroSemilleroInnovacion"> | $Enums.TipoVinculacion
    nombreEntidadVinculacion?: StringFilter<"RegistroSemilleroInnovacion"> | string
    nivelEducativo?: EnumNivelEducativoFilter<"RegistroSemilleroInnovacion"> | $Enums.NivelEducativo
    participacionPrevia?: BoolFilter<"RegistroSemilleroInnovacion"> | boolean
    areasInteres?: StringNullableListFilter<"RegistroSemilleroInnovacion">
    otrasAreas?: StringNullableFilter<"RegistroSemilleroInnovacion"> | string | null
    tieneProyecto?: BoolFilter<"RegistroSemilleroInnovacion"> | boolean
    descripcionProyecto?: StringNullableFilter<"RegistroSemilleroInnovacion"> | string | null
    habilidades?: StringFilter<"RegistroSemilleroInnovacion"> | string
    disponibilidad?: StringFilter<"RegistroSemilleroInnovacion"> | string
    motivacion?: StringFilter<"RegistroSemilleroInnovacion"> | string
    expectativas?: StringFilter<"RegistroSemilleroInnovacion"> | string
    aceptaTerminos?: BoolFilter<"RegistroSemilleroInnovacion"> | boolean
    createdAt?: DateTimeFilter<"RegistroSemilleroInnovacion"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroSemilleroInnovacion"> | Date | string
  }

  export type RegistroSemilleroInnovacionOrderByWithRelationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    tipoVinculacion?: SortOrder
    nombreEntidadVinculacion?: SortOrder
    nivelEducativo?: SortOrder
    participacionPrevia?: SortOrder
    areasInteres?: SortOrder
    otrasAreas?: SortOrderInput | SortOrder
    tieneProyecto?: SortOrder
    descripcionProyecto?: SortOrderInput | SortOrder
    habilidades?: SortOrder
    disponibilidad?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroSemilleroInnovacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    numeroDocumento?: string
    AND?: RegistroSemilleroInnovacionWhereInput | RegistroSemilleroInnovacionWhereInput[]
    OR?: RegistroSemilleroInnovacionWhereInput[]
    NOT?: RegistroSemilleroInnovacionWhereInput | RegistroSemilleroInnovacionWhereInput[]
    nombreCompleto?: StringFilter<"RegistroSemilleroInnovacion"> | string
    tipoDocumento?: EnumTipoDocumentoFilter<"RegistroSemilleroInnovacion"> | $Enums.TipoDocumento
    fechaNacimiento?: DateTimeFilter<"RegistroSemilleroInnovacion"> | Date | string
    comuna?: StringFilter<"RegistroSemilleroInnovacion"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroSemilleroInnovacion"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroSemilleroInnovacion"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroSemilleroInnovacion"> | $Enums.GrupoEtnico
    telefonoContacto?: StringFilter<"RegistroSemilleroInnovacion"> | string
    correoElectronico?: StringNullableFilter<"RegistroSemilleroInnovacion"> | string | null
    direccion?: StringFilter<"RegistroSemilleroInnovacion"> | string
    tipoVinculacion?: EnumTipoVinculacionFilter<"RegistroSemilleroInnovacion"> | $Enums.TipoVinculacion
    nombreEntidadVinculacion?: StringFilter<"RegistroSemilleroInnovacion"> | string
    nivelEducativo?: EnumNivelEducativoFilter<"RegistroSemilleroInnovacion"> | $Enums.NivelEducativo
    participacionPrevia?: BoolFilter<"RegistroSemilleroInnovacion"> | boolean
    areasInteres?: StringNullableListFilter<"RegistroSemilleroInnovacion">
    otrasAreas?: StringNullableFilter<"RegistroSemilleroInnovacion"> | string | null
    tieneProyecto?: BoolFilter<"RegistroSemilleroInnovacion"> | boolean
    descripcionProyecto?: StringNullableFilter<"RegistroSemilleroInnovacion"> | string | null
    habilidades?: StringFilter<"RegistroSemilleroInnovacion"> | string
    disponibilidad?: StringFilter<"RegistroSemilleroInnovacion"> | string
    motivacion?: StringFilter<"RegistroSemilleroInnovacion"> | string
    expectativas?: StringFilter<"RegistroSemilleroInnovacion"> | string
    aceptaTerminos?: BoolFilter<"RegistroSemilleroInnovacion"> | boolean
    createdAt?: DateTimeFilter<"RegistroSemilleroInnovacion"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroSemilleroInnovacion"> | Date | string
  }, "id" | "numeroDocumento">

  export type RegistroSemilleroInnovacionOrderByWithAggregationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    tipoVinculacion?: SortOrder
    nombreEntidadVinculacion?: SortOrder
    nivelEducativo?: SortOrder
    participacionPrevia?: SortOrder
    areasInteres?: SortOrder
    otrasAreas?: SortOrderInput | SortOrder
    tieneProyecto?: SortOrder
    descripcionProyecto?: SortOrderInput | SortOrder
    habilidades?: SortOrder
    disponibilidad?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RegistroSemilleroInnovacionCountOrderByAggregateInput
    _avg?: RegistroSemilleroInnovacionAvgOrderByAggregateInput
    _max?: RegistroSemilleroInnovacionMaxOrderByAggregateInput
    _min?: RegistroSemilleroInnovacionMinOrderByAggregateInput
    _sum?: RegistroSemilleroInnovacionSumOrderByAggregateInput
  }

  export type RegistroSemilleroInnovacionScalarWhereWithAggregatesInput = {
    AND?: RegistroSemilleroInnovacionScalarWhereWithAggregatesInput | RegistroSemilleroInnovacionScalarWhereWithAggregatesInput[]
    OR?: RegistroSemilleroInnovacionScalarWhereWithAggregatesInput[]
    NOT?: RegistroSemilleroInnovacionScalarWhereWithAggregatesInput | RegistroSemilleroInnovacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroSemilleroInnovacion"> | number
    nombreCompleto?: StringWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string
    tipoDocumento?: EnumTipoDocumentoWithAggregatesFilter<"RegistroSemilleroInnovacion"> | $Enums.TipoDocumento
    numeroDocumento?: StringWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string
    fechaNacimiento?: DateTimeWithAggregatesFilter<"RegistroSemilleroInnovacion"> | Date | string
    comuna?: StringWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string
    estratoSocial?: EnumEstratoSocialWithAggregatesFilter<"RegistroSemilleroInnovacion"> | $Enums.EstratoSocial
    edad?: IntWithAggregatesFilter<"RegistroSemilleroInnovacion"> | number
    grupoEtnico?: EnumGrupoEtnicoWithAggregatesFilter<"RegistroSemilleroInnovacion"> | $Enums.GrupoEtnico
    telefonoContacto?: StringWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string
    correoElectronico?: StringNullableWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string | null
    direccion?: StringWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string
    tipoVinculacion?: EnumTipoVinculacionWithAggregatesFilter<"RegistroSemilleroInnovacion"> | $Enums.TipoVinculacion
    nombreEntidadVinculacion?: StringWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string
    nivelEducativo?: EnumNivelEducativoWithAggregatesFilter<"RegistroSemilleroInnovacion"> | $Enums.NivelEducativo
    participacionPrevia?: BoolWithAggregatesFilter<"RegistroSemilleroInnovacion"> | boolean
    areasInteres?: StringNullableListFilter<"RegistroSemilleroInnovacion">
    otrasAreas?: StringNullableWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string | null
    tieneProyecto?: BoolWithAggregatesFilter<"RegistroSemilleroInnovacion"> | boolean
    descripcionProyecto?: StringNullableWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string | null
    habilidades?: StringWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string
    disponibilidad?: StringWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string
    motivacion?: StringWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string
    expectativas?: StringWithAggregatesFilter<"RegistroSemilleroInnovacion"> | string
    aceptaTerminos?: BoolWithAggregatesFilter<"RegistroSemilleroInnovacion"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"RegistroSemilleroInnovacion"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RegistroSemilleroInnovacion"> | Date | string
  }

  export type RegistroTallerSteamWhereInput = {
    AND?: RegistroTallerSteamWhereInput | RegistroTallerSteamWhereInput[]
    OR?: RegistroTallerSteamWhereInput[]
    NOT?: RegistroTallerSteamWhereInput | RegistroTallerSteamWhereInput[]
    id?: IntFilter<"RegistroTallerSteam"> | number
    nombreCompleto?: StringFilter<"RegistroTallerSteam"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroTallerSteam"> | Date | string
    comuna?: StringFilter<"RegistroTallerSteam"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroTallerSteam"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroTallerSteam"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroTallerSteam"> | $Enums.GrupoEtnico
    institucionEducativa?: StringFilter<"RegistroTallerSteam"> | string
    cursoGrado?: StringFilter<"RegistroTallerSteam"> | string
    direccion?: StringFilter<"RegistroTallerSteam"> | string
    nombreAcudiente?: StringFilter<"RegistroTallerSteam"> | string
    relacionNino?: StringFilter<"RegistroTallerSteam"> | string
    telefonoContacto?: StringFilter<"RegistroTallerSteam"> | string
    correoElectronico?: StringNullableFilter<"RegistroTallerSteam"> | string | null
    participacionPrevia?: BoolFilter<"RegistroTallerSteam"> | boolean
    actividadesInteres?: StringNullableListFilter<"RegistroTallerSteam">
    otrasActividades?: StringNullableFilter<"RegistroTallerSteam"> | string | null
    disponibilidad?: StringFilter<"RegistroTallerSteam"> | string
    accesoComputadora?: BoolFilter<"RegistroTallerSteam"> | boolean
    accesoInternet?: BoolFilter<"RegistroTallerSteam"> | boolean
    motivacion?: StringFilter<"RegistroTallerSteam"> | string
    expectativa?: StringFilter<"RegistroTallerSteam"> | string
    aceptaTerminos?: BoolFilter<"RegistroTallerSteam"> | boolean
    createdAt?: DateTimeFilter<"RegistroTallerSteam"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroTallerSteam"> | Date | string
  }

  export type RegistroTallerSteamOrderByWithRelationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    institucionEducativa?: SortOrder
    cursoGrado?: SortOrder
    direccion?: SortOrder
    nombreAcudiente?: SortOrder
    relacionNino?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    participacionPrevia?: SortOrder
    actividadesInteres?: SortOrder
    otrasActividades?: SortOrderInput | SortOrder
    disponibilidad?: SortOrder
    accesoComputadora?: SortOrder
    accesoInternet?: SortOrder
    motivacion?: SortOrder
    expectativa?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroTallerSteamWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RegistroTallerSteamWhereInput | RegistroTallerSteamWhereInput[]
    OR?: RegistroTallerSteamWhereInput[]
    NOT?: RegistroTallerSteamWhereInput | RegistroTallerSteamWhereInput[]
    nombreCompleto?: StringFilter<"RegistroTallerSteam"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroTallerSteam"> | Date | string
    comuna?: StringFilter<"RegistroTallerSteam"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroTallerSteam"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroTallerSteam"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroTallerSteam"> | $Enums.GrupoEtnico
    institucionEducativa?: StringFilter<"RegistroTallerSteam"> | string
    cursoGrado?: StringFilter<"RegistroTallerSteam"> | string
    direccion?: StringFilter<"RegistroTallerSteam"> | string
    nombreAcudiente?: StringFilter<"RegistroTallerSteam"> | string
    relacionNino?: StringFilter<"RegistroTallerSteam"> | string
    telefonoContacto?: StringFilter<"RegistroTallerSteam"> | string
    correoElectronico?: StringNullableFilter<"RegistroTallerSteam"> | string | null
    participacionPrevia?: BoolFilter<"RegistroTallerSteam"> | boolean
    actividadesInteres?: StringNullableListFilter<"RegistroTallerSteam">
    otrasActividades?: StringNullableFilter<"RegistroTallerSteam"> | string | null
    disponibilidad?: StringFilter<"RegistroTallerSteam"> | string
    accesoComputadora?: BoolFilter<"RegistroTallerSteam"> | boolean
    accesoInternet?: BoolFilter<"RegistroTallerSteam"> | boolean
    motivacion?: StringFilter<"RegistroTallerSteam"> | string
    expectativa?: StringFilter<"RegistroTallerSteam"> | string
    aceptaTerminos?: BoolFilter<"RegistroTallerSteam"> | boolean
    createdAt?: DateTimeFilter<"RegistroTallerSteam"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroTallerSteam"> | Date | string
  }, "id">

  export type RegistroTallerSteamOrderByWithAggregationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    institucionEducativa?: SortOrder
    cursoGrado?: SortOrder
    direccion?: SortOrder
    nombreAcudiente?: SortOrder
    relacionNino?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    participacionPrevia?: SortOrder
    actividadesInteres?: SortOrder
    otrasActividades?: SortOrderInput | SortOrder
    disponibilidad?: SortOrder
    accesoComputadora?: SortOrder
    accesoInternet?: SortOrder
    motivacion?: SortOrder
    expectativa?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RegistroTallerSteamCountOrderByAggregateInput
    _avg?: RegistroTallerSteamAvgOrderByAggregateInput
    _max?: RegistroTallerSteamMaxOrderByAggregateInput
    _min?: RegistroTallerSteamMinOrderByAggregateInput
    _sum?: RegistroTallerSteamSumOrderByAggregateInput
  }

  export type RegistroTallerSteamScalarWhereWithAggregatesInput = {
    AND?: RegistroTallerSteamScalarWhereWithAggregatesInput | RegistroTallerSteamScalarWhereWithAggregatesInput[]
    OR?: RegistroTallerSteamScalarWhereWithAggregatesInput[]
    NOT?: RegistroTallerSteamScalarWhereWithAggregatesInput | RegistroTallerSteamScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroTallerSteam"> | number
    nombreCompleto?: StringWithAggregatesFilter<"RegistroTallerSteam"> | string
    fechaNacimiento?: DateTimeWithAggregatesFilter<"RegistroTallerSteam"> | Date | string
    comuna?: StringWithAggregatesFilter<"RegistroTallerSteam"> | string
    estratoSocial?: EnumEstratoSocialWithAggregatesFilter<"RegistroTallerSteam"> | $Enums.EstratoSocial
    edad?: IntWithAggregatesFilter<"RegistroTallerSteam"> | number
    grupoEtnico?: EnumGrupoEtnicoWithAggregatesFilter<"RegistroTallerSteam"> | $Enums.GrupoEtnico
    institucionEducativa?: StringWithAggregatesFilter<"RegistroTallerSteam"> | string
    cursoGrado?: StringWithAggregatesFilter<"RegistroTallerSteam"> | string
    direccion?: StringWithAggregatesFilter<"RegistroTallerSteam"> | string
    nombreAcudiente?: StringWithAggregatesFilter<"RegistroTallerSteam"> | string
    relacionNino?: StringWithAggregatesFilter<"RegistroTallerSteam"> | string
    telefonoContacto?: StringWithAggregatesFilter<"RegistroTallerSteam"> | string
    correoElectronico?: StringNullableWithAggregatesFilter<"RegistroTallerSteam"> | string | null
    participacionPrevia?: BoolWithAggregatesFilter<"RegistroTallerSteam"> | boolean
    actividadesInteres?: StringNullableListFilter<"RegistroTallerSteam">
    otrasActividades?: StringNullableWithAggregatesFilter<"RegistroTallerSteam"> | string | null
    disponibilidad?: StringWithAggregatesFilter<"RegistroTallerSteam"> | string
    accesoComputadora?: BoolWithAggregatesFilter<"RegistroTallerSteam"> | boolean
    accesoInternet?: BoolWithAggregatesFilter<"RegistroTallerSteam"> | boolean
    motivacion?: StringWithAggregatesFilter<"RegistroTallerSteam"> | string
    expectativa?: StringWithAggregatesFilter<"RegistroTallerSteam"> | string
    aceptaTerminos?: BoolWithAggregatesFilter<"RegistroTallerSteam"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"RegistroTallerSteam"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RegistroTallerSteam"> | Date | string
  }

  export type RegistroSeguridadAlimentariaWhereInput = {
    AND?: RegistroSeguridadAlimentariaWhereInput | RegistroSeguridadAlimentariaWhereInput[]
    OR?: RegistroSeguridadAlimentariaWhereInput[]
    NOT?: RegistroSeguridadAlimentariaWhereInput | RegistroSeguridadAlimentariaWhereInput[]
    id?: IntFilter<"RegistroSeguridadAlimentaria"> | number
    nombreResponsable?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    tipoDocumento?: EnumTipoDocumentoFilter<"RegistroSeguridadAlimentaria"> | $Enums.TipoDocumento
    numeroDocumento?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroSeguridadAlimentaria"> | Date | string
    telefono?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    correoElectronico?: StringNullableFilter<"RegistroSeguridadAlimentaria"> | string | null
    direccion?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    barrio?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    comuna?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroSeguridadAlimentaria"> | $Enums.EstratoSocial
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroSeguridadAlimentaria"> | $Enums.GrupoEtnico
    esAgricultor?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    tieneTierras?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    hectareas?: FloatNullableFilter<"RegistroSeguridadAlimentaria"> | number | null
    pisoTermico?: StringNullableFilter<"RegistroSeguridadAlimentaria"> | string | null
    tieneCultivo?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    tiposCultivo?: StringNullableFilter<"RegistroSeguridadAlimentaria"> | string | null
    participacionPrevia?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    proyectosAnteriores?: StringNullableFilter<"RegistroSeguridadAlimentaria"> | string | null
    tieneRiego?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    tieneHerramientas?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    tiposHerramientas?: StringNullableFilter<"RegistroSeguridadAlimentaria"> | string | null
    tieneAsistenciaTecnica?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    motivacion?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    tiempoSemanal?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    expectativas?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    aceptaTerminos?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    createdAt?: DateTimeFilter<"RegistroSeguridadAlimentaria"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroSeguridadAlimentaria"> | Date | string
  }

  export type RegistroSeguridadAlimentariaOrderByWithRelationInput = {
    id?: SortOrder
    nombreResponsable?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefono?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    barrio?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    grupoEtnico?: SortOrder
    esAgricultor?: SortOrder
    tieneTierras?: SortOrder
    hectareas?: SortOrderInput | SortOrder
    pisoTermico?: SortOrderInput | SortOrder
    tieneCultivo?: SortOrder
    tiposCultivo?: SortOrderInput | SortOrder
    participacionPrevia?: SortOrder
    proyectosAnteriores?: SortOrderInput | SortOrder
    tieneRiego?: SortOrder
    tieneHerramientas?: SortOrder
    tiposHerramientas?: SortOrderInput | SortOrder
    tieneAsistenciaTecnica?: SortOrder
    motivacion?: SortOrder
    tiempoSemanal?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroSeguridadAlimentariaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RegistroSeguridadAlimentariaWhereInput | RegistroSeguridadAlimentariaWhereInput[]
    OR?: RegistroSeguridadAlimentariaWhereInput[]
    NOT?: RegistroSeguridadAlimentariaWhereInput | RegistroSeguridadAlimentariaWhereInput[]
    nombreResponsable?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    tipoDocumento?: EnumTipoDocumentoFilter<"RegistroSeguridadAlimentaria"> | $Enums.TipoDocumento
    numeroDocumento?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroSeguridadAlimentaria"> | Date | string
    telefono?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    correoElectronico?: StringNullableFilter<"RegistroSeguridadAlimentaria"> | string | null
    direccion?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    barrio?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    comuna?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroSeguridadAlimentaria"> | $Enums.EstratoSocial
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroSeguridadAlimentaria"> | $Enums.GrupoEtnico
    esAgricultor?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    tieneTierras?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    hectareas?: FloatNullableFilter<"RegistroSeguridadAlimentaria"> | number | null
    pisoTermico?: StringNullableFilter<"RegistroSeguridadAlimentaria"> | string | null
    tieneCultivo?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    tiposCultivo?: StringNullableFilter<"RegistroSeguridadAlimentaria"> | string | null
    participacionPrevia?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    proyectosAnteriores?: StringNullableFilter<"RegistroSeguridadAlimentaria"> | string | null
    tieneRiego?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    tieneHerramientas?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    tiposHerramientas?: StringNullableFilter<"RegistroSeguridadAlimentaria"> | string | null
    tieneAsistenciaTecnica?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    motivacion?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    tiempoSemanal?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    expectativas?: StringFilter<"RegistroSeguridadAlimentaria"> | string
    aceptaTerminos?: BoolFilter<"RegistroSeguridadAlimentaria"> | boolean
    createdAt?: DateTimeFilter<"RegistroSeguridadAlimentaria"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroSeguridadAlimentaria"> | Date | string
  }, "id">

  export type RegistroSeguridadAlimentariaOrderByWithAggregationInput = {
    id?: SortOrder
    nombreResponsable?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefono?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    barrio?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    grupoEtnico?: SortOrder
    esAgricultor?: SortOrder
    tieneTierras?: SortOrder
    hectareas?: SortOrderInput | SortOrder
    pisoTermico?: SortOrderInput | SortOrder
    tieneCultivo?: SortOrder
    tiposCultivo?: SortOrderInput | SortOrder
    participacionPrevia?: SortOrder
    proyectosAnteriores?: SortOrderInput | SortOrder
    tieneRiego?: SortOrder
    tieneHerramientas?: SortOrder
    tiposHerramientas?: SortOrderInput | SortOrder
    tieneAsistenciaTecnica?: SortOrder
    motivacion?: SortOrder
    tiempoSemanal?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RegistroSeguridadAlimentariaCountOrderByAggregateInput
    _avg?: RegistroSeguridadAlimentariaAvgOrderByAggregateInput
    _max?: RegistroSeguridadAlimentariaMaxOrderByAggregateInput
    _min?: RegistroSeguridadAlimentariaMinOrderByAggregateInput
    _sum?: RegistroSeguridadAlimentariaSumOrderByAggregateInput
  }

  export type RegistroSeguridadAlimentariaScalarWhereWithAggregatesInput = {
    AND?: RegistroSeguridadAlimentariaScalarWhereWithAggregatesInput | RegistroSeguridadAlimentariaScalarWhereWithAggregatesInput[]
    OR?: RegistroSeguridadAlimentariaScalarWhereWithAggregatesInput[]
    NOT?: RegistroSeguridadAlimentariaScalarWhereWithAggregatesInput | RegistroSeguridadAlimentariaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | number
    nombreResponsable?: StringWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string
    tipoDocumento?: EnumTipoDocumentoWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | $Enums.TipoDocumento
    numeroDocumento?: StringWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string
    fechaNacimiento?: DateTimeWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | Date | string
    telefono?: StringWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string
    correoElectronico?: StringNullableWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string | null
    direccion?: StringWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string
    barrio?: StringWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string
    comuna?: StringWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string
    estratoSocial?: EnumEstratoSocialWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | $Enums.EstratoSocial
    grupoEtnico?: EnumGrupoEtnicoWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | $Enums.GrupoEtnico
    esAgricultor?: BoolWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | boolean
    tieneTierras?: BoolWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | boolean
    hectareas?: FloatNullableWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | number | null
    pisoTermico?: StringNullableWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string | null
    tieneCultivo?: BoolWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | boolean
    tiposCultivo?: StringNullableWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string | null
    participacionPrevia?: BoolWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | boolean
    proyectosAnteriores?: StringNullableWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string | null
    tieneRiego?: BoolWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | boolean
    tieneHerramientas?: BoolWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | boolean
    tiposHerramientas?: StringNullableWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string | null
    tieneAsistenciaTecnica?: BoolWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | boolean
    motivacion?: StringWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string
    tiempoSemanal?: StringWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string
    expectativas?: StringWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | string
    aceptaTerminos?: BoolWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RegistroSeguridadAlimentaria"> | Date | string
  }

  export type RegistroRefuerzoEscolarWhereInput = {
    AND?: RegistroRefuerzoEscolarWhereInput | RegistroRefuerzoEscolarWhereInput[]
    OR?: RegistroRefuerzoEscolarWhereInput[]
    NOT?: RegistroRefuerzoEscolarWhereInput | RegistroRefuerzoEscolarWhereInput[]
    id?: IntFilter<"RegistroRefuerzoEscolar"> | number
    nombreCompleto?: StringFilter<"RegistroRefuerzoEscolar"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroRefuerzoEscolar"> | Date | string
    comuna?: StringFilter<"RegistroRefuerzoEscolar"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroRefuerzoEscolar"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroRefuerzoEscolar"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroRefuerzoEscolar"> | $Enums.GrupoEtnico
    institucionEducativa?: StringFilter<"RegistroRefuerzoEscolar"> | string
    cursoGrado?: StringFilter<"RegistroRefuerzoEscolar"> | string
    direccion?: StringFilter<"RegistroRefuerzoEscolar"> | string
    nombreAcudiente?: StringFilter<"RegistroRefuerzoEscolar"> | string
    relacionNino?: StringFilter<"RegistroRefuerzoEscolar"> | string
    telefonoContacto?: StringFilter<"RegistroRefuerzoEscolar"> | string
    correoElectronico?: StringNullableFilter<"RegistroRefuerzoEscolar"> | string | null
    areasAyuda?: StringNullableListFilter<"RegistroRefuerzoEscolar">
    otrasAreas?: StringNullableFilter<"RegistroRefuerzoEscolar"> | string | null
    refuerzoPrevio?: BoolFilter<"RegistroRefuerzoEscolar"> | boolean
    dificultadesAcademicas?: StringFilter<"RegistroRefuerzoEscolar"> | string
    disponibilidad?: StringFilter<"RegistroRefuerzoEscolar"> | string
    accesoMateriales?: BoolFilter<"RegistroRefuerzoEscolar"> | boolean
    apoyoHabitos?: BoolFilter<"RegistroRefuerzoEscolar"> | boolean
    motivacion?: StringFilter<"RegistroRefuerzoEscolar"> | string
    expectativas?: StringFilter<"RegistroRefuerzoEscolar"> | string
    aceptaTerminos?: BoolFilter<"RegistroRefuerzoEscolar"> | boolean
    createdAt?: DateTimeFilter<"RegistroRefuerzoEscolar"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroRefuerzoEscolar"> | Date | string
  }

  export type RegistroRefuerzoEscolarOrderByWithRelationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    institucionEducativa?: SortOrder
    cursoGrado?: SortOrder
    direccion?: SortOrder
    nombreAcudiente?: SortOrder
    relacionNino?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    areasAyuda?: SortOrder
    otrasAreas?: SortOrderInput | SortOrder
    refuerzoPrevio?: SortOrder
    dificultadesAcademicas?: SortOrder
    disponibilidad?: SortOrder
    accesoMateriales?: SortOrder
    apoyoHabitos?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroRefuerzoEscolarWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RegistroRefuerzoEscolarWhereInput | RegistroRefuerzoEscolarWhereInput[]
    OR?: RegistroRefuerzoEscolarWhereInput[]
    NOT?: RegistroRefuerzoEscolarWhereInput | RegistroRefuerzoEscolarWhereInput[]
    nombreCompleto?: StringFilter<"RegistroRefuerzoEscolar"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroRefuerzoEscolar"> | Date | string
    comuna?: StringFilter<"RegistroRefuerzoEscolar"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroRefuerzoEscolar"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroRefuerzoEscolar"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroRefuerzoEscolar"> | $Enums.GrupoEtnico
    institucionEducativa?: StringFilter<"RegistroRefuerzoEscolar"> | string
    cursoGrado?: StringFilter<"RegistroRefuerzoEscolar"> | string
    direccion?: StringFilter<"RegistroRefuerzoEscolar"> | string
    nombreAcudiente?: StringFilter<"RegistroRefuerzoEscolar"> | string
    relacionNino?: StringFilter<"RegistroRefuerzoEscolar"> | string
    telefonoContacto?: StringFilter<"RegistroRefuerzoEscolar"> | string
    correoElectronico?: StringNullableFilter<"RegistroRefuerzoEscolar"> | string | null
    areasAyuda?: StringNullableListFilter<"RegistroRefuerzoEscolar">
    otrasAreas?: StringNullableFilter<"RegistroRefuerzoEscolar"> | string | null
    refuerzoPrevio?: BoolFilter<"RegistroRefuerzoEscolar"> | boolean
    dificultadesAcademicas?: StringFilter<"RegistroRefuerzoEscolar"> | string
    disponibilidad?: StringFilter<"RegistroRefuerzoEscolar"> | string
    accesoMateriales?: BoolFilter<"RegistroRefuerzoEscolar"> | boolean
    apoyoHabitos?: BoolFilter<"RegistroRefuerzoEscolar"> | boolean
    motivacion?: StringFilter<"RegistroRefuerzoEscolar"> | string
    expectativas?: StringFilter<"RegistroRefuerzoEscolar"> | string
    aceptaTerminos?: BoolFilter<"RegistroRefuerzoEscolar"> | boolean
    createdAt?: DateTimeFilter<"RegistroRefuerzoEscolar"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroRefuerzoEscolar"> | Date | string
  }, "id">

  export type RegistroRefuerzoEscolarOrderByWithAggregationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    institucionEducativa?: SortOrder
    cursoGrado?: SortOrder
    direccion?: SortOrder
    nombreAcudiente?: SortOrder
    relacionNino?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    areasAyuda?: SortOrder
    otrasAreas?: SortOrderInput | SortOrder
    refuerzoPrevio?: SortOrder
    dificultadesAcademicas?: SortOrder
    disponibilidad?: SortOrder
    accesoMateriales?: SortOrder
    apoyoHabitos?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RegistroRefuerzoEscolarCountOrderByAggregateInput
    _avg?: RegistroRefuerzoEscolarAvgOrderByAggregateInput
    _max?: RegistroRefuerzoEscolarMaxOrderByAggregateInput
    _min?: RegistroRefuerzoEscolarMinOrderByAggregateInput
    _sum?: RegistroRefuerzoEscolarSumOrderByAggregateInput
  }

  export type RegistroRefuerzoEscolarScalarWhereWithAggregatesInput = {
    AND?: RegistroRefuerzoEscolarScalarWhereWithAggregatesInput | RegistroRefuerzoEscolarScalarWhereWithAggregatesInput[]
    OR?: RegistroRefuerzoEscolarScalarWhereWithAggregatesInput[]
    NOT?: RegistroRefuerzoEscolarScalarWhereWithAggregatesInput | RegistroRefuerzoEscolarScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroRefuerzoEscolar"> | number
    nombreCompleto?: StringWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string
    fechaNacimiento?: DateTimeWithAggregatesFilter<"RegistroRefuerzoEscolar"> | Date | string
    comuna?: StringWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string
    estratoSocial?: EnumEstratoSocialWithAggregatesFilter<"RegistroRefuerzoEscolar"> | $Enums.EstratoSocial
    edad?: IntWithAggregatesFilter<"RegistroRefuerzoEscolar"> | number
    grupoEtnico?: EnumGrupoEtnicoWithAggregatesFilter<"RegistroRefuerzoEscolar"> | $Enums.GrupoEtnico
    institucionEducativa?: StringWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string
    cursoGrado?: StringWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string
    direccion?: StringWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string
    nombreAcudiente?: StringWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string
    relacionNino?: StringWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string
    telefonoContacto?: StringWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string
    correoElectronico?: StringNullableWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string | null
    areasAyuda?: StringNullableListFilter<"RegistroRefuerzoEscolar">
    otrasAreas?: StringNullableWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string | null
    refuerzoPrevio?: BoolWithAggregatesFilter<"RegistroRefuerzoEscolar"> | boolean
    dificultadesAcademicas?: StringWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string
    disponibilidad?: StringWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string
    accesoMateriales?: BoolWithAggregatesFilter<"RegistroRefuerzoEscolar"> | boolean
    apoyoHabitos?: BoolWithAggregatesFilter<"RegistroRefuerzoEscolar"> | boolean
    motivacion?: StringWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string
    expectativas?: StringWithAggregatesFilter<"RegistroRefuerzoEscolar"> | string
    aceptaTerminos?: BoolWithAggregatesFilter<"RegistroRefuerzoEscolar"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"RegistroRefuerzoEscolar"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RegistroRefuerzoEscolar"> | Date | string
  }

  export type RegistroSoftwareFactoryWhereInput = {
    AND?: RegistroSoftwareFactoryWhereInput | RegistroSoftwareFactoryWhereInput[]
    OR?: RegistroSoftwareFactoryWhereInput[]
    NOT?: RegistroSoftwareFactoryWhereInput | RegistroSoftwareFactoryWhereInput[]
    id?: IntFilter<"RegistroSoftwareFactory"> | number
    nombreCompleto?: StringFilter<"RegistroSoftwareFactory"> | string
    tipoDocumento?: EnumTipoDocumentoFilter<"RegistroSoftwareFactory"> | $Enums.TipoDocumento
    numeroDocumento?: StringFilter<"RegistroSoftwareFactory"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroSoftwareFactory"> | Date | string
    telefonoContacto?: StringFilter<"RegistroSoftwareFactory"> | string
    correoElectronico?: StringNullableFilter<"RegistroSoftwareFactory"> | string | null
    direccion?: StringFilter<"RegistroSoftwareFactory"> | string
    comuna?: StringFilter<"RegistroSoftwareFactory"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroSoftwareFactory"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroSoftwareFactory"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroSoftwareFactory"> | $Enums.GrupoEtnico
    modalidadVinculacion?: StringFilter<"RegistroSoftwareFactory"> | string
    institucionEducativa?: StringFilter<"RegistroSoftwareFactory"> | string
    programaAcademico?: StringFilter<"RegistroSoftwareFactory"> | string
    semestreNivel?: StringFilter<"RegistroSoftwareFactory"> | string
    tiempoDisponible?: StringFilter<"RegistroSoftwareFactory"> | string
    tecnologias?: StringNullableListFilter<"RegistroSoftwareFactory">
    proyectosRealizados?: StringNullableFilter<"RegistroSoftwareFactory"> | string | null
    areasInteres?: StringNullableListFilter<"RegistroSoftwareFactory">
    otrasAreas?: StringNullableFilter<"RegistroSoftwareFactory"> | string | null
    experienciaAgile?: StringNullableFilter<"RegistroSoftwareFactory"> | string | null
    motivacion?: StringFilter<"RegistroSoftwareFactory"> | string
    aceptaTerminos?: BoolFilter<"RegistroSoftwareFactory"> | boolean
    createdAt?: DateTimeFilter<"RegistroSoftwareFactory"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroSoftwareFactory"> | Date | string
  }

  export type RegistroSoftwareFactoryOrderByWithRelationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    modalidadVinculacion?: SortOrder
    institucionEducativa?: SortOrder
    programaAcademico?: SortOrder
    semestreNivel?: SortOrder
    tiempoDisponible?: SortOrder
    tecnologias?: SortOrder
    proyectosRealizados?: SortOrderInput | SortOrder
    areasInteres?: SortOrder
    otrasAreas?: SortOrderInput | SortOrder
    experienciaAgile?: SortOrderInput | SortOrder
    motivacion?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroSoftwareFactoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    numeroDocumento?: string
    AND?: RegistroSoftwareFactoryWhereInput | RegistroSoftwareFactoryWhereInput[]
    OR?: RegistroSoftwareFactoryWhereInput[]
    NOT?: RegistroSoftwareFactoryWhereInput | RegistroSoftwareFactoryWhereInput[]
    nombreCompleto?: StringFilter<"RegistroSoftwareFactory"> | string
    tipoDocumento?: EnumTipoDocumentoFilter<"RegistroSoftwareFactory"> | $Enums.TipoDocumento
    fechaNacimiento?: DateTimeFilter<"RegistroSoftwareFactory"> | Date | string
    telefonoContacto?: StringFilter<"RegistroSoftwareFactory"> | string
    correoElectronico?: StringNullableFilter<"RegistroSoftwareFactory"> | string | null
    direccion?: StringFilter<"RegistroSoftwareFactory"> | string
    comuna?: StringFilter<"RegistroSoftwareFactory"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroSoftwareFactory"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroSoftwareFactory"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroSoftwareFactory"> | $Enums.GrupoEtnico
    modalidadVinculacion?: StringFilter<"RegistroSoftwareFactory"> | string
    institucionEducativa?: StringFilter<"RegistroSoftwareFactory"> | string
    programaAcademico?: StringFilter<"RegistroSoftwareFactory"> | string
    semestreNivel?: StringFilter<"RegistroSoftwareFactory"> | string
    tiempoDisponible?: StringFilter<"RegistroSoftwareFactory"> | string
    tecnologias?: StringNullableListFilter<"RegistroSoftwareFactory">
    proyectosRealizados?: StringNullableFilter<"RegistroSoftwareFactory"> | string | null
    areasInteres?: StringNullableListFilter<"RegistroSoftwareFactory">
    otrasAreas?: StringNullableFilter<"RegistroSoftwareFactory"> | string | null
    experienciaAgile?: StringNullableFilter<"RegistroSoftwareFactory"> | string | null
    motivacion?: StringFilter<"RegistroSoftwareFactory"> | string
    aceptaTerminos?: BoolFilter<"RegistroSoftwareFactory"> | boolean
    createdAt?: DateTimeFilter<"RegistroSoftwareFactory"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroSoftwareFactory"> | Date | string
  }, "id" | "numeroDocumento">

  export type RegistroSoftwareFactoryOrderByWithAggregationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    modalidadVinculacion?: SortOrder
    institucionEducativa?: SortOrder
    programaAcademico?: SortOrder
    semestreNivel?: SortOrder
    tiempoDisponible?: SortOrder
    tecnologias?: SortOrder
    proyectosRealizados?: SortOrderInput | SortOrder
    areasInteres?: SortOrder
    otrasAreas?: SortOrderInput | SortOrder
    experienciaAgile?: SortOrderInput | SortOrder
    motivacion?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RegistroSoftwareFactoryCountOrderByAggregateInput
    _avg?: RegistroSoftwareFactoryAvgOrderByAggregateInput
    _max?: RegistroSoftwareFactoryMaxOrderByAggregateInput
    _min?: RegistroSoftwareFactoryMinOrderByAggregateInput
    _sum?: RegistroSoftwareFactorySumOrderByAggregateInput
  }

  export type RegistroSoftwareFactoryScalarWhereWithAggregatesInput = {
    AND?: RegistroSoftwareFactoryScalarWhereWithAggregatesInput | RegistroSoftwareFactoryScalarWhereWithAggregatesInput[]
    OR?: RegistroSoftwareFactoryScalarWhereWithAggregatesInput[]
    NOT?: RegistroSoftwareFactoryScalarWhereWithAggregatesInput | RegistroSoftwareFactoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroSoftwareFactory"> | number
    nombreCompleto?: StringWithAggregatesFilter<"RegistroSoftwareFactory"> | string
    tipoDocumento?: EnumTipoDocumentoWithAggregatesFilter<"RegistroSoftwareFactory"> | $Enums.TipoDocumento
    numeroDocumento?: StringWithAggregatesFilter<"RegistroSoftwareFactory"> | string
    fechaNacimiento?: DateTimeWithAggregatesFilter<"RegistroSoftwareFactory"> | Date | string
    telefonoContacto?: StringWithAggregatesFilter<"RegistroSoftwareFactory"> | string
    correoElectronico?: StringNullableWithAggregatesFilter<"RegistroSoftwareFactory"> | string | null
    direccion?: StringWithAggregatesFilter<"RegistroSoftwareFactory"> | string
    comuna?: StringWithAggregatesFilter<"RegistroSoftwareFactory"> | string
    estratoSocial?: EnumEstratoSocialWithAggregatesFilter<"RegistroSoftwareFactory"> | $Enums.EstratoSocial
    edad?: IntWithAggregatesFilter<"RegistroSoftwareFactory"> | number
    grupoEtnico?: EnumGrupoEtnicoWithAggregatesFilter<"RegistroSoftwareFactory"> | $Enums.GrupoEtnico
    modalidadVinculacion?: StringWithAggregatesFilter<"RegistroSoftwareFactory"> | string
    institucionEducativa?: StringWithAggregatesFilter<"RegistroSoftwareFactory"> | string
    programaAcademico?: StringWithAggregatesFilter<"RegistroSoftwareFactory"> | string
    semestreNivel?: StringWithAggregatesFilter<"RegistroSoftwareFactory"> | string
    tiempoDisponible?: StringWithAggregatesFilter<"RegistroSoftwareFactory"> | string
    tecnologias?: StringNullableListFilter<"RegistroSoftwareFactory">
    proyectosRealizados?: StringNullableWithAggregatesFilter<"RegistroSoftwareFactory"> | string | null
    areasInteres?: StringNullableListFilter<"RegistroSoftwareFactory">
    otrasAreas?: StringNullableWithAggregatesFilter<"RegistroSoftwareFactory"> | string | null
    experienciaAgile?: StringNullableWithAggregatesFilter<"RegistroSoftwareFactory"> | string | null
    motivacion?: StringWithAggregatesFilter<"RegistroSoftwareFactory"> | string
    aceptaTerminos?: BoolWithAggregatesFilter<"RegistroSoftwareFactory"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"RegistroSoftwareFactory"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RegistroSoftwareFactory"> | Date | string
  }

  export type RegistroVoluntariadoWhereInput = {
    AND?: RegistroVoluntariadoWhereInput | RegistroVoluntariadoWhereInput[]
    OR?: RegistroVoluntariadoWhereInput[]
    NOT?: RegistroVoluntariadoWhereInput | RegistroVoluntariadoWhereInput[]
    id?: IntFilter<"RegistroVoluntariado"> | number
    nombreCompleto?: StringFilter<"RegistroVoluntariado"> | string
    tipoDocumento?: EnumTipoDocumentoFilter<"RegistroVoluntariado"> | $Enums.TipoDocumento
    numeroDocumento?: StringFilter<"RegistroVoluntariado"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroVoluntariado"> | Date | string
    telefonoContacto?: StringFilter<"RegistroVoluntariado"> | string
    correoElectronico?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    direccion?: StringFilter<"RegistroVoluntariado"> | string
    comuna?: StringFilter<"RegistroVoluntariado"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroVoluntariado"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroVoluntariado"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroVoluntariado"> | $Enums.GrupoEtnico
    nivelEducativo?: EnumNivelEducativoFilter<"RegistroVoluntariado"> | $Enums.NivelEducativo
    profesionOcupacion?: StringFilter<"RegistroVoluntariado"> | string
    disponibilidadTipo?: EnumTipoDisponibilidadFilter<"RegistroVoluntariado"> | $Enums.TipoDisponibilidad
    diasEspecificos?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    horasDisponibles?: IntFilter<"RegistroVoluntariado"> | number
    areasInteres?: StringNullableListFilter<"RegistroVoluntariado">
    otrasAreas?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    habilidades?: StringFilter<"RegistroVoluntariado"> | string
    fundacion?: StringFilter<"RegistroVoluntariado"> | string
    funcion?: StringFilter<"RegistroVoluntariado"> | string
    tiempo?: StringFilter<"RegistroVoluntariado"> | string
    motivacion?: StringFilter<"RegistroVoluntariado"> | string
    referencia1Nombre?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    referencia1Telefono?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    referencia2Nombre?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    referencia2Telefono?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    aceptaTerminos?: BoolFilter<"RegistroVoluntariado"> | boolean
    createdAt?: DateTimeFilter<"RegistroVoluntariado"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroVoluntariado"> | Date | string
  }

  export type RegistroVoluntariadoOrderByWithRelationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    nivelEducativo?: SortOrder
    profesionOcupacion?: SortOrder
    disponibilidadTipo?: SortOrder
    diasEspecificos?: SortOrderInput | SortOrder
    horasDisponibles?: SortOrder
    areasInteres?: SortOrder
    otrasAreas?: SortOrderInput | SortOrder
    habilidades?: SortOrder
    fundacion?: SortOrder
    funcion?: SortOrder
    tiempo?: SortOrder
    motivacion?: SortOrder
    referencia1Nombre?: SortOrderInput | SortOrder
    referencia1Telefono?: SortOrderInput | SortOrder
    referencia2Nombre?: SortOrderInput | SortOrder
    referencia2Telefono?: SortOrderInput | SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroVoluntariadoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    numeroDocumento?: string
    AND?: RegistroVoluntariadoWhereInput | RegistroVoluntariadoWhereInput[]
    OR?: RegistroVoluntariadoWhereInput[]
    NOT?: RegistroVoluntariadoWhereInput | RegistroVoluntariadoWhereInput[]
    nombreCompleto?: StringFilter<"RegistroVoluntariado"> | string
    tipoDocumento?: EnumTipoDocumentoFilter<"RegistroVoluntariado"> | $Enums.TipoDocumento
    fechaNacimiento?: DateTimeFilter<"RegistroVoluntariado"> | Date | string
    telefonoContacto?: StringFilter<"RegistroVoluntariado"> | string
    correoElectronico?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    direccion?: StringFilter<"RegistroVoluntariado"> | string
    comuna?: StringFilter<"RegistroVoluntariado"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroVoluntariado"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroVoluntariado"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroVoluntariado"> | $Enums.GrupoEtnico
    nivelEducativo?: EnumNivelEducativoFilter<"RegistroVoluntariado"> | $Enums.NivelEducativo
    profesionOcupacion?: StringFilter<"RegistroVoluntariado"> | string
    disponibilidadTipo?: EnumTipoDisponibilidadFilter<"RegistroVoluntariado"> | $Enums.TipoDisponibilidad
    diasEspecificos?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    horasDisponibles?: IntFilter<"RegistroVoluntariado"> | number
    areasInteres?: StringNullableListFilter<"RegistroVoluntariado">
    otrasAreas?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    habilidades?: StringFilter<"RegistroVoluntariado"> | string
    fundacion?: StringFilter<"RegistroVoluntariado"> | string
    funcion?: StringFilter<"RegistroVoluntariado"> | string
    tiempo?: StringFilter<"RegistroVoluntariado"> | string
    motivacion?: StringFilter<"RegistroVoluntariado"> | string
    referencia1Nombre?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    referencia1Telefono?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    referencia2Nombre?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    referencia2Telefono?: StringNullableFilter<"RegistroVoluntariado"> | string | null
    aceptaTerminos?: BoolFilter<"RegistroVoluntariado"> | boolean
    createdAt?: DateTimeFilter<"RegistroVoluntariado"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroVoluntariado"> | Date | string
  }, "id" | "numeroDocumento">

  export type RegistroVoluntariadoOrderByWithAggregationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    nivelEducativo?: SortOrder
    profesionOcupacion?: SortOrder
    disponibilidadTipo?: SortOrder
    diasEspecificos?: SortOrderInput | SortOrder
    horasDisponibles?: SortOrder
    areasInteres?: SortOrder
    otrasAreas?: SortOrderInput | SortOrder
    habilidades?: SortOrder
    fundacion?: SortOrder
    funcion?: SortOrder
    tiempo?: SortOrder
    motivacion?: SortOrder
    referencia1Nombre?: SortOrderInput | SortOrder
    referencia1Telefono?: SortOrderInput | SortOrder
    referencia2Nombre?: SortOrderInput | SortOrder
    referencia2Telefono?: SortOrderInput | SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RegistroVoluntariadoCountOrderByAggregateInput
    _avg?: RegistroVoluntariadoAvgOrderByAggregateInput
    _max?: RegistroVoluntariadoMaxOrderByAggregateInput
    _min?: RegistroVoluntariadoMinOrderByAggregateInput
    _sum?: RegistroVoluntariadoSumOrderByAggregateInput
  }

  export type RegistroVoluntariadoScalarWhereWithAggregatesInput = {
    AND?: RegistroVoluntariadoScalarWhereWithAggregatesInput | RegistroVoluntariadoScalarWhereWithAggregatesInput[]
    OR?: RegistroVoluntariadoScalarWhereWithAggregatesInput[]
    NOT?: RegistroVoluntariadoScalarWhereWithAggregatesInput | RegistroVoluntariadoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroVoluntariado"> | number
    nombreCompleto?: StringWithAggregatesFilter<"RegistroVoluntariado"> | string
    tipoDocumento?: EnumTipoDocumentoWithAggregatesFilter<"RegistroVoluntariado"> | $Enums.TipoDocumento
    numeroDocumento?: StringWithAggregatesFilter<"RegistroVoluntariado"> | string
    fechaNacimiento?: DateTimeWithAggregatesFilter<"RegistroVoluntariado"> | Date | string
    telefonoContacto?: StringWithAggregatesFilter<"RegistroVoluntariado"> | string
    correoElectronico?: StringNullableWithAggregatesFilter<"RegistroVoluntariado"> | string | null
    direccion?: StringWithAggregatesFilter<"RegistroVoluntariado"> | string
    comuna?: StringWithAggregatesFilter<"RegistroVoluntariado"> | string
    estratoSocial?: EnumEstratoSocialWithAggregatesFilter<"RegistroVoluntariado"> | $Enums.EstratoSocial
    edad?: IntWithAggregatesFilter<"RegistroVoluntariado"> | number
    grupoEtnico?: EnumGrupoEtnicoWithAggregatesFilter<"RegistroVoluntariado"> | $Enums.GrupoEtnico
    nivelEducativo?: EnumNivelEducativoWithAggregatesFilter<"RegistroVoluntariado"> | $Enums.NivelEducativo
    profesionOcupacion?: StringWithAggregatesFilter<"RegistroVoluntariado"> | string
    disponibilidadTipo?: EnumTipoDisponibilidadWithAggregatesFilter<"RegistroVoluntariado"> | $Enums.TipoDisponibilidad
    diasEspecificos?: StringNullableWithAggregatesFilter<"RegistroVoluntariado"> | string | null
    horasDisponibles?: IntWithAggregatesFilter<"RegistroVoluntariado"> | number
    areasInteres?: StringNullableListFilter<"RegistroVoluntariado">
    otrasAreas?: StringNullableWithAggregatesFilter<"RegistroVoluntariado"> | string | null
    habilidades?: StringWithAggregatesFilter<"RegistroVoluntariado"> | string
    fundacion?: StringWithAggregatesFilter<"RegistroVoluntariado"> | string
    funcion?: StringWithAggregatesFilter<"RegistroVoluntariado"> | string
    tiempo?: StringWithAggregatesFilter<"RegistroVoluntariado"> | string
    motivacion?: StringWithAggregatesFilter<"RegistroVoluntariado"> | string
    referencia1Nombre?: StringNullableWithAggregatesFilter<"RegistroVoluntariado"> | string | null
    referencia1Telefono?: StringNullableWithAggregatesFilter<"RegistroVoluntariado"> | string | null
    referencia2Nombre?: StringNullableWithAggregatesFilter<"RegistroVoluntariado"> | string | null
    referencia2Telefono?: StringNullableWithAggregatesFilter<"RegistroVoluntariado"> | string | null
    aceptaTerminos?: BoolWithAggregatesFilter<"RegistroVoluntariado"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"RegistroVoluntariado"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RegistroVoluntariado"> | Date | string
  }

  export type RegistroCulturalWhereInput = {
    AND?: RegistroCulturalWhereInput | RegistroCulturalWhereInput[]
    OR?: RegistroCulturalWhereInput[]
    NOT?: RegistroCulturalWhereInput | RegistroCulturalWhereInput[]
    id?: IntFilter<"RegistroCultural"> | number
    nombreCompleto?: StringFilter<"RegistroCultural"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroCultural"> | Date | string
    comuna?: StringFilter<"RegistroCultural"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroCultural"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroCultural"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroCultural"> | $Enums.GrupoEtnico
    telefonoContacto?: StringFilter<"RegistroCultural"> | string
    correoElectronico?: StringNullableFilter<"RegistroCultural"> | string | null
    direccion?: StringFilter<"RegistroCultural"> | string
    documentoIdentidad?: StringFilter<"RegistroCultural"> | string
    municipioDepartamento?: StringFilter<"RegistroCultural"> | string
    nivelEducativo?: EnumNivelEducativoFilter<"RegistroCultural"> | $Enums.NivelEducativo
    ocupacion?: StringFilter<"RegistroCultural"> | string
    areaInteresPrincipal?: EnumAreaInteresCulturalFilter<"RegistroCultural"> | $Enums.AreaInteresCultural
    otraAreaInteres?: StringNullableFilter<"RegistroCultural"> | string | null
    formacionPrevia?: BoolFilter<"RegistroCultural"> | boolean
    detalleFormacion?: StringNullableFilter<"RegistroCultural"> | string | null
    perteneceGrupo?: BoolFilter<"RegistroCultural"> | boolean
    detalleGrupo?: StringNullableFilter<"RegistroCultural"> | string | null
    diasDisponibles?: StringFilter<"RegistroCultural"> | string
    motivacion?: StringFilter<"RegistroCultural"> | string
    expectativas?: StringFilter<"RegistroCultural"> | string
    aceptaTerminos?: BoolFilter<"RegistroCultural"> | boolean
    createdAt?: DateTimeFilter<"RegistroCultural"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroCultural"> | Date | string
  }

  export type RegistroCulturalOrderByWithRelationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    documentoIdentidad?: SortOrder
    municipioDepartamento?: SortOrder
    nivelEducativo?: SortOrder
    ocupacion?: SortOrder
    areaInteresPrincipal?: SortOrder
    otraAreaInteres?: SortOrderInput | SortOrder
    formacionPrevia?: SortOrder
    detalleFormacion?: SortOrderInput | SortOrder
    perteneceGrupo?: SortOrder
    detalleGrupo?: SortOrderInput | SortOrder
    diasDisponibles?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroCulturalWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    documentoIdentidad?: string
    AND?: RegistroCulturalWhereInput | RegistroCulturalWhereInput[]
    OR?: RegistroCulturalWhereInput[]
    NOT?: RegistroCulturalWhereInput | RegistroCulturalWhereInput[]
    nombreCompleto?: StringFilter<"RegistroCultural"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroCultural"> | Date | string
    comuna?: StringFilter<"RegistroCultural"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroCultural"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroCultural"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroCultural"> | $Enums.GrupoEtnico
    telefonoContacto?: StringFilter<"RegistroCultural"> | string
    correoElectronico?: StringNullableFilter<"RegistroCultural"> | string | null
    direccion?: StringFilter<"RegistroCultural"> | string
    municipioDepartamento?: StringFilter<"RegistroCultural"> | string
    nivelEducativo?: EnumNivelEducativoFilter<"RegistroCultural"> | $Enums.NivelEducativo
    ocupacion?: StringFilter<"RegistroCultural"> | string
    areaInteresPrincipal?: EnumAreaInteresCulturalFilter<"RegistroCultural"> | $Enums.AreaInteresCultural
    otraAreaInteres?: StringNullableFilter<"RegistroCultural"> | string | null
    formacionPrevia?: BoolFilter<"RegistroCultural"> | boolean
    detalleFormacion?: StringNullableFilter<"RegistroCultural"> | string | null
    perteneceGrupo?: BoolFilter<"RegistroCultural"> | boolean
    detalleGrupo?: StringNullableFilter<"RegistroCultural"> | string | null
    diasDisponibles?: StringFilter<"RegistroCultural"> | string
    motivacion?: StringFilter<"RegistroCultural"> | string
    expectativas?: StringFilter<"RegistroCultural"> | string
    aceptaTerminos?: BoolFilter<"RegistroCultural"> | boolean
    createdAt?: DateTimeFilter<"RegistroCultural"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroCultural"> | Date | string
  }, "id" | "documentoIdentidad">

  export type RegistroCulturalOrderByWithAggregationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    documentoIdentidad?: SortOrder
    municipioDepartamento?: SortOrder
    nivelEducativo?: SortOrder
    ocupacion?: SortOrder
    areaInteresPrincipal?: SortOrder
    otraAreaInteres?: SortOrderInput | SortOrder
    formacionPrevia?: SortOrder
    detalleFormacion?: SortOrderInput | SortOrder
    perteneceGrupo?: SortOrder
    detalleGrupo?: SortOrderInput | SortOrder
    diasDisponibles?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RegistroCulturalCountOrderByAggregateInput
    _avg?: RegistroCulturalAvgOrderByAggregateInput
    _max?: RegistroCulturalMaxOrderByAggregateInput
    _min?: RegistroCulturalMinOrderByAggregateInput
    _sum?: RegistroCulturalSumOrderByAggregateInput
  }

  export type RegistroCulturalScalarWhereWithAggregatesInput = {
    AND?: RegistroCulturalScalarWhereWithAggregatesInput | RegistroCulturalScalarWhereWithAggregatesInput[]
    OR?: RegistroCulturalScalarWhereWithAggregatesInput[]
    NOT?: RegistroCulturalScalarWhereWithAggregatesInput | RegistroCulturalScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroCultural"> | number
    nombreCompleto?: StringWithAggregatesFilter<"RegistroCultural"> | string
    fechaNacimiento?: DateTimeWithAggregatesFilter<"RegistroCultural"> | Date | string
    comuna?: StringWithAggregatesFilter<"RegistroCultural"> | string
    estratoSocial?: EnumEstratoSocialWithAggregatesFilter<"RegistroCultural"> | $Enums.EstratoSocial
    edad?: IntWithAggregatesFilter<"RegistroCultural"> | number
    grupoEtnico?: EnumGrupoEtnicoWithAggregatesFilter<"RegistroCultural"> | $Enums.GrupoEtnico
    telefonoContacto?: StringWithAggregatesFilter<"RegistroCultural"> | string
    correoElectronico?: StringNullableWithAggregatesFilter<"RegistroCultural"> | string | null
    direccion?: StringWithAggregatesFilter<"RegistroCultural"> | string
    documentoIdentidad?: StringWithAggregatesFilter<"RegistroCultural"> | string
    municipioDepartamento?: StringWithAggregatesFilter<"RegistroCultural"> | string
    nivelEducativo?: EnumNivelEducativoWithAggregatesFilter<"RegistroCultural"> | $Enums.NivelEducativo
    ocupacion?: StringWithAggregatesFilter<"RegistroCultural"> | string
    areaInteresPrincipal?: EnumAreaInteresCulturalWithAggregatesFilter<"RegistroCultural"> | $Enums.AreaInteresCultural
    otraAreaInteres?: StringNullableWithAggregatesFilter<"RegistroCultural"> | string | null
    formacionPrevia?: BoolWithAggregatesFilter<"RegistroCultural"> | boolean
    detalleFormacion?: StringNullableWithAggregatesFilter<"RegistroCultural"> | string | null
    perteneceGrupo?: BoolWithAggregatesFilter<"RegistroCultural"> | boolean
    detalleGrupo?: StringNullableWithAggregatesFilter<"RegistroCultural"> | string | null
    diasDisponibles?: StringWithAggregatesFilter<"RegistroCultural"> | string
    motivacion?: StringWithAggregatesFilter<"RegistroCultural"> | string
    expectativas?: StringWithAggregatesFilter<"RegistroCultural"> | string
    aceptaTerminos?: BoolWithAggregatesFilter<"RegistroCultural"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"RegistroCultural"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RegistroCultural"> | Date | string
  }

  export type RegistroEconomiaPlateadaWhereInput = {
    AND?: RegistroEconomiaPlateadaWhereInput | RegistroEconomiaPlateadaWhereInput[]
    OR?: RegistroEconomiaPlateadaWhereInput[]
    NOT?: RegistroEconomiaPlateadaWhereInput | RegistroEconomiaPlateadaWhereInput[]
    id?: IntFilter<"RegistroEconomiaPlateada"> | number
    nombreCompleto?: StringFilter<"RegistroEconomiaPlateada"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroEconomiaPlateada"> | Date | string
    comuna?: StringFilter<"RegistroEconomiaPlateada"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroEconomiaPlateada"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroEconomiaPlateada"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroEconomiaPlateada"> | $Enums.GrupoEtnico
    telefonoContacto?: StringFilter<"RegistroEconomiaPlateada"> | string
    correoElectronico?: StringNullableFilter<"RegistroEconomiaPlateada"> | string | null
    direccion?: StringFilter<"RegistroEconomiaPlateada"> | string
    tipoDocumento?: EnumTipoDocumentoFilter<"RegistroEconomiaPlateada"> | $Enums.TipoDocumento
    numeroDocumento?: StringFilter<"RegistroEconomiaPlateada"> | string
    genero?: EnumGeneroFilter<"RegistroEconomiaPlateada"> | $Enums.Genero
    esPensionado?: BoolFilter<"RegistroEconomiaPlateada"> | boolean
    actividadEconomica?: StringNullableFilter<"RegistroEconomiaPlateada"> | string | null
    trabajoAnterior?: BoolFilter<"RegistroEconomiaPlateada"> | boolean
    sectorTrabajo?: StringNullableFilter<"RegistroEconomiaPlateada"> | string | null
    ingresosAdicionales?: BoolFilter<"RegistroEconomiaPlateada"> | boolean
    fuenteIngresos?: StringNullableFilter<"RegistroEconomiaPlateada"> | string | null
    areasInteres?: StringNullableListFilter<"RegistroEconomiaPlateada">
    otrasAreas?: StringNullableFilter<"RegistroEconomiaPlateada"> | string | null
    habilidades?: StringFilter<"RegistroEconomiaPlateada"> | string
    tiempoSemanal?: StringFilter<"RegistroEconomiaPlateada"> | string
    motivacion?: StringFilter<"RegistroEconomiaPlateada"> | string
    expectativas?: StringFilter<"RegistroEconomiaPlateada"> | string
    aceptaTerminos?: BoolFilter<"RegistroEconomiaPlateada"> | boolean
    createdAt?: DateTimeFilter<"RegistroEconomiaPlateada"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroEconomiaPlateada"> | Date | string
  }

  export type RegistroEconomiaPlateadaOrderByWithRelationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    genero?: SortOrder
    esPensionado?: SortOrder
    actividadEconomica?: SortOrderInput | SortOrder
    trabajoAnterior?: SortOrder
    sectorTrabajo?: SortOrderInput | SortOrder
    ingresosAdicionales?: SortOrder
    fuenteIngresos?: SortOrderInput | SortOrder
    areasInteres?: SortOrder
    otrasAreas?: SortOrderInput | SortOrder
    habilidades?: SortOrder
    tiempoSemanal?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroEconomiaPlateadaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    numeroDocumento?: string
    AND?: RegistroEconomiaPlateadaWhereInput | RegistroEconomiaPlateadaWhereInput[]
    OR?: RegistroEconomiaPlateadaWhereInput[]
    NOT?: RegistroEconomiaPlateadaWhereInput | RegistroEconomiaPlateadaWhereInput[]
    nombreCompleto?: StringFilter<"RegistroEconomiaPlateada"> | string
    fechaNacimiento?: DateTimeFilter<"RegistroEconomiaPlateada"> | Date | string
    comuna?: StringFilter<"RegistroEconomiaPlateada"> | string
    estratoSocial?: EnumEstratoSocialFilter<"RegistroEconomiaPlateada"> | $Enums.EstratoSocial
    edad?: IntFilter<"RegistroEconomiaPlateada"> | number
    grupoEtnico?: EnumGrupoEtnicoFilter<"RegistroEconomiaPlateada"> | $Enums.GrupoEtnico
    telefonoContacto?: StringFilter<"RegistroEconomiaPlateada"> | string
    correoElectronico?: StringNullableFilter<"RegistroEconomiaPlateada"> | string | null
    direccion?: StringFilter<"RegistroEconomiaPlateada"> | string
    tipoDocumento?: EnumTipoDocumentoFilter<"RegistroEconomiaPlateada"> | $Enums.TipoDocumento
    genero?: EnumGeneroFilter<"RegistroEconomiaPlateada"> | $Enums.Genero
    esPensionado?: BoolFilter<"RegistroEconomiaPlateada"> | boolean
    actividadEconomica?: StringNullableFilter<"RegistroEconomiaPlateada"> | string | null
    trabajoAnterior?: BoolFilter<"RegistroEconomiaPlateada"> | boolean
    sectorTrabajo?: StringNullableFilter<"RegistroEconomiaPlateada"> | string | null
    ingresosAdicionales?: BoolFilter<"RegistroEconomiaPlateada"> | boolean
    fuenteIngresos?: StringNullableFilter<"RegistroEconomiaPlateada"> | string | null
    areasInteres?: StringNullableListFilter<"RegistroEconomiaPlateada">
    otrasAreas?: StringNullableFilter<"RegistroEconomiaPlateada"> | string | null
    habilidades?: StringFilter<"RegistroEconomiaPlateada"> | string
    tiempoSemanal?: StringFilter<"RegistroEconomiaPlateada"> | string
    motivacion?: StringFilter<"RegistroEconomiaPlateada"> | string
    expectativas?: StringFilter<"RegistroEconomiaPlateada"> | string
    aceptaTerminos?: BoolFilter<"RegistroEconomiaPlateada"> | boolean
    createdAt?: DateTimeFilter<"RegistroEconomiaPlateada"> | Date | string
    updatedAt?: DateTimeFilter<"RegistroEconomiaPlateada"> | Date | string
  }, "id" | "numeroDocumento">

  export type RegistroEconomiaPlateadaOrderByWithAggregationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrderInput | SortOrder
    direccion?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    genero?: SortOrder
    esPensionado?: SortOrder
    actividadEconomica?: SortOrderInput | SortOrder
    trabajoAnterior?: SortOrder
    sectorTrabajo?: SortOrderInput | SortOrder
    ingresosAdicionales?: SortOrder
    fuenteIngresos?: SortOrderInput | SortOrder
    areasInteres?: SortOrder
    otrasAreas?: SortOrderInput | SortOrder
    habilidades?: SortOrder
    tiempoSemanal?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RegistroEconomiaPlateadaCountOrderByAggregateInput
    _avg?: RegistroEconomiaPlateadaAvgOrderByAggregateInput
    _max?: RegistroEconomiaPlateadaMaxOrderByAggregateInput
    _min?: RegistroEconomiaPlateadaMinOrderByAggregateInput
    _sum?: RegistroEconomiaPlateadaSumOrderByAggregateInput
  }

  export type RegistroEconomiaPlateadaScalarWhereWithAggregatesInput = {
    AND?: RegistroEconomiaPlateadaScalarWhereWithAggregatesInput | RegistroEconomiaPlateadaScalarWhereWithAggregatesInput[]
    OR?: RegistroEconomiaPlateadaScalarWhereWithAggregatesInput[]
    NOT?: RegistroEconomiaPlateadaScalarWhereWithAggregatesInput | RegistroEconomiaPlateadaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroEconomiaPlateada"> | number
    nombreCompleto?: StringWithAggregatesFilter<"RegistroEconomiaPlateada"> | string
    fechaNacimiento?: DateTimeWithAggregatesFilter<"RegistroEconomiaPlateada"> | Date | string
    comuna?: StringWithAggregatesFilter<"RegistroEconomiaPlateada"> | string
    estratoSocial?: EnumEstratoSocialWithAggregatesFilter<"RegistroEconomiaPlateada"> | $Enums.EstratoSocial
    edad?: IntWithAggregatesFilter<"RegistroEconomiaPlateada"> | number
    grupoEtnico?: EnumGrupoEtnicoWithAggregatesFilter<"RegistroEconomiaPlateada"> | $Enums.GrupoEtnico
    telefonoContacto?: StringWithAggregatesFilter<"RegistroEconomiaPlateada"> | string
    correoElectronico?: StringNullableWithAggregatesFilter<"RegistroEconomiaPlateada"> | string | null
    direccion?: StringWithAggregatesFilter<"RegistroEconomiaPlateada"> | string
    tipoDocumento?: EnumTipoDocumentoWithAggregatesFilter<"RegistroEconomiaPlateada"> | $Enums.TipoDocumento
    numeroDocumento?: StringWithAggregatesFilter<"RegistroEconomiaPlateada"> | string
    genero?: EnumGeneroWithAggregatesFilter<"RegistroEconomiaPlateada"> | $Enums.Genero
    esPensionado?: BoolWithAggregatesFilter<"RegistroEconomiaPlateada"> | boolean
    actividadEconomica?: StringNullableWithAggregatesFilter<"RegistroEconomiaPlateada"> | string | null
    trabajoAnterior?: BoolWithAggregatesFilter<"RegistroEconomiaPlateada"> | boolean
    sectorTrabajo?: StringNullableWithAggregatesFilter<"RegistroEconomiaPlateada"> | string | null
    ingresosAdicionales?: BoolWithAggregatesFilter<"RegistroEconomiaPlateada"> | boolean
    fuenteIngresos?: StringNullableWithAggregatesFilter<"RegistroEconomiaPlateada"> | string | null
    areasInteres?: StringNullableListFilter<"RegistroEconomiaPlateada">
    otrasAreas?: StringNullableWithAggregatesFilter<"RegistroEconomiaPlateada"> | string | null
    habilidades?: StringWithAggregatesFilter<"RegistroEconomiaPlateada"> | string
    tiempoSemanal?: StringWithAggregatesFilter<"RegistroEconomiaPlateada"> | string
    motivacion?: StringWithAggregatesFilter<"RegistroEconomiaPlateada"> | string
    expectativas?: StringWithAggregatesFilter<"RegistroEconomiaPlateada"> | string
    aceptaTerminos?: BoolWithAggregatesFilter<"RegistroEconomiaPlateada"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"RegistroEconomiaPlateada"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RegistroEconomiaPlateada"> | Date | string
  }

  export type UsersCreateInput = {
    name: string
    lastName: string
    email: string
    password: string
    posts?: PostCreateNestedManyWithoutAuthorInput
    role: RoleCreateNestedOneWithoutUsersInput
  }

  export type UsersUncheckedCreateInput = {
    id?: number
    name: string
    lastName: string
    email: string
    password: string
    rolId: number
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
  }

  export type UsersUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    posts?: PostUpdateManyWithoutAuthorNestedInput
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
  }

  export type UsersCreateManyInput = {
    id?: number
    name: string
    lastName: string
    email: string
    password: string
    rolId: number
  }

  export type UsersUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type UsersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
  }

  export type RoleCreateInput = {
    name: string
    users?: UsersCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateInput = {
    id?: number
    name: string
    users?: UsersUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    users?: UsersUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    users?: UsersUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateManyInput = {
    id?: number
    name: string
  }

  export type RoleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type PostCreateInput = {
    title: string
    content?: string | null
    images?: PostCreateimagesInput | string[]
    author: UsersCreateNestedOneWithoutPostsInput
  }

  export type PostUncheckedCreateInput = {
    id?: number
    title: string
    content?: string | null
    authorId: number
    images?: PostCreateimagesInput | string[]
  }

  export type PostUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    images?: PostUpdateimagesInput | string[]
    author?: UsersUpdateOneRequiredWithoutPostsNestedInput
  }

  export type PostUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: IntFieldUpdateOperationsInput | number
    images?: PostUpdateimagesInput | string[]
  }

  export type PostCreateManyInput = {
    id?: number
    title: string
    content?: string | null
    authorId: number
    images?: PostCreateimagesInput | string[]
  }

  export type PostUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    images?: PostUpdateimagesInput | string[]
  }

  export type PostUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: IntFieldUpdateOperationsInput | number
    images?: PostUpdateimagesInput | string[]
  }

  export type RegistroMujerVulnerableCreateInput = {
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    esMadreCabeza?: boolean
    numeroHijos?: number
    conviveConOtrasPersonas?: boolean
    conQuienesConvive?: string | null
    nivelEducativo: $Enums.NivelEducativo
    tieneEmpleo?: boolean
    actividadLaboral?: string | null
    fuenteIngresos?: string | null
    areasApoyo?: RegistroMujerVulnerableCreateareasApoyoInput | $Enums.AreaApoyo[]
    otrasAreas?: string | null
    tieneApoyoGubernamental?: boolean
    tipoApoyoGubernamental?: string | null
    motivacion: string
    tiempoSemanalDisponible: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroMujerVulnerableUncheckedCreateInput = {
    id?: number
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    esMadreCabeza?: boolean
    numeroHijos?: number
    conviveConOtrasPersonas?: boolean
    conQuienesConvive?: string | null
    nivelEducativo: $Enums.NivelEducativo
    tieneEmpleo?: boolean
    actividadLaboral?: string | null
    fuenteIngresos?: string | null
    areasApoyo?: RegistroMujerVulnerableCreateareasApoyoInput | $Enums.AreaApoyo[]
    otrasAreas?: string | null
    tieneApoyoGubernamental?: boolean
    tipoApoyoGubernamental?: string | null
    motivacion: string
    tiempoSemanalDisponible: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroMujerVulnerableUpdateInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    esMadreCabeza?: BoolFieldUpdateOperationsInput | boolean
    numeroHijos?: IntFieldUpdateOperationsInput | number
    conviveConOtrasPersonas?: BoolFieldUpdateOperationsInput | boolean
    conQuienesConvive?: NullableStringFieldUpdateOperationsInput | string | null
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    tieneEmpleo?: BoolFieldUpdateOperationsInput | boolean
    actividadLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    fuenteIngresos?: NullableStringFieldUpdateOperationsInput | string | null
    areasApoyo?: RegistroMujerVulnerableUpdateareasApoyoInput | $Enums.AreaApoyo[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    tieneApoyoGubernamental?: BoolFieldUpdateOperationsInput | boolean
    tipoApoyoGubernamental?: NullableStringFieldUpdateOperationsInput | string | null
    motivacion?: StringFieldUpdateOperationsInput | string
    tiempoSemanalDisponible?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroMujerVulnerableUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    esMadreCabeza?: BoolFieldUpdateOperationsInput | boolean
    numeroHijos?: IntFieldUpdateOperationsInput | number
    conviveConOtrasPersonas?: BoolFieldUpdateOperationsInput | boolean
    conQuienesConvive?: NullableStringFieldUpdateOperationsInput | string | null
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    tieneEmpleo?: BoolFieldUpdateOperationsInput | boolean
    actividadLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    fuenteIngresos?: NullableStringFieldUpdateOperationsInput | string | null
    areasApoyo?: RegistroMujerVulnerableUpdateareasApoyoInput | $Enums.AreaApoyo[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    tieneApoyoGubernamental?: BoolFieldUpdateOperationsInput | boolean
    tipoApoyoGubernamental?: NullableStringFieldUpdateOperationsInput | string | null
    motivacion?: StringFieldUpdateOperationsInput | string
    tiempoSemanalDisponible?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroMujerVulnerableCreateManyInput = {
    id?: number
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    esMadreCabeza?: boolean
    numeroHijos?: number
    conviveConOtrasPersonas?: boolean
    conQuienesConvive?: string | null
    nivelEducativo: $Enums.NivelEducativo
    tieneEmpleo?: boolean
    actividadLaboral?: string | null
    fuenteIngresos?: string | null
    areasApoyo?: RegistroMujerVulnerableCreateareasApoyoInput | $Enums.AreaApoyo[]
    otrasAreas?: string | null
    tieneApoyoGubernamental?: boolean
    tipoApoyoGubernamental?: string | null
    motivacion: string
    tiempoSemanalDisponible: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroMujerVulnerableUpdateManyMutationInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    esMadreCabeza?: BoolFieldUpdateOperationsInput | boolean
    numeroHijos?: IntFieldUpdateOperationsInput | number
    conviveConOtrasPersonas?: BoolFieldUpdateOperationsInput | boolean
    conQuienesConvive?: NullableStringFieldUpdateOperationsInput | string | null
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    tieneEmpleo?: BoolFieldUpdateOperationsInput | boolean
    actividadLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    fuenteIngresos?: NullableStringFieldUpdateOperationsInput | string | null
    areasApoyo?: RegistroMujerVulnerableUpdateareasApoyoInput | $Enums.AreaApoyo[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    tieneApoyoGubernamental?: BoolFieldUpdateOperationsInput | boolean
    tipoApoyoGubernamental?: NullableStringFieldUpdateOperationsInput | string | null
    motivacion?: StringFieldUpdateOperationsInput | string
    tiempoSemanalDisponible?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroMujerVulnerableUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    esMadreCabeza?: BoolFieldUpdateOperationsInput | boolean
    numeroHijos?: IntFieldUpdateOperationsInput | number
    conviveConOtrasPersonas?: BoolFieldUpdateOperationsInput | boolean
    conQuienesConvive?: NullableStringFieldUpdateOperationsInput | string | null
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    tieneEmpleo?: BoolFieldUpdateOperationsInput | boolean
    actividadLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    fuenteIngresos?: NullableStringFieldUpdateOperationsInput | string | null
    areasApoyo?: RegistroMujerVulnerableUpdateareasApoyoInput | $Enums.AreaApoyo[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    tieneApoyoGubernamental?: BoolFieldUpdateOperationsInput | boolean
    tipoApoyoGubernamental?: NullableStringFieldUpdateOperationsInput | string | null
    motivacion?: StringFieldUpdateOperationsInput | string
    tiempoSemanalDisponible?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroSemilleroInnovacionCreateInput = {
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    tipoVinculacion: $Enums.TipoVinculacion
    nombreEntidadVinculacion: string
    nivelEducativo: $Enums.NivelEducativo
    participacionPrevia?: boolean
    areasInteres?: RegistroSemilleroInnovacionCreateareasInteresInput | string[]
    otrasAreas?: string | null
    tieneProyecto?: boolean
    descripcionProyecto?: string | null
    habilidades: string
    disponibilidad: string
    motivacion: string
    expectativas: string
    aceptaTerminos: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroSemilleroInnovacionUncheckedCreateInput = {
    id?: number
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    tipoVinculacion: $Enums.TipoVinculacion
    nombreEntidadVinculacion: string
    nivelEducativo: $Enums.NivelEducativo
    participacionPrevia?: boolean
    areasInteres?: RegistroSemilleroInnovacionCreateareasInteresInput | string[]
    otrasAreas?: string | null
    tieneProyecto?: boolean
    descripcionProyecto?: string | null
    habilidades: string
    disponibilidad: string
    motivacion: string
    expectativas: string
    aceptaTerminos: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroSemilleroInnovacionUpdateInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    tipoVinculacion?: EnumTipoVinculacionFieldUpdateOperationsInput | $Enums.TipoVinculacion
    nombreEntidadVinculacion?: StringFieldUpdateOperationsInput | string
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    participacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    areasInteres?: RegistroSemilleroInnovacionUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    tieneProyecto?: BoolFieldUpdateOperationsInput | boolean
    descripcionProyecto?: NullableStringFieldUpdateOperationsInput | string | null
    habilidades?: StringFieldUpdateOperationsInput | string
    disponibilidad?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroSemilleroInnovacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    tipoVinculacion?: EnumTipoVinculacionFieldUpdateOperationsInput | $Enums.TipoVinculacion
    nombreEntidadVinculacion?: StringFieldUpdateOperationsInput | string
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    participacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    areasInteres?: RegistroSemilleroInnovacionUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    tieneProyecto?: BoolFieldUpdateOperationsInput | boolean
    descripcionProyecto?: NullableStringFieldUpdateOperationsInput | string | null
    habilidades?: StringFieldUpdateOperationsInput | string
    disponibilidad?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroSemilleroInnovacionCreateManyInput = {
    id?: number
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    tipoVinculacion: $Enums.TipoVinculacion
    nombreEntidadVinculacion: string
    nivelEducativo: $Enums.NivelEducativo
    participacionPrevia?: boolean
    areasInteres?: RegistroSemilleroInnovacionCreateareasInteresInput | string[]
    otrasAreas?: string | null
    tieneProyecto?: boolean
    descripcionProyecto?: string | null
    habilidades: string
    disponibilidad: string
    motivacion: string
    expectativas: string
    aceptaTerminos: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroSemilleroInnovacionUpdateManyMutationInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    tipoVinculacion?: EnumTipoVinculacionFieldUpdateOperationsInput | $Enums.TipoVinculacion
    nombreEntidadVinculacion?: StringFieldUpdateOperationsInput | string
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    participacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    areasInteres?: RegistroSemilleroInnovacionUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    tieneProyecto?: BoolFieldUpdateOperationsInput | boolean
    descripcionProyecto?: NullableStringFieldUpdateOperationsInput | string | null
    habilidades?: StringFieldUpdateOperationsInput | string
    disponibilidad?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroSemilleroInnovacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    tipoVinculacion?: EnumTipoVinculacionFieldUpdateOperationsInput | $Enums.TipoVinculacion
    nombreEntidadVinculacion?: StringFieldUpdateOperationsInput | string
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    participacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    areasInteres?: RegistroSemilleroInnovacionUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    tieneProyecto?: BoolFieldUpdateOperationsInput | boolean
    descripcionProyecto?: NullableStringFieldUpdateOperationsInput | string | null
    habilidades?: StringFieldUpdateOperationsInput | string
    disponibilidad?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroTallerSteamCreateInput = {
    nombreCompleto: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    institucionEducativa: string
    cursoGrado: string
    direccion: string
    nombreAcudiente: string
    relacionNino: string
    telefonoContacto: string
    correoElectronico?: string | null
    participacionPrevia?: boolean
    actividadesInteres?: RegistroTallerSteamCreateactividadesInteresInput | string[]
    otrasActividades?: string | null
    disponibilidad: string
    accesoComputadora?: boolean
    accesoInternet?: boolean
    motivacion: string
    expectativa: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroTallerSteamUncheckedCreateInput = {
    id?: number
    nombreCompleto: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    institucionEducativa: string
    cursoGrado: string
    direccion: string
    nombreAcudiente: string
    relacionNino: string
    telefonoContacto: string
    correoElectronico?: string | null
    participacionPrevia?: boolean
    actividadesInteres?: RegistroTallerSteamCreateactividadesInteresInput | string[]
    otrasActividades?: string | null
    disponibilidad: string
    accesoComputadora?: boolean
    accesoInternet?: boolean
    motivacion: string
    expectativa: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroTallerSteamUpdateInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    institucionEducativa?: StringFieldUpdateOperationsInput | string
    cursoGrado?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    nombreAcudiente?: StringFieldUpdateOperationsInput | string
    relacionNino?: StringFieldUpdateOperationsInput | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    participacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    actividadesInteres?: RegistroTallerSteamUpdateactividadesInteresInput | string[]
    otrasActividades?: NullableStringFieldUpdateOperationsInput | string | null
    disponibilidad?: StringFieldUpdateOperationsInput | string
    accesoComputadora?: BoolFieldUpdateOperationsInput | boolean
    accesoInternet?: BoolFieldUpdateOperationsInput | boolean
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativa?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroTallerSteamUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    institucionEducativa?: StringFieldUpdateOperationsInput | string
    cursoGrado?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    nombreAcudiente?: StringFieldUpdateOperationsInput | string
    relacionNino?: StringFieldUpdateOperationsInput | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    participacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    actividadesInteres?: RegistroTallerSteamUpdateactividadesInteresInput | string[]
    otrasActividades?: NullableStringFieldUpdateOperationsInput | string | null
    disponibilidad?: StringFieldUpdateOperationsInput | string
    accesoComputadora?: BoolFieldUpdateOperationsInput | boolean
    accesoInternet?: BoolFieldUpdateOperationsInput | boolean
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativa?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroTallerSteamCreateManyInput = {
    id?: number
    nombreCompleto: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    institucionEducativa: string
    cursoGrado: string
    direccion: string
    nombreAcudiente: string
    relacionNino: string
    telefonoContacto: string
    correoElectronico?: string | null
    participacionPrevia?: boolean
    actividadesInteres?: RegistroTallerSteamCreateactividadesInteresInput | string[]
    otrasActividades?: string | null
    disponibilidad: string
    accesoComputadora?: boolean
    accesoInternet?: boolean
    motivacion: string
    expectativa: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroTallerSteamUpdateManyMutationInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    institucionEducativa?: StringFieldUpdateOperationsInput | string
    cursoGrado?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    nombreAcudiente?: StringFieldUpdateOperationsInput | string
    relacionNino?: StringFieldUpdateOperationsInput | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    participacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    actividadesInteres?: RegistroTallerSteamUpdateactividadesInteresInput | string[]
    otrasActividades?: NullableStringFieldUpdateOperationsInput | string | null
    disponibilidad?: StringFieldUpdateOperationsInput | string
    accesoComputadora?: BoolFieldUpdateOperationsInput | boolean
    accesoInternet?: BoolFieldUpdateOperationsInput | boolean
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativa?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroTallerSteamUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    institucionEducativa?: StringFieldUpdateOperationsInput | string
    cursoGrado?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    nombreAcudiente?: StringFieldUpdateOperationsInput | string
    relacionNino?: StringFieldUpdateOperationsInput | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    participacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    actividadesInteres?: RegistroTallerSteamUpdateactividadesInteresInput | string[]
    otrasActividades?: NullableStringFieldUpdateOperationsInput | string | null
    disponibilidad?: StringFieldUpdateOperationsInput | string
    accesoComputadora?: BoolFieldUpdateOperationsInput | boolean
    accesoInternet?: BoolFieldUpdateOperationsInput | boolean
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativa?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroSeguridadAlimentariaCreateInput = {
    nombreResponsable: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    telefono: string
    correoElectronico?: string | null
    direccion: string
    barrio: string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    grupoEtnico: $Enums.GrupoEtnico
    esAgricultor?: boolean
    tieneTierras?: boolean
    hectareas?: number | null
    pisoTermico?: string | null
    tieneCultivo?: boolean
    tiposCultivo?: string | null
    participacionPrevia?: boolean
    proyectosAnteriores?: string | null
    tieneRiego?: boolean
    tieneHerramientas?: boolean
    tiposHerramientas?: string | null
    tieneAsistenciaTecnica?: boolean
    motivacion: string
    tiempoSemanal: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroSeguridadAlimentariaUncheckedCreateInput = {
    id?: number
    nombreResponsable: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    telefono: string
    correoElectronico?: string | null
    direccion: string
    barrio: string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    grupoEtnico: $Enums.GrupoEtnico
    esAgricultor?: boolean
    tieneTierras?: boolean
    hectareas?: number | null
    pisoTermico?: string | null
    tieneCultivo?: boolean
    tiposCultivo?: string | null
    participacionPrevia?: boolean
    proyectosAnteriores?: string | null
    tieneRiego?: boolean
    tieneHerramientas?: boolean
    tiposHerramientas?: string | null
    tieneAsistenciaTecnica?: boolean
    motivacion: string
    tiempoSemanal: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroSeguridadAlimentariaUpdateInput = {
    nombreResponsable?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    barrio?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    esAgricultor?: BoolFieldUpdateOperationsInput | boolean
    tieneTierras?: BoolFieldUpdateOperationsInput | boolean
    hectareas?: NullableFloatFieldUpdateOperationsInput | number | null
    pisoTermico?: NullableStringFieldUpdateOperationsInput | string | null
    tieneCultivo?: BoolFieldUpdateOperationsInput | boolean
    tiposCultivo?: NullableStringFieldUpdateOperationsInput | string | null
    participacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    proyectosAnteriores?: NullableStringFieldUpdateOperationsInput | string | null
    tieneRiego?: BoolFieldUpdateOperationsInput | boolean
    tieneHerramientas?: BoolFieldUpdateOperationsInput | boolean
    tiposHerramientas?: NullableStringFieldUpdateOperationsInput | string | null
    tieneAsistenciaTecnica?: BoolFieldUpdateOperationsInput | boolean
    motivacion?: StringFieldUpdateOperationsInput | string
    tiempoSemanal?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroSeguridadAlimentariaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreResponsable?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    barrio?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    esAgricultor?: BoolFieldUpdateOperationsInput | boolean
    tieneTierras?: BoolFieldUpdateOperationsInput | boolean
    hectareas?: NullableFloatFieldUpdateOperationsInput | number | null
    pisoTermico?: NullableStringFieldUpdateOperationsInput | string | null
    tieneCultivo?: BoolFieldUpdateOperationsInput | boolean
    tiposCultivo?: NullableStringFieldUpdateOperationsInput | string | null
    participacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    proyectosAnteriores?: NullableStringFieldUpdateOperationsInput | string | null
    tieneRiego?: BoolFieldUpdateOperationsInput | boolean
    tieneHerramientas?: BoolFieldUpdateOperationsInput | boolean
    tiposHerramientas?: NullableStringFieldUpdateOperationsInput | string | null
    tieneAsistenciaTecnica?: BoolFieldUpdateOperationsInput | boolean
    motivacion?: StringFieldUpdateOperationsInput | string
    tiempoSemanal?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroSeguridadAlimentariaCreateManyInput = {
    id?: number
    nombreResponsable: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    telefono: string
    correoElectronico?: string | null
    direccion: string
    barrio: string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    grupoEtnico: $Enums.GrupoEtnico
    esAgricultor?: boolean
    tieneTierras?: boolean
    hectareas?: number | null
    pisoTermico?: string | null
    tieneCultivo?: boolean
    tiposCultivo?: string | null
    participacionPrevia?: boolean
    proyectosAnteriores?: string | null
    tieneRiego?: boolean
    tieneHerramientas?: boolean
    tiposHerramientas?: string | null
    tieneAsistenciaTecnica?: boolean
    motivacion: string
    tiempoSemanal: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroSeguridadAlimentariaUpdateManyMutationInput = {
    nombreResponsable?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    barrio?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    esAgricultor?: BoolFieldUpdateOperationsInput | boolean
    tieneTierras?: BoolFieldUpdateOperationsInput | boolean
    hectareas?: NullableFloatFieldUpdateOperationsInput | number | null
    pisoTermico?: NullableStringFieldUpdateOperationsInput | string | null
    tieneCultivo?: BoolFieldUpdateOperationsInput | boolean
    tiposCultivo?: NullableStringFieldUpdateOperationsInput | string | null
    participacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    proyectosAnteriores?: NullableStringFieldUpdateOperationsInput | string | null
    tieneRiego?: BoolFieldUpdateOperationsInput | boolean
    tieneHerramientas?: BoolFieldUpdateOperationsInput | boolean
    tiposHerramientas?: NullableStringFieldUpdateOperationsInput | string | null
    tieneAsistenciaTecnica?: BoolFieldUpdateOperationsInput | boolean
    motivacion?: StringFieldUpdateOperationsInput | string
    tiempoSemanal?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroSeguridadAlimentariaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreResponsable?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    barrio?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    esAgricultor?: BoolFieldUpdateOperationsInput | boolean
    tieneTierras?: BoolFieldUpdateOperationsInput | boolean
    hectareas?: NullableFloatFieldUpdateOperationsInput | number | null
    pisoTermico?: NullableStringFieldUpdateOperationsInput | string | null
    tieneCultivo?: BoolFieldUpdateOperationsInput | boolean
    tiposCultivo?: NullableStringFieldUpdateOperationsInput | string | null
    participacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    proyectosAnteriores?: NullableStringFieldUpdateOperationsInput | string | null
    tieneRiego?: BoolFieldUpdateOperationsInput | boolean
    tieneHerramientas?: BoolFieldUpdateOperationsInput | boolean
    tiposHerramientas?: NullableStringFieldUpdateOperationsInput | string | null
    tieneAsistenciaTecnica?: BoolFieldUpdateOperationsInput | boolean
    motivacion?: StringFieldUpdateOperationsInput | string
    tiempoSemanal?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroRefuerzoEscolarCreateInput = {
    nombreCompleto: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    institucionEducativa: string
    cursoGrado: string
    direccion: string
    nombreAcudiente: string
    relacionNino: string
    telefonoContacto: string
    correoElectronico?: string | null
    areasAyuda?: RegistroRefuerzoEscolarCreateareasAyudaInput | string[]
    otrasAreas?: string | null
    refuerzoPrevio?: boolean
    dificultadesAcademicas: string
    disponibilidad: string
    accesoMateriales?: boolean
    apoyoHabitos?: boolean
    motivacion: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroRefuerzoEscolarUncheckedCreateInput = {
    id?: number
    nombreCompleto: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    institucionEducativa: string
    cursoGrado: string
    direccion: string
    nombreAcudiente: string
    relacionNino: string
    telefonoContacto: string
    correoElectronico?: string | null
    areasAyuda?: RegistroRefuerzoEscolarCreateareasAyudaInput | string[]
    otrasAreas?: string | null
    refuerzoPrevio?: boolean
    dificultadesAcademicas: string
    disponibilidad: string
    accesoMateriales?: boolean
    apoyoHabitos?: boolean
    motivacion: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroRefuerzoEscolarUpdateInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    institucionEducativa?: StringFieldUpdateOperationsInput | string
    cursoGrado?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    nombreAcudiente?: StringFieldUpdateOperationsInput | string
    relacionNino?: StringFieldUpdateOperationsInput | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    areasAyuda?: RegistroRefuerzoEscolarUpdateareasAyudaInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    refuerzoPrevio?: BoolFieldUpdateOperationsInput | boolean
    dificultadesAcademicas?: StringFieldUpdateOperationsInput | string
    disponibilidad?: StringFieldUpdateOperationsInput | string
    accesoMateriales?: BoolFieldUpdateOperationsInput | boolean
    apoyoHabitos?: BoolFieldUpdateOperationsInput | boolean
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroRefuerzoEscolarUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    institucionEducativa?: StringFieldUpdateOperationsInput | string
    cursoGrado?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    nombreAcudiente?: StringFieldUpdateOperationsInput | string
    relacionNino?: StringFieldUpdateOperationsInput | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    areasAyuda?: RegistroRefuerzoEscolarUpdateareasAyudaInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    refuerzoPrevio?: BoolFieldUpdateOperationsInput | boolean
    dificultadesAcademicas?: StringFieldUpdateOperationsInput | string
    disponibilidad?: StringFieldUpdateOperationsInput | string
    accesoMateriales?: BoolFieldUpdateOperationsInput | boolean
    apoyoHabitos?: BoolFieldUpdateOperationsInput | boolean
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroRefuerzoEscolarCreateManyInput = {
    id?: number
    nombreCompleto: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    institucionEducativa: string
    cursoGrado: string
    direccion: string
    nombreAcudiente: string
    relacionNino: string
    telefonoContacto: string
    correoElectronico?: string | null
    areasAyuda?: RegistroRefuerzoEscolarCreateareasAyudaInput | string[]
    otrasAreas?: string | null
    refuerzoPrevio?: boolean
    dificultadesAcademicas: string
    disponibilidad: string
    accesoMateriales?: boolean
    apoyoHabitos?: boolean
    motivacion: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroRefuerzoEscolarUpdateManyMutationInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    institucionEducativa?: StringFieldUpdateOperationsInput | string
    cursoGrado?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    nombreAcudiente?: StringFieldUpdateOperationsInput | string
    relacionNino?: StringFieldUpdateOperationsInput | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    areasAyuda?: RegistroRefuerzoEscolarUpdateareasAyudaInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    refuerzoPrevio?: BoolFieldUpdateOperationsInput | boolean
    dificultadesAcademicas?: StringFieldUpdateOperationsInput | string
    disponibilidad?: StringFieldUpdateOperationsInput | string
    accesoMateriales?: BoolFieldUpdateOperationsInput | boolean
    apoyoHabitos?: BoolFieldUpdateOperationsInput | boolean
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroRefuerzoEscolarUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    institucionEducativa?: StringFieldUpdateOperationsInput | string
    cursoGrado?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    nombreAcudiente?: StringFieldUpdateOperationsInput | string
    relacionNino?: StringFieldUpdateOperationsInput | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    areasAyuda?: RegistroRefuerzoEscolarUpdateareasAyudaInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    refuerzoPrevio?: BoolFieldUpdateOperationsInput | boolean
    dificultadesAcademicas?: StringFieldUpdateOperationsInput | string
    disponibilidad?: StringFieldUpdateOperationsInput | string
    accesoMateriales?: BoolFieldUpdateOperationsInput | boolean
    apoyoHabitos?: BoolFieldUpdateOperationsInput | boolean
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroSoftwareFactoryCreateInput = {
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    modalidadVinculacion: string
    institucionEducativa: string
    programaAcademico: string
    semestreNivel: string
    tiempoDisponible: string
    tecnologias?: RegistroSoftwareFactoryCreatetecnologiasInput | string[]
    proyectosRealizados?: string | null
    areasInteres?: RegistroSoftwareFactoryCreateareasInteresInput | string[]
    otrasAreas?: string | null
    experienciaAgile?: string | null
    motivacion: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroSoftwareFactoryUncheckedCreateInput = {
    id?: number
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    modalidadVinculacion: string
    institucionEducativa: string
    programaAcademico: string
    semestreNivel: string
    tiempoDisponible: string
    tecnologias?: RegistroSoftwareFactoryCreatetecnologiasInput | string[]
    proyectosRealizados?: string | null
    areasInteres?: RegistroSoftwareFactoryCreateareasInteresInput | string[]
    otrasAreas?: string | null
    experienciaAgile?: string | null
    motivacion: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroSoftwareFactoryUpdateInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    modalidadVinculacion?: StringFieldUpdateOperationsInput | string
    institucionEducativa?: StringFieldUpdateOperationsInput | string
    programaAcademico?: StringFieldUpdateOperationsInput | string
    semestreNivel?: StringFieldUpdateOperationsInput | string
    tiempoDisponible?: StringFieldUpdateOperationsInput | string
    tecnologias?: RegistroSoftwareFactoryUpdatetecnologiasInput | string[]
    proyectosRealizados?: NullableStringFieldUpdateOperationsInput | string | null
    areasInteres?: RegistroSoftwareFactoryUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    experienciaAgile?: NullableStringFieldUpdateOperationsInput | string | null
    motivacion?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroSoftwareFactoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    modalidadVinculacion?: StringFieldUpdateOperationsInput | string
    institucionEducativa?: StringFieldUpdateOperationsInput | string
    programaAcademico?: StringFieldUpdateOperationsInput | string
    semestreNivel?: StringFieldUpdateOperationsInput | string
    tiempoDisponible?: StringFieldUpdateOperationsInput | string
    tecnologias?: RegistroSoftwareFactoryUpdatetecnologiasInput | string[]
    proyectosRealizados?: NullableStringFieldUpdateOperationsInput | string | null
    areasInteres?: RegistroSoftwareFactoryUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    experienciaAgile?: NullableStringFieldUpdateOperationsInput | string | null
    motivacion?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroSoftwareFactoryCreateManyInput = {
    id?: number
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    modalidadVinculacion: string
    institucionEducativa: string
    programaAcademico: string
    semestreNivel: string
    tiempoDisponible: string
    tecnologias?: RegistroSoftwareFactoryCreatetecnologiasInput | string[]
    proyectosRealizados?: string | null
    areasInteres?: RegistroSoftwareFactoryCreateareasInteresInput | string[]
    otrasAreas?: string | null
    experienciaAgile?: string | null
    motivacion: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroSoftwareFactoryUpdateManyMutationInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    modalidadVinculacion?: StringFieldUpdateOperationsInput | string
    institucionEducativa?: StringFieldUpdateOperationsInput | string
    programaAcademico?: StringFieldUpdateOperationsInput | string
    semestreNivel?: StringFieldUpdateOperationsInput | string
    tiempoDisponible?: StringFieldUpdateOperationsInput | string
    tecnologias?: RegistroSoftwareFactoryUpdatetecnologiasInput | string[]
    proyectosRealizados?: NullableStringFieldUpdateOperationsInput | string | null
    areasInteres?: RegistroSoftwareFactoryUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    experienciaAgile?: NullableStringFieldUpdateOperationsInput | string | null
    motivacion?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroSoftwareFactoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    modalidadVinculacion?: StringFieldUpdateOperationsInput | string
    institucionEducativa?: StringFieldUpdateOperationsInput | string
    programaAcademico?: StringFieldUpdateOperationsInput | string
    semestreNivel?: StringFieldUpdateOperationsInput | string
    tiempoDisponible?: StringFieldUpdateOperationsInput | string
    tecnologias?: RegistroSoftwareFactoryUpdatetecnologiasInput | string[]
    proyectosRealizados?: NullableStringFieldUpdateOperationsInput | string | null
    areasInteres?: RegistroSoftwareFactoryUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    experienciaAgile?: NullableStringFieldUpdateOperationsInput | string | null
    motivacion?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroVoluntariadoCreateInput = {
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    nivelEducativo: $Enums.NivelEducativo
    profesionOcupacion: string
    disponibilidadTipo: $Enums.TipoDisponibilidad
    diasEspecificos?: string | null
    horasDisponibles: number
    areasInteres?: RegistroVoluntariadoCreateareasInteresInput | string[]
    otrasAreas?: string | null
    habilidades: string
    fundacion: string
    funcion: string
    tiempo: string
    motivacion: string
    referencia1Nombre?: string | null
    referencia1Telefono?: string | null
    referencia2Nombre?: string | null
    referencia2Telefono?: string | null
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroVoluntariadoUncheckedCreateInput = {
    id?: number
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    nivelEducativo: $Enums.NivelEducativo
    profesionOcupacion: string
    disponibilidadTipo: $Enums.TipoDisponibilidad
    diasEspecificos?: string | null
    horasDisponibles: number
    areasInteres?: RegistroVoluntariadoCreateareasInteresInput | string[]
    otrasAreas?: string | null
    habilidades: string
    fundacion: string
    funcion: string
    tiempo: string
    motivacion: string
    referencia1Nombre?: string | null
    referencia1Telefono?: string | null
    referencia2Nombre?: string | null
    referencia2Telefono?: string | null
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroVoluntariadoUpdateInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    profesionOcupacion?: StringFieldUpdateOperationsInput | string
    disponibilidadTipo?: EnumTipoDisponibilidadFieldUpdateOperationsInput | $Enums.TipoDisponibilidad
    diasEspecificos?: NullableStringFieldUpdateOperationsInput | string | null
    horasDisponibles?: IntFieldUpdateOperationsInput | number
    areasInteres?: RegistroVoluntariadoUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    habilidades?: StringFieldUpdateOperationsInput | string
    fundacion?: StringFieldUpdateOperationsInput | string
    funcion?: StringFieldUpdateOperationsInput | string
    tiempo?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    referencia1Nombre?: NullableStringFieldUpdateOperationsInput | string | null
    referencia1Telefono?: NullableStringFieldUpdateOperationsInput | string | null
    referencia2Nombre?: NullableStringFieldUpdateOperationsInput | string | null
    referencia2Telefono?: NullableStringFieldUpdateOperationsInput | string | null
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroVoluntariadoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    profesionOcupacion?: StringFieldUpdateOperationsInput | string
    disponibilidadTipo?: EnumTipoDisponibilidadFieldUpdateOperationsInput | $Enums.TipoDisponibilidad
    diasEspecificos?: NullableStringFieldUpdateOperationsInput | string | null
    horasDisponibles?: IntFieldUpdateOperationsInput | number
    areasInteres?: RegistroVoluntariadoUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    habilidades?: StringFieldUpdateOperationsInput | string
    fundacion?: StringFieldUpdateOperationsInput | string
    funcion?: StringFieldUpdateOperationsInput | string
    tiempo?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    referencia1Nombre?: NullableStringFieldUpdateOperationsInput | string | null
    referencia1Telefono?: NullableStringFieldUpdateOperationsInput | string | null
    referencia2Nombre?: NullableStringFieldUpdateOperationsInput | string | null
    referencia2Telefono?: NullableStringFieldUpdateOperationsInput | string | null
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroVoluntariadoCreateManyInput = {
    id?: number
    nombreCompleto: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    fechaNacimiento: Date | string
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    nivelEducativo: $Enums.NivelEducativo
    profesionOcupacion: string
    disponibilidadTipo: $Enums.TipoDisponibilidad
    diasEspecificos?: string | null
    horasDisponibles: number
    areasInteres?: RegistroVoluntariadoCreateareasInteresInput | string[]
    otrasAreas?: string | null
    habilidades: string
    fundacion: string
    funcion: string
    tiempo: string
    motivacion: string
    referencia1Nombre?: string | null
    referencia1Telefono?: string | null
    referencia2Nombre?: string | null
    referencia2Telefono?: string | null
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroVoluntariadoUpdateManyMutationInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    profesionOcupacion?: StringFieldUpdateOperationsInput | string
    disponibilidadTipo?: EnumTipoDisponibilidadFieldUpdateOperationsInput | $Enums.TipoDisponibilidad
    diasEspecificos?: NullableStringFieldUpdateOperationsInput | string | null
    horasDisponibles?: IntFieldUpdateOperationsInput | number
    areasInteres?: RegistroVoluntariadoUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    habilidades?: StringFieldUpdateOperationsInput | string
    fundacion?: StringFieldUpdateOperationsInput | string
    funcion?: StringFieldUpdateOperationsInput | string
    tiempo?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    referencia1Nombre?: NullableStringFieldUpdateOperationsInput | string | null
    referencia1Telefono?: NullableStringFieldUpdateOperationsInput | string | null
    referencia2Nombre?: NullableStringFieldUpdateOperationsInput | string | null
    referencia2Telefono?: NullableStringFieldUpdateOperationsInput | string | null
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroVoluntariadoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    profesionOcupacion?: StringFieldUpdateOperationsInput | string
    disponibilidadTipo?: EnumTipoDisponibilidadFieldUpdateOperationsInput | $Enums.TipoDisponibilidad
    diasEspecificos?: NullableStringFieldUpdateOperationsInput | string | null
    horasDisponibles?: IntFieldUpdateOperationsInput | number
    areasInteres?: RegistroVoluntariadoUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    habilidades?: StringFieldUpdateOperationsInput | string
    fundacion?: StringFieldUpdateOperationsInput | string
    funcion?: StringFieldUpdateOperationsInput | string
    tiempo?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    referencia1Nombre?: NullableStringFieldUpdateOperationsInput | string | null
    referencia1Telefono?: NullableStringFieldUpdateOperationsInput | string | null
    referencia2Nombre?: NullableStringFieldUpdateOperationsInput | string | null
    referencia2Telefono?: NullableStringFieldUpdateOperationsInput | string | null
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroCulturalCreateInput = {
    nombreCompleto: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    documentoIdentidad: string
    municipioDepartamento: string
    nivelEducativo: $Enums.NivelEducativo
    ocupacion: string
    areaInteresPrincipal: $Enums.AreaInteresCultural
    otraAreaInteres?: string | null
    formacionPrevia?: boolean
    detalleFormacion?: string | null
    perteneceGrupo?: boolean
    detalleGrupo?: string | null
    diasDisponibles: string
    motivacion: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroCulturalUncheckedCreateInput = {
    id?: number
    nombreCompleto: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    documentoIdentidad: string
    municipioDepartamento: string
    nivelEducativo: $Enums.NivelEducativo
    ocupacion: string
    areaInteresPrincipal: $Enums.AreaInteresCultural
    otraAreaInteres?: string | null
    formacionPrevia?: boolean
    detalleFormacion?: string | null
    perteneceGrupo?: boolean
    detalleGrupo?: string | null
    diasDisponibles: string
    motivacion: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroCulturalUpdateInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    documentoIdentidad?: StringFieldUpdateOperationsInput | string
    municipioDepartamento?: StringFieldUpdateOperationsInput | string
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    ocupacion?: StringFieldUpdateOperationsInput | string
    areaInteresPrincipal?: EnumAreaInteresCulturalFieldUpdateOperationsInput | $Enums.AreaInteresCultural
    otraAreaInteres?: NullableStringFieldUpdateOperationsInput | string | null
    formacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    detalleFormacion?: NullableStringFieldUpdateOperationsInput | string | null
    perteneceGrupo?: BoolFieldUpdateOperationsInput | boolean
    detalleGrupo?: NullableStringFieldUpdateOperationsInput | string | null
    diasDisponibles?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroCulturalUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    documentoIdentidad?: StringFieldUpdateOperationsInput | string
    municipioDepartamento?: StringFieldUpdateOperationsInput | string
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    ocupacion?: StringFieldUpdateOperationsInput | string
    areaInteresPrincipal?: EnumAreaInteresCulturalFieldUpdateOperationsInput | $Enums.AreaInteresCultural
    otraAreaInteres?: NullableStringFieldUpdateOperationsInput | string | null
    formacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    detalleFormacion?: NullableStringFieldUpdateOperationsInput | string | null
    perteneceGrupo?: BoolFieldUpdateOperationsInput | boolean
    detalleGrupo?: NullableStringFieldUpdateOperationsInput | string | null
    diasDisponibles?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroCulturalCreateManyInput = {
    id?: number
    nombreCompleto: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    documentoIdentidad: string
    municipioDepartamento: string
    nivelEducativo: $Enums.NivelEducativo
    ocupacion: string
    areaInteresPrincipal: $Enums.AreaInteresCultural
    otraAreaInteres?: string | null
    formacionPrevia?: boolean
    detalleFormacion?: string | null
    perteneceGrupo?: boolean
    detalleGrupo?: string | null
    diasDisponibles: string
    motivacion: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroCulturalUpdateManyMutationInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    documentoIdentidad?: StringFieldUpdateOperationsInput | string
    municipioDepartamento?: StringFieldUpdateOperationsInput | string
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    ocupacion?: StringFieldUpdateOperationsInput | string
    areaInteresPrincipal?: EnumAreaInteresCulturalFieldUpdateOperationsInput | $Enums.AreaInteresCultural
    otraAreaInteres?: NullableStringFieldUpdateOperationsInput | string | null
    formacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    detalleFormacion?: NullableStringFieldUpdateOperationsInput | string | null
    perteneceGrupo?: BoolFieldUpdateOperationsInput | boolean
    detalleGrupo?: NullableStringFieldUpdateOperationsInput | string | null
    diasDisponibles?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroCulturalUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    documentoIdentidad?: StringFieldUpdateOperationsInput | string
    municipioDepartamento?: StringFieldUpdateOperationsInput | string
    nivelEducativo?: EnumNivelEducativoFieldUpdateOperationsInput | $Enums.NivelEducativo
    ocupacion?: StringFieldUpdateOperationsInput | string
    areaInteresPrincipal?: EnumAreaInteresCulturalFieldUpdateOperationsInput | $Enums.AreaInteresCultural
    otraAreaInteres?: NullableStringFieldUpdateOperationsInput | string | null
    formacionPrevia?: BoolFieldUpdateOperationsInput | boolean
    detalleFormacion?: NullableStringFieldUpdateOperationsInput | string | null
    perteneceGrupo?: BoolFieldUpdateOperationsInput | boolean
    detalleGrupo?: NullableStringFieldUpdateOperationsInput | string | null
    diasDisponibles?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroEconomiaPlateadaCreateInput = {
    nombreCompleto: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    genero: $Enums.Genero
    esPensionado?: boolean
    actividadEconomica?: string | null
    trabajoAnterior?: boolean
    sectorTrabajo?: string | null
    ingresosAdicionales?: boolean
    fuenteIngresos?: string | null
    areasInteres?: RegistroEconomiaPlateadaCreateareasInteresInput | string[]
    otrasAreas?: string | null
    habilidades: string
    tiempoSemanal: string
    motivacion: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroEconomiaPlateadaUncheckedCreateInput = {
    id?: number
    nombreCompleto: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    genero: $Enums.Genero
    esPensionado?: boolean
    actividadEconomica?: string | null
    trabajoAnterior?: boolean
    sectorTrabajo?: string | null
    ingresosAdicionales?: boolean
    fuenteIngresos?: string | null
    areasInteres?: RegistroEconomiaPlateadaCreateareasInteresInput | string[]
    otrasAreas?: string | null
    habilidades: string
    tiempoSemanal: string
    motivacion: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroEconomiaPlateadaUpdateInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    esPensionado?: BoolFieldUpdateOperationsInput | boolean
    actividadEconomica?: NullableStringFieldUpdateOperationsInput | string | null
    trabajoAnterior?: BoolFieldUpdateOperationsInput | boolean
    sectorTrabajo?: NullableStringFieldUpdateOperationsInput | string | null
    ingresosAdicionales?: BoolFieldUpdateOperationsInput | boolean
    fuenteIngresos?: NullableStringFieldUpdateOperationsInput | string | null
    areasInteres?: RegistroEconomiaPlateadaUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    habilidades?: StringFieldUpdateOperationsInput | string
    tiempoSemanal?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroEconomiaPlateadaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    esPensionado?: BoolFieldUpdateOperationsInput | boolean
    actividadEconomica?: NullableStringFieldUpdateOperationsInput | string | null
    trabajoAnterior?: BoolFieldUpdateOperationsInput | boolean
    sectorTrabajo?: NullableStringFieldUpdateOperationsInput | string | null
    ingresosAdicionales?: BoolFieldUpdateOperationsInput | boolean
    fuenteIngresos?: NullableStringFieldUpdateOperationsInput | string | null
    areasInteres?: RegistroEconomiaPlateadaUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    habilidades?: StringFieldUpdateOperationsInput | string
    tiempoSemanal?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroEconomiaPlateadaCreateManyInput = {
    id?: number
    nombreCompleto: string
    fechaNacimiento: Date | string
    comuna: string
    estratoSocial: $Enums.EstratoSocial
    edad: number
    grupoEtnico: $Enums.GrupoEtnico
    telefonoContacto: string
    correoElectronico?: string | null
    direccion: string
    tipoDocumento: $Enums.TipoDocumento
    numeroDocumento: string
    genero: $Enums.Genero
    esPensionado?: boolean
    actividadEconomica?: string | null
    trabajoAnterior?: boolean
    sectorTrabajo?: string | null
    ingresosAdicionales?: boolean
    fuenteIngresos?: string | null
    areasInteres?: RegistroEconomiaPlateadaCreateareasInteresInput | string[]
    otrasAreas?: string | null
    habilidades: string
    tiempoSemanal: string
    motivacion: string
    expectativas: string
    aceptaTerminos?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegistroEconomiaPlateadaUpdateManyMutationInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    esPensionado?: BoolFieldUpdateOperationsInput | boolean
    actividadEconomica?: NullableStringFieldUpdateOperationsInput | string | null
    trabajoAnterior?: BoolFieldUpdateOperationsInput | boolean
    sectorTrabajo?: NullableStringFieldUpdateOperationsInput | string | null
    ingresosAdicionales?: BoolFieldUpdateOperationsInput | boolean
    fuenteIngresos?: NullableStringFieldUpdateOperationsInput | string | null
    areasInteres?: RegistroEconomiaPlateadaUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    habilidades?: StringFieldUpdateOperationsInput | string
    tiempoSemanal?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroEconomiaPlateadaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    fechaNacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    comuna?: StringFieldUpdateOperationsInput | string
    estratoSocial?: EnumEstratoSocialFieldUpdateOperationsInput | $Enums.EstratoSocial
    edad?: IntFieldUpdateOperationsInput | number
    grupoEtnico?: EnumGrupoEtnicoFieldUpdateOperationsInput | $Enums.GrupoEtnico
    telefonoContacto?: StringFieldUpdateOperationsInput | string
    correoElectronico?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    tipoDocumento?: EnumTipoDocumentoFieldUpdateOperationsInput | $Enums.TipoDocumento
    numeroDocumento?: StringFieldUpdateOperationsInput | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    esPensionado?: BoolFieldUpdateOperationsInput | boolean
    actividadEconomica?: NullableStringFieldUpdateOperationsInput | string | null
    trabajoAnterior?: BoolFieldUpdateOperationsInput | boolean
    sectorTrabajo?: NullableStringFieldUpdateOperationsInput | string | null
    ingresosAdicionales?: BoolFieldUpdateOperationsInput | boolean
    fuenteIngresos?: NullableStringFieldUpdateOperationsInput | string | null
    areasInteres?: RegistroEconomiaPlateadaUpdateareasInteresInput | string[]
    otrasAreas?: NullableStringFieldUpdateOperationsInput | string | null
    habilidades?: StringFieldUpdateOperationsInput | string
    tiempoSemanal?: StringFieldUpdateOperationsInput | string
    motivacion?: StringFieldUpdateOperationsInput | string
    expectativas?: StringFieldUpdateOperationsInput | string
    aceptaTerminos?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type PostListRelationFilter = {
    every?: PostWhereInput
    some?: PostWhereInput
    none?: PostWhereInput
  }

  export type RoleScalarRelationFilter = {
    is?: RoleWhereInput
    isNot?: RoleWhereInput
  }

  export type PostOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsersCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rolId?: SortOrder
  }

  export type UsersAvgOrderByAggregateInput = {
    id?: SortOrder
    rolId?: SortOrder
  }

  export type UsersMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rolId?: SortOrder
  }

  export type UsersMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rolId?: SortOrder
  }

  export type UsersSumOrderByAggregateInput = {
    id?: SortOrder
    rolId?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type UsersListRelationFilter = {
    every?: UsersWhereInput
    some?: UsersWhereInput
    none?: UsersWhereInput
  }

  export type UsersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type RoleAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type RoleSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type UsersScalarRelationFilter = {
    is?: UsersWhereInput
    isNot?: UsersWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type PostCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    authorId?: SortOrder
    images?: SortOrder
  }

  export type PostAvgOrderByAggregateInput = {
    id?: SortOrder
    authorId?: SortOrder
  }

  export type PostMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    authorId?: SortOrder
  }

  export type PostMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    authorId?: SortOrder
  }

  export type PostSumOrderByAggregateInput = {
    id?: SortOrder
    authorId?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumTipoDocumentoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoDocumento | EnumTipoDocumentoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoDocumento[] | ListEnumTipoDocumentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoDocumento[] | ListEnumTipoDocumentoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoDocumentoFilter<$PrismaModel> | $Enums.TipoDocumento
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EnumEstratoSocialFilter<$PrismaModel = never> = {
    equals?: $Enums.EstratoSocial | EnumEstratoSocialFieldRefInput<$PrismaModel>
    in?: $Enums.EstratoSocial[] | ListEnumEstratoSocialFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstratoSocial[] | ListEnumEstratoSocialFieldRefInput<$PrismaModel>
    not?: NestedEnumEstratoSocialFilter<$PrismaModel> | $Enums.EstratoSocial
  }

  export type EnumGrupoEtnicoFilter<$PrismaModel = never> = {
    equals?: $Enums.GrupoEtnico | EnumGrupoEtnicoFieldRefInput<$PrismaModel>
    in?: $Enums.GrupoEtnico[] | ListEnumGrupoEtnicoFieldRefInput<$PrismaModel>
    notIn?: $Enums.GrupoEtnico[] | ListEnumGrupoEtnicoFieldRefInput<$PrismaModel>
    not?: NestedEnumGrupoEtnicoFilter<$PrismaModel> | $Enums.GrupoEtnico
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type EnumNivelEducativoFilter<$PrismaModel = never> = {
    equals?: $Enums.NivelEducativo | EnumNivelEducativoFieldRefInput<$PrismaModel>
    in?: $Enums.NivelEducativo[] | ListEnumNivelEducativoFieldRefInput<$PrismaModel>
    notIn?: $Enums.NivelEducativo[] | ListEnumNivelEducativoFieldRefInput<$PrismaModel>
    not?: NestedEnumNivelEducativoFilter<$PrismaModel> | $Enums.NivelEducativo
  }

  export type EnumAreaApoyoNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.AreaApoyo[] | ListEnumAreaApoyoFieldRefInput<$PrismaModel> | null
    has?: $Enums.AreaApoyo | EnumAreaApoyoFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.AreaApoyo[] | ListEnumAreaApoyoFieldRefInput<$PrismaModel>
    hasSome?: $Enums.AreaApoyo[] | ListEnumAreaApoyoFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type RegistroMujerVulnerableCountOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    esMadreCabeza?: SortOrder
    numeroHijos?: SortOrder
    conviveConOtrasPersonas?: SortOrder
    conQuienesConvive?: SortOrder
    nivelEducativo?: SortOrder
    tieneEmpleo?: SortOrder
    actividadLaboral?: SortOrder
    fuenteIngresos?: SortOrder
    areasApoyo?: SortOrder
    otrasAreas?: SortOrder
    tieneApoyoGubernamental?: SortOrder
    tipoApoyoGubernamental?: SortOrder
    motivacion?: SortOrder
    tiempoSemanalDisponible?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroMujerVulnerableAvgOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
    numeroHijos?: SortOrder
  }

  export type RegistroMujerVulnerableMaxOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    esMadreCabeza?: SortOrder
    numeroHijos?: SortOrder
    conviveConOtrasPersonas?: SortOrder
    conQuienesConvive?: SortOrder
    nivelEducativo?: SortOrder
    tieneEmpleo?: SortOrder
    actividadLaboral?: SortOrder
    fuenteIngresos?: SortOrder
    otrasAreas?: SortOrder
    tieneApoyoGubernamental?: SortOrder
    tipoApoyoGubernamental?: SortOrder
    motivacion?: SortOrder
    tiempoSemanalDisponible?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroMujerVulnerableMinOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    esMadreCabeza?: SortOrder
    numeroHijos?: SortOrder
    conviveConOtrasPersonas?: SortOrder
    conQuienesConvive?: SortOrder
    nivelEducativo?: SortOrder
    tieneEmpleo?: SortOrder
    actividadLaboral?: SortOrder
    fuenteIngresos?: SortOrder
    otrasAreas?: SortOrder
    tieneApoyoGubernamental?: SortOrder
    tipoApoyoGubernamental?: SortOrder
    motivacion?: SortOrder
    tiempoSemanalDisponible?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroMujerVulnerableSumOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
    numeroHijos?: SortOrder
  }

  export type EnumTipoDocumentoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoDocumento | EnumTipoDocumentoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoDocumento[] | ListEnumTipoDocumentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoDocumento[] | ListEnumTipoDocumentoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoDocumentoWithAggregatesFilter<$PrismaModel> | $Enums.TipoDocumento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoDocumentoFilter<$PrismaModel>
    _max?: NestedEnumTipoDocumentoFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumEstratoSocialWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstratoSocial | EnumEstratoSocialFieldRefInput<$PrismaModel>
    in?: $Enums.EstratoSocial[] | ListEnumEstratoSocialFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstratoSocial[] | ListEnumEstratoSocialFieldRefInput<$PrismaModel>
    not?: NestedEnumEstratoSocialWithAggregatesFilter<$PrismaModel> | $Enums.EstratoSocial
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstratoSocialFilter<$PrismaModel>
    _max?: NestedEnumEstratoSocialFilter<$PrismaModel>
  }

  export type EnumGrupoEtnicoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GrupoEtnico | EnumGrupoEtnicoFieldRefInput<$PrismaModel>
    in?: $Enums.GrupoEtnico[] | ListEnumGrupoEtnicoFieldRefInput<$PrismaModel>
    notIn?: $Enums.GrupoEtnico[] | ListEnumGrupoEtnicoFieldRefInput<$PrismaModel>
    not?: NestedEnumGrupoEtnicoWithAggregatesFilter<$PrismaModel> | $Enums.GrupoEtnico
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGrupoEtnicoFilter<$PrismaModel>
    _max?: NestedEnumGrupoEtnicoFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumNivelEducativoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NivelEducativo | EnumNivelEducativoFieldRefInput<$PrismaModel>
    in?: $Enums.NivelEducativo[] | ListEnumNivelEducativoFieldRefInput<$PrismaModel>
    notIn?: $Enums.NivelEducativo[] | ListEnumNivelEducativoFieldRefInput<$PrismaModel>
    not?: NestedEnumNivelEducativoWithAggregatesFilter<$PrismaModel> | $Enums.NivelEducativo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNivelEducativoFilter<$PrismaModel>
    _max?: NestedEnumNivelEducativoFilter<$PrismaModel>
  }

  export type EnumTipoVinculacionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoVinculacion | EnumTipoVinculacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoVinculacion[] | ListEnumTipoVinculacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoVinculacion[] | ListEnumTipoVinculacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoVinculacionFilter<$PrismaModel> | $Enums.TipoVinculacion
  }

  export type RegistroSemilleroInnovacionCountOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    tipoVinculacion?: SortOrder
    nombreEntidadVinculacion?: SortOrder
    nivelEducativo?: SortOrder
    participacionPrevia?: SortOrder
    areasInteres?: SortOrder
    otrasAreas?: SortOrder
    tieneProyecto?: SortOrder
    descripcionProyecto?: SortOrder
    habilidades?: SortOrder
    disponibilidad?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroSemilleroInnovacionAvgOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type RegistroSemilleroInnovacionMaxOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    tipoVinculacion?: SortOrder
    nombreEntidadVinculacion?: SortOrder
    nivelEducativo?: SortOrder
    participacionPrevia?: SortOrder
    otrasAreas?: SortOrder
    tieneProyecto?: SortOrder
    descripcionProyecto?: SortOrder
    habilidades?: SortOrder
    disponibilidad?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroSemilleroInnovacionMinOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    tipoVinculacion?: SortOrder
    nombreEntidadVinculacion?: SortOrder
    nivelEducativo?: SortOrder
    participacionPrevia?: SortOrder
    otrasAreas?: SortOrder
    tieneProyecto?: SortOrder
    descripcionProyecto?: SortOrder
    habilidades?: SortOrder
    disponibilidad?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroSemilleroInnovacionSumOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type EnumTipoVinculacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoVinculacion | EnumTipoVinculacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoVinculacion[] | ListEnumTipoVinculacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoVinculacion[] | ListEnumTipoVinculacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoVinculacionWithAggregatesFilter<$PrismaModel> | $Enums.TipoVinculacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoVinculacionFilter<$PrismaModel>
    _max?: NestedEnumTipoVinculacionFilter<$PrismaModel>
  }

  export type RegistroTallerSteamCountOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    institucionEducativa?: SortOrder
    cursoGrado?: SortOrder
    direccion?: SortOrder
    nombreAcudiente?: SortOrder
    relacionNino?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    participacionPrevia?: SortOrder
    actividadesInteres?: SortOrder
    otrasActividades?: SortOrder
    disponibilidad?: SortOrder
    accesoComputadora?: SortOrder
    accesoInternet?: SortOrder
    motivacion?: SortOrder
    expectativa?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroTallerSteamAvgOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type RegistroTallerSteamMaxOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    institucionEducativa?: SortOrder
    cursoGrado?: SortOrder
    direccion?: SortOrder
    nombreAcudiente?: SortOrder
    relacionNino?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    participacionPrevia?: SortOrder
    otrasActividades?: SortOrder
    disponibilidad?: SortOrder
    accesoComputadora?: SortOrder
    accesoInternet?: SortOrder
    motivacion?: SortOrder
    expectativa?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroTallerSteamMinOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    institucionEducativa?: SortOrder
    cursoGrado?: SortOrder
    direccion?: SortOrder
    nombreAcudiente?: SortOrder
    relacionNino?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    participacionPrevia?: SortOrder
    otrasActividades?: SortOrder
    disponibilidad?: SortOrder
    accesoComputadora?: SortOrder
    accesoInternet?: SortOrder
    motivacion?: SortOrder
    expectativa?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroTallerSteamSumOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type RegistroSeguridadAlimentariaCountOrderByAggregateInput = {
    id?: SortOrder
    nombreResponsable?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefono?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    barrio?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    grupoEtnico?: SortOrder
    esAgricultor?: SortOrder
    tieneTierras?: SortOrder
    hectareas?: SortOrder
    pisoTermico?: SortOrder
    tieneCultivo?: SortOrder
    tiposCultivo?: SortOrder
    participacionPrevia?: SortOrder
    proyectosAnteriores?: SortOrder
    tieneRiego?: SortOrder
    tieneHerramientas?: SortOrder
    tiposHerramientas?: SortOrder
    tieneAsistenciaTecnica?: SortOrder
    motivacion?: SortOrder
    tiempoSemanal?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroSeguridadAlimentariaAvgOrderByAggregateInput = {
    id?: SortOrder
    hectareas?: SortOrder
  }

  export type RegistroSeguridadAlimentariaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombreResponsable?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefono?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    barrio?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    grupoEtnico?: SortOrder
    esAgricultor?: SortOrder
    tieneTierras?: SortOrder
    hectareas?: SortOrder
    pisoTermico?: SortOrder
    tieneCultivo?: SortOrder
    tiposCultivo?: SortOrder
    participacionPrevia?: SortOrder
    proyectosAnteriores?: SortOrder
    tieneRiego?: SortOrder
    tieneHerramientas?: SortOrder
    tiposHerramientas?: SortOrder
    tieneAsistenciaTecnica?: SortOrder
    motivacion?: SortOrder
    tiempoSemanal?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroSeguridadAlimentariaMinOrderByAggregateInput = {
    id?: SortOrder
    nombreResponsable?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefono?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    barrio?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    grupoEtnico?: SortOrder
    esAgricultor?: SortOrder
    tieneTierras?: SortOrder
    hectareas?: SortOrder
    pisoTermico?: SortOrder
    tieneCultivo?: SortOrder
    tiposCultivo?: SortOrder
    participacionPrevia?: SortOrder
    proyectosAnteriores?: SortOrder
    tieneRiego?: SortOrder
    tieneHerramientas?: SortOrder
    tiposHerramientas?: SortOrder
    tieneAsistenciaTecnica?: SortOrder
    motivacion?: SortOrder
    tiempoSemanal?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroSeguridadAlimentariaSumOrderByAggregateInput = {
    id?: SortOrder
    hectareas?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type RegistroRefuerzoEscolarCountOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    institucionEducativa?: SortOrder
    cursoGrado?: SortOrder
    direccion?: SortOrder
    nombreAcudiente?: SortOrder
    relacionNino?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    areasAyuda?: SortOrder
    otrasAreas?: SortOrder
    refuerzoPrevio?: SortOrder
    dificultadesAcademicas?: SortOrder
    disponibilidad?: SortOrder
    accesoMateriales?: SortOrder
    apoyoHabitos?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroRefuerzoEscolarAvgOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type RegistroRefuerzoEscolarMaxOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    institucionEducativa?: SortOrder
    cursoGrado?: SortOrder
    direccion?: SortOrder
    nombreAcudiente?: SortOrder
    relacionNino?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    otrasAreas?: SortOrder
    refuerzoPrevio?: SortOrder
    dificultadesAcademicas?: SortOrder
    disponibilidad?: SortOrder
    accesoMateriales?: SortOrder
    apoyoHabitos?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroRefuerzoEscolarMinOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    institucionEducativa?: SortOrder
    cursoGrado?: SortOrder
    direccion?: SortOrder
    nombreAcudiente?: SortOrder
    relacionNino?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    otrasAreas?: SortOrder
    refuerzoPrevio?: SortOrder
    dificultadesAcademicas?: SortOrder
    disponibilidad?: SortOrder
    accesoMateriales?: SortOrder
    apoyoHabitos?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroRefuerzoEscolarSumOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type RegistroSoftwareFactoryCountOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    modalidadVinculacion?: SortOrder
    institucionEducativa?: SortOrder
    programaAcademico?: SortOrder
    semestreNivel?: SortOrder
    tiempoDisponible?: SortOrder
    tecnologias?: SortOrder
    proyectosRealizados?: SortOrder
    areasInteres?: SortOrder
    otrasAreas?: SortOrder
    experienciaAgile?: SortOrder
    motivacion?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroSoftwareFactoryAvgOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type RegistroSoftwareFactoryMaxOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    modalidadVinculacion?: SortOrder
    institucionEducativa?: SortOrder
    programaAcademico?: SortOrder
    semestreNivel?: SortOrder
    tiempoDisponible?: SortOrder
    proyectosRealizados?: SortOrder
    otrasAreas?: SortOrder
    experienciaAgile?: SortOrder
    motivacion?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroSoftwareFactoryMinOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    modalidadVinculacion?: SortOrder
    institucionEducativa?: SortOrder
    programaAcademico?: SortOrder
    semestreNivel?: SortOrder
    tiempoDisponible?: SortOrder
    proyectosRealizados?: SortOrder
    otrasAreas?: SortOrder
    experienciaAgile?: SortOrder
    motivacion?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroSoftwareFactorySumOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type EnumTipoDisponibilidadFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoDisponibilidad | EnumTipoDisponibilidadFieldRefInput<$PrismaModel>
    in?: $Enums.TipoDisponibilidad[] | ListEnumTipoDisponibilidadFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoDisponibilidad[] | ListEnumTipoDisponibilidadFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoDisponibilidadFilter<$PrismaModel> | $Enums.TipoDisponibilidad
  }

  export type RegistroVoluntariadoCountOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    nivelEducativo?: SortOrder
    profesionOcupacion?: SortOrder
    disponibilidadTipo?: SortOrder
    diasEspecificos?: SortOrder
    horasDisponibles?: SortOrder
    areasInteres?: SortOrder
    otrasAreas?: SortOrder
    habilidades?: SortOrder
    fundacion?: SortOrder
    funcion?: SortOrder
    tiempo?: SortOrder
    motivacion?: SortOrder
    referencia1Nombre?: SortOrder
    referencia1Telefono?: SortOrder
    referencia2Nombre?: SortOrder
    referencia2Telefono?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroVoluntariadoAvgOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
    horasDisponibles?: SortOrder
  }

  export type RegistroVoluntariadoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    nivelEducativo?: SortOrder
    profesionOcupacion?: SortOrder
    disponibilidadTipo?: SortOrder
    diasEspecificos?: SortOrder
    horasDisponibles?: SortOrder
    otrasAreas?: SortOrder
    habilidades?: SortOrder
    fundacion?: SortOrder
    funcion?: SortOrder
    tiempo?: SortOrder
    motivacion?: SortOrder
    referencia1Nombre?: SortOrder
    referencia1Telefono?: SortOrder
    referencia2Nombre?: SortOrder
    referencia2Telefono?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroVoluntariadoMinOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    fechaNacimiento?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    nivelEducativo?: SortOrder
    profesionOcupacion?: SortOrder
    disponibilidadTipo?: SortOrder
    diasEspecificos?: SortOrder
    horasDisponibles?: SortOrder
    otrasAreas?: SortOrder
    habilidades?: SortOrder
    fundacion?: SortOrder
    funcion?: SortOrder
    tiempo?: SortOrder
    motivacion?: SortOrder
    referencia1Nombre?: SortOrder
    referencia1Telefono?: SortOrder
    referencia2Nombre?: SortOrder
    referencia2Telefono?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroVoluntariadoSumOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
    horasDisponibles?: SortOrder
  }

  export type EnumTipoDisponibilidadWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoDisponibilidad | EnumTipoDisponibilidadFieldRefInput<$PrismaModel>
    in?: $Enums.TipoDisponibilidad[] | ListEnumTipoDisponibilidadFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoDisponibilidad[] | ListEnumTipoDisponibilidadFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoDisponibilidadWithAggregatesFilter<$PrismaModel> | $Enums.TipoDisponibilidad
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoDisponibilidadFilter<$PrismaModel>
    _max?: NestedEnumTipoDisponibilidadFilter<$PrismaModel>
  }

  export type EnumAreaInteresCulturalFilter<$PrismaModel = never> = {
    equals?: $Enums.AreaInteresCultural | EnumAreaInteresCulturalFieldRefInput<$PrismaModel>
    in?: $Enums.AreaInteresCultural[] | ListEnumAreaInteresCulturalFieldRefInput<$PrismaModel>
    notIn?: $Enums.AreaInteresCultural[] | ListEnumAreaInteresCulturalFieldRefInput<$PrismaModel>
    not?: NestedEnumAreaInteresCulturalFilter<$PrismaModel> | $Enums.AreaInteresCultural
  }

  export type RegistroCulturalCountOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    documentoIdentidad?: SortOrder
    municipioDepartamento?: SortOrder
    nivelEducativo?: SortOrder
    ocupacion?: SortOrder
    areaInteresPrincipal?: SortOrder
    otraAreaInteres?: SortOrder
    formacionPrevia?: SortOrder
    detalleFormacion?: SortOrder
    perteneceGrupo?: SortOrder
    detalleGrupo?: SortOrder
    diasDisponibles?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroCulturalAvgOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type RegistroCulturalMaxOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    documentoIdentidad?: SortOrder
    municipioDepartamento?: SortOrder
    nivelEducativo?: SortOrder
    ocupacion?: SortOrder
    areaInteresPrincipal?: SortOrder
    otraAreaInteres?: SortOrder
    formacionPrevia?: SortOrder
    detalleFormacion?: SortOrder
    perteneceGrupo?: SortOrder
    detalleGrupo?: SortOrder
    diasDisponibles?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroCulturalMinOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    documentoIdentidad?: SortOrder
    municipioDepartamento?: SortOrder
    nivelEducativo?: SortOrder
    ocupacion?: SortOrder
    areaInteresPrincipal?: SortOrder
    otraAreaInteres?: SortOrder
    formacionPrevia?: SortOrder
    detalleFormacion?: SortOrder
    perteneceGrupo?: SortOrder
    detalleGrupo?: SortOrder
    diasDisponibles?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroCulturalSumOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type EnumAreaInteresCulturalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AreaInteresCultural | EnumAreaInteresCulturalFieldRefInput<$PrismaModel>
    in?: $Enums.AreaInteresCultural[] | ListEnumAreaInteresCulturalFieldRefInput<$PrismaModel>
    notIn?: $Enums.AreaInteresCultural[] | ListEnumAreaInteresCulturalFieldRefInput<$PrismaModel>
    not?: NestedEnumAreaInteresCulturalWithAggregatesFilter<$PrismaModel> | $Enums.AreaInteresCultural
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAreaInteresCulturalFilter<$PrismaModel>
    _max?: NestedEnumAreaInteresCulturalFilter<$PrismaModel>
  }

  export type EnumGeneroFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel>
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    not?: NestedEnumGeneroFilter<$PrismaModel> | $Enums.Genero
  }

  export type RegistroEconomiaPlateadaCountOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    genero?: SortOrder
    esPensionado?: SortOrder
    actividadEconomica?: SortOrder
    trabajoAnterior?: SortOrder
    sectorTrabajo?: SortOrder
    ingresosAdicionales?: SortOrder
    fuenteIngresos?: SortOrder
    areasInteres?: SortOrder
    otrasAreas?: SortOrder
    habilidades?: SortOrder
    tiempoSemanal?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroEconomiaPlateadaAvgOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type RegistroEconomiaPlateadaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    genero?: SortOrder
    esPensionado?: SortOrder
    actividadEconomica?: SortOrder
    trabajoAnterior?: SortOrder
    sectorTrabajo?: SortOrder
    ingresosAdicionales?: SortOrder
    fuenteIngresos?: SortOrder
    otrasAreas?: SortOrder
    habilidades?: SortOrder
    tiempoSemanal?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroEconomiaPlateadaMinOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    fechaNacimiento?: SortOrder
    comuna?: SortOrder
    estratoSocial?: SortOrder
    edad?: SortOrder
    grupoEtnico?: SortOrder
    telefonoContacto?: SortOrder
    correoElectronico?: SortOrder
    direccion?: SortOrder
    tipoDocumento?: SortOrder
    numeroDocumento?: SortOrder
    genero?: SortOrder
    esPensionado?: SortOrder
    actividadEconomica?: SortOrder
    trabajoAnterior?: SortOrder
    sectorTrabajo?: SortOrder
    ingresosAdicionales?: SortOrder
    fuenteIngresos?: SortOrder
    otrasAreas?: SortOrder
    habilidades?: SortOrder
    tiempoSemanal?: SortOrder
    motivacion?: SortOrder
    expectativas?: SortOrder
    aceptaTerminos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegistroEconomiaPlateadaSumOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type EnumGeneroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel>
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    not?: NestedEnumGeneroWithAggregatesFilter<$PrismaModel> | $Enums.Genero
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGeneroFilter<$PrismaModel>
    _max?: NestedEnumGeneroFilter<$PrismaModel>
  }

  export type PostCreateNestedManyWithoutAuthorInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type RoleCreateNestedOneWithoutUsersInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput
    connect?: RoleWhereUniqueInput
  }

  export type PostUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type PostUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutAuthorInput | PostUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutAuthorInput | PostUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: PostUpdateManyWithWhereWithoutAuthorInput | PostUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type RoleUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput
    upsert?: RoleUpsertWithoutUsersInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutUsersInput, RoleUpdateWithoutUsersInput>, RoleUncheckedUpdateWithoutUsersInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type PostUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutAuthorInput | PostUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutAuthorInput | PostUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: PostUpdateManyWithWhereWithoutAuthorInput | PostUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type UsersCreateNestedManyWithoutRoleInput = {
    create?: XOR<UsersCreateWithoutRoleInput, UsersUncheckedCreateWithoutRoleInput> | UsersCreateWithoutRoleInput[] | UsersUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UsersCreateOrConnectWithoutRoleInput | UsersCreateOrConnectWithoutRoleInput[]
    createMany?: UsersCreateManyRoleInputEnvelope
    connect?: UsersWhereUniqueInput | UsersWhereUniqueInput[]
  }

  export type UsersUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<UsersCreateWithoutRoleInput, UsersUncheckedCreateWithoutRoleInput> | UsersCreateWithoutRoleInput[] | UsersUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UsersCreateOrConnectWithoutRoleInput | UsersCreateOrConnectWithoutRoleInput[]
    createMany?: UsersCreateManyRoleInputEnvelope
    connect?: UsersWhereUniqueInput | UsersWhereUniqueInput[]
  }

  export type UsersUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UsersCreateWithoutRoleInput, UsersUncheckedCreateWithoutRoleInput> | UsersCreateWithoutRoleInput[] | UsersUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UsersCreateOrConnectWithoutRoleInput | UsersCreateOrConnectWithoutRoleInput[]
    upsert?: UsersUpsertWithWhereUniqueWithoutRoleInput | UsersUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UsersCreateManyRoleInputEnvelope
    set?: UsersWhereUniqueInput | UsersWhereUniqueInput[]
    disconnect?: UsersWhereUniqueInput | UsersWhereUniqueInput[]
    delete?: UsersWhereUniqueInput | UsersWhereUniqueInput[]
    connect?: UsersWhereUniqueInput | UsersWhereUniqueInput[]
    update?: UsersUpdateWithWhereUniqueWithoutRoleInput | UsersUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UsersUpdateManyWithWhereWithoutRoleInput | UsersUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UsersScalarWhereInput | UsersScalarWhereInput[]
  }

  export type UsersUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UsersCreateWithoutRoleInput, UsersUncheckedCreateWithoutRoleInput> | UsersCreateWithoutRoleInput[] | UsersUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UsersCreateOrConnectWithoutRoleInput | UsersCreateOrConnectWithoutRoleInput[]
    upsert?: UsersUpsertWithWhereUniqueWithoutRoleInput | UsersUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UsersCreateManyRoleInputEnvelope
    set?: UsersWhereUniqueInput | UsersWhereUniqueInput[]
    disconnect?: UsersWhereUniqueInput | UsersWhereUniqueInput[]
    delete?: UsersWhereUniqueInput | UsersWhereUniqueInput[]
    connect?: UsersWhereUniqueInput | UsersWhereUniqueInput[]
    update?: UsersUpdateWithWhereUniqueWithoutRoleInput | UsersUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UsersUpdateManyWithWhereWithoutRoleInput | UsersUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UsersScalarWhereInput | UsersScalarWhereInput[]
  }

  export type PostCreateimagesInput = {
    set: string[]
  }

  export type UsersCreateNestedOneWithoutPostsInput = {
    create?: XOR<UsersCreateWithoutPostsInput, UsersUncheckedCreateWithoutPostsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutPostsInput
    connect?: UsersWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type PostUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type UsersUpdateOneRequiredWithoutPostsNestedInput = {
    create?: XOR<UsersCreateWithoutPostsInput, UsersUncheckedCreateWithoutPostsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutPostsInput
    upsert?: UsersUpsertWithoutPostsInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutPostsInput, UsersUpdateWithoutPostsInput>, UsersUncheckedUpdateWithoutPostsInput>
  }

  export type RegistroMujerVulnerableCreateareasApoyoInput = {
    set: $Enums.AreaApoyo[]
  }

  export type EnumTipoDocumentoFieldUpdateOperationsInput = {
    set?: $Enums.TipoDocumento
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EnumEstratoSocialFieldUpdateOperationsInput = {
    set?: $Enums.EstratoSocial
  }

  export type EnumGrupoEtnicoFieldUpdateOperationsInput = {
    set?: $Enums.GrupoEtnico
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type EnumNivelEducativoFieldUpdateOperationsInput = {
    set?: $Enums.NivelEducativo
  }

  export type RegistroMujerVulnerableUpdateareasApoyoInput = {
    set?: $Enums.AreaApoyo[]
    push?: $Enums.AreaApoyo | $Enums.AreaApoyo[]
  }

  export type RegistroSemilleroInnovacionCreateareasInteresInput = {
    set: string[]
  }

  export type EnumTipoVinculacionFieldUpdateOperationsInput = {
    set?: $Enums.TipoVinculacion
  }

  export type RegistroSemilleroInnovacionUpdateareasInteresInput = {
    set?: string[]
    push?: string | string[]
  }

  export type RegistroTallerSteamCreateactividadesInteresInput = {
    set: string[]
  }

  export type RegistroTallerSteamUpdateactividadesInteresInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type RegistroRefuerzoEscolarCreateareasAyudaInput = {
    set: string[]
  }

  export type RegistroRefuerzoEscolarUpdateareasAyudaInput = {
    set?: string[]
    push?: string | string[]
  }

  export type RegistroSoftwareFactoryCreatetecnologiasInput = {
    set: string[]
  }

  export type RegistroSoftwareFactoryCreateareasInteresInput = {
    set: string[]
  }

  export type RegistroSoftwareFactoryUpdatetecnologiasInput = {
    set?: string[]
    push?: string | string[]
  }

  export type RegistroSoftwareFactoryUpdateareasInteresInput = {
    set?: string[]
    push?: string | string[]
  }

  export type RegistroVoluntariadoCreateareasInteresInput = {
    set: string[]
  }

  export type EnumTipoDisponibilidadFieldUpdateOperationsInput = {
    set?: $Enums.TipoDisponibilidad
  }

  export type RegistroVoluntariadoUpdateareasInteresInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EnumAreaInteresCulturalFieldUpdateOperationsInput = {
    set?: $Enums.AreaInteresCultural
  }

  export type RegistroEconomiaPlateadaCreateareasInteresInput = {
    set: string[]
  }

  export type EnumGeneroFieldUpdateOperationsInput = {
    set?: $Enums.Genero
  }

  export type RegistroEconomiaPlateadaUpdateareasInteresInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumTipoDocumentoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoDocumento | EnumTipoDocumentoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoDocumento[] | ListEnumTipoDocumentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoDocumento[] | ListEnumTipoDocumentoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoDocumentoFilter<$PrismaModel> | $Enums.TipoDocumento
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumEstratoSocialFilter<$PrismaModel = never> = {
    equals?: $Enums.EstratoSocial | EnumEstratoSocialFieldRefInput<$PrismaModel>
    in?: $Enums.EstratoSocial[] | ListEnumEstratoSocialFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstratoSocial[] | ListEnumEstratoSocialFieldRefInput<$PrismaModel>
    not?: NestedEnumEstratoSocialFilter<$PrismaModel> | $Enums.EstratoSocial
  }

  export type NestedEnumGrupoEtnicoFilter<$PrismaModel = never> = {
    equals?: $Enums.GrupoEtnico | EnumGrupoEtnicoFieldRefInput<$PrismaModel>
    in?: $Enums.GrupoEtnico[] | ListEnumGrupoEtnicoFieldRefInput<$PrismaModel>
    notIn?: $Enums.GrupoEtnico[] | ListEnumGrupoEtnicoFieldRefInput<$PrismaModel>
    not?: NestedEnumGrupoEtnicoFilter<$PrismaModel> | $Enums.GrupoEtnico
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumNivelEducativoFilter<$PrismaModel = never> = {
    equals?: $Enums.NivelEducativo | EnumNivelEducativoFieldRefInput<$PrismaModel>
    in?: $Enums.NivelEducativo[] | ListEnumNivelEducativoFieldRefInput<$PrismaModel>
    notIn?: $Enums.NivelEducativo[] | ListEnumNivelEducativoFieldRefInput<$PrismaModel>
    not?: NestedEnumNivelEducativoFilter<$PrismaModel> | $Enums.NivelEducativo
  }

  export type NestedEnumTipoDocumentoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoDocumento | EnumTipoDocumentoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoDocumento[] | ListEnumTipoDocumentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoDocumento[] | ListEnumTipoDocumentoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoDocumentoWithAggregatesFilter<$PrismaModel> | $Enums.TipoDocumento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoDocumentoFilter<$PrismaModel>
    _max?: NestedEnumTipoDocumentoFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumEstratoSocialWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstratoSocial | EnumEstratoSocialFieldRefInput<$PrismaModel>
    in?: $Enums.EstratoSocial[] | ListEnumEstratoSocialFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstratoSocial[] | ListEnumEstratoSocialFieldRefInput<$PrismaModel>
    not?: NestedEnumEstratoSocialWithAggregatesFilter<$PrismaModel> | $Enums.EstratoSocial
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstratoSocialFilter<$PrismaModel>
    _max?: NestedEnumEstratoSocialFilter<$PrismaModel>
  }

  export type NestedEnumGrupoEtnicoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GrupoEtnico | EnumGrupoEtnicoFieldRefInput<$PrismaModel>
    in?: $Enums.GrupoEtnico[] | ListEnumGrupoEtnicoFieldRefInput<$PrismaModel>
    notIn?: $Enums.GrupoEtnico[] | ListEnumGrupoEtnicoFieldRefInput<$PrismaModel>
    not?: NestedEnumGrupoEtnicoWithAggregatesFilter<$PrismaModel> | $Enums.GrupoEtnico
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGrupoEtnicoFilter<$PrismaModel>
    _max?: NestedEnumGrupoEtnicoFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumNivelEducativoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NivelEducativo | EnumNivelEducativoFieldRefInput<$PrismaModel>
    in?: $Enums.NivelEducativo[] | ListEnumNivelEducativoFieldRefInput<$PrismaModel>
    notIn?: $Enums.NivelEducativo[] | ListEnumNivelEducativoFieldRefInput<$PrismaModel>
    not?: NestedEnumNivelEducativoWithAggregatesFilter<$PrismaModel> | $Enums.NivelEducativo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNivelEducativoFilter<$PrismaModel>
    _max?: NestedEnumNivelEducativoFilter<$PrismaModel>
  }

  export type NestedEnumTipoVinculacionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoVinculacion | EnumTipoVinculacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoVinculacion[] | ListEnumTipoVinculacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoVinculacion[] | ListEnumTipoVinculacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoVinculacionFilter<$PrismaModel> | $Enums.TipoVinculacion
  }

  export type NestedEnumTipoVinculacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoVinculacion | EnumTipoVinculacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoVinculacion[] | ListEnumTipoVinculacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoVinculacion[] | ListEnumTipoVinculacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoVinculacionWithAggregatesFilter<$PrismaModel> | $Enums.TipoVinculacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoVinculacionFilter<$PrismaModel>
    _max?: NestedEnumTipoVinculacionFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumTipoDisponibilidadFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoDisponibilidad | EnumTipoDisponibilidadFieldRefInput<$PrismaModel>
    in?: $Enums.TipoDisponibilidad[] | ListEnumTipoDisponibilidadFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoDisponibilidad[] | ListEnumTipoDisponibilidadFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoDisponibilidadFilter<$PrismaModel> | $Enums.TipoDisponibilidad
  }

  export type NestedEnumTipoDisponibilidadWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoDisponibilidad | EnumTipoDisponibilidadFieldRefInput<$PrismaModel>
    in?: $Enums.TipoDisponibilidad[] | ListEnumTipoDisponibilidadFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoDisponibilidad[] | ListEnumTipoDisponibilidadFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoDisponibilidadWithAggregatesFilter<$PrismaModel> | $Enums.TipoDisponibilidad
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoDisponibilidadFilter<$PrismaModel>
    _max?: NestedEnumTipoDisponibilidadFilter<$PrismaModel>
  }

  export type NestedEnumAreaInteresCulturalFilter<$PrismaModel = never> = {
    equals?: $Enums.AreaInteresCultural | EnumAreaInteresCulturalFieldRefInput<$PrismaModel>
    in?: $Enums.AreaInteresCultural[] | ListEnumAreaInteresCulturalFieldRefInput<$PrismaModel>
    notIn?: $Enums.AreaInteresCultural[] | ListEnumAreaInteresCulturalFieldRefInput<$PrismaModel>
    not?: NestedEnumAreaInteresCulturalFilter<$PrismaModel> | $Enums.AreaInteresCultural
  }

  export type NestedEnumAreaInteresCulturalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AreaInteresCultural | EnumAreaInteresCulturalFieldRefInput<$PrismaModel>
    in?: $Enums.AreaInteresCultural[] | ListEnumAreaInteresCulturalFieldRefInput<$PrismaModel>
    notIn?: $Enums.AreaInteresCultural[] | ListEnumAreaInteresCulturalFieldRefInput<$PrismaModel>
    not?: NestedEnumAreaInteresCulturalWithAggregatesFilter<$PrismaModel> | $Enums.AreaInteresCultural
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAreaInteresCulturalFilter<$PrismaModel>
    _max?: NestedEnumAreaInteresCulturalFilter<$PrismaModel>
  }

  export type NestedEnumGeneroFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel>
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    not?: NestedEnumGeneroFilter<$PrismaModel> | $Enums.Genero
  }

  export type NestedEnumGeneroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel>
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    not?: NestedEnumGeneroWithAggregatesFilter<$PrismaModel> | $Enums.Genero
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGeneroFilter<$PrismaModel>
    _max?: NestedEnumGeneroFilter<$PrismaModel>
  }

  export type PostCreateWithoutAuthorInput = {
    title: string
    content?: string | null
    images?: PostCreateimagesInput | string[]
  }

  export type PostUncheckedCreateWithoutAuthorInput = {
    id?: number
    title: string
    content?: string | null
    images?: PostCreateimagesInput | string[]
  }

  export type PostCreateOrConnectWithoutAuthorInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput>
  }

  export type PostCreateManyAuthorInputEnvelope = {
    data: PostCreateManyAuthorInput | PostCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutUsersInput = {
    name: string
  }

  export type RoleUncheckedCreateWithoutUsersInput = {
    id?: number
    name: string
  }

  export type RoleCreateOrConnectWithoutUsersInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
  }

  export type PostUpsertWithWhereUniqueWithoutAuthorInput = {
    where: PostWhereUniqueInput
    update: XOR<PostUpdateWithoutAuthorInput, PostUncheckedUpdateWithoutAuthorInput>
    create: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput>
  }

  export type PostUpdateWithWhereUniqueWithoutAuthorInput = {
    where: PostWhereUniqueInput
    data: XOR<PostUpdateWithoutAuthorInput, PostUncheckedUpdateWithoutAuthorInput>
  }

  export type PostUpdateManyWithWhereWithoutAuthorInput = {
    where: PostScalarWhereInput
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyWithoutAuthorInput>
  }

  export type PostScalarWhereInput = {
    AND?: PostScalarWhereInput | PostScalarWhereInput[]
    OR?: PostScalarWhereInput[]
    NOT?: PostScalarWhereInput | PostScalarWhereInput[]
    id?: IntFilter<"Post"> | number
    title?: StringFilter<"Post"> | string
    content?: StringNullableFilter<"Post"> | string | null
    authorId?: IntFilter<"Post"> | number
    images?: StringNullableListFilter<"Post">
  }

  export type RoleUpsertWithoutUsersInput = {
    update: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutUsersInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
  }

  export type RoleUpdateWithoutUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type RoleUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type UsersCreateWithoutRoleInput = {
    name: string
    lastName: string
    email: string
    password: string
    posts?: PostCreateNestedManyWithoutAuthorInput
  }

  export type UsersUncheckedCreateWithoutRoleInput = {
    id?: number
    name: string
    lastName: string
    email: string
    password: string
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
  }

  export type UsersCreateOrConnectWithoutRoleInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutRoleInput, UsersUncheckedCreateWithoutRoleInput>
  }

  export type UsersCreateManyRoleInputEnvelope = {
    data: UsersCreateManyRoleInput | UsersCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type UsersUpsertWithWhereUniqueWithoutRoleInput = {
    where: UsersWhereUniqueInput
    update: XOR<UsersUpdateWithoutRoleInput, UsersUncheckedUpdateWithoutRoleInput>
    create: XOR<UsersCreateWithoutRoleInput, UsersUncheckedCreateWithoutRoleInput>
  }

  export type UsersUpdateWithWhereUniqueWithoutRoleInput = {
    where: UsersWhereUniqueInput
    data: XOR<UsersUpdateWithoutRoleInput, UsersUncheckedUpdateWithoutRoleInput>
  }

  export type UsersUpdateManyWithWhereWithoutRoleInput = {
    where: UsersScalarWhereInput
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyWithoutRoleInput>
  }

  export type UsersScalarWhereInput = {
    AND?: UsersScalarWhereInput | UsersScalarWhereInput[]
    OR?: UsersScalarWhereInput[]
    NOT?: UsersScalarWhereInput | UsersScalarWhereInput[]
    id?: IntFilter<"Users"> | number
    name?: StringFilter<"Users"> | string
    lastName?: StringFilter<"Users"> | string
    email?: StringFilter<"Users"> | string
    password?: StringFilter<"Users"> | string
    rolId?: IntFilter<"Users"> | number
  }

  export type UsersCreateWithoutPostsInput = {
    name: string
    lastName: string
    email: string
    password: string
    role: RoleCreateNestedOneWithoutUsersInput
  }

  export type UsersUncheckedCreateWithoutPostsInput = {
    id?: number
    name: string
    lastName: string
    email: string
    password: string
    rolId: number
  }

  export type UsersCreateOrConnectWithoutPostsInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutPostsInput, UsersUncheckedCreateWithoutPostsInput>
  }

  export type UsersUpsertWithoutPostsInput = {
    update: XOR<UsersUpdateWithoutPostsInput, UsersUncheckedUpdateWithoutPostsInput>
    create: XOR<UsersCreateWithoutPostsInput, UsersUncheckedCreateWithoutPostsInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutPostsInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutPostsInput, UsersUncheckedUpdateWithoutPostsInput>
  }

  export type UsersUpdateWithoutPostsInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutPostsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
  }

  export type PostCreateManyAuthorInput = {
    id?: number
    title: string
    content?: string | null
    images?: PostCreateimagesInput | string[]
  }

  export type PostUpdateWithoutAuthorInput = {
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    images?: PostUpdateimagesInput | string[]
  }

  export type PostUncheckedUpdateWithoutAuthorInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    images?: PostUpdateimagesInput | string[]
  }

  export type PostUncheckedUpdateManyWithoutAuthorInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    images?: PostUpdateimagesInput | string[]
  }

  export type UsersCreateManyRoleInput = {
    id?: number
    name: string
    lastName: string
    email: string
    password: string
  }

  export type UsersUpdateWithoutRoleInput = {
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    posts?: PostUpdateManyWithoutAuthorNestedInput
  }

  export type UsersUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
  }

  export type UsersUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}
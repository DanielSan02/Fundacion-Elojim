
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  lastName: 'lastName',
  email: 'email',
  password: 'password',
  rolId: 'rolId'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  authorId: 'authorId',
  images: 'images'
};

exports.Prisma.RegistroMujerVulnerableScalarFieldEnum = {
  id: 'id',
  nombreCompleto: 'nombreCompleto',
  tipoDocumento: 'tipoDocumento',
  numeroDocumento: 'numeroDocumento',
  fechaNacimiento: 'fechaNacimiento',
  comuna: 'comuna',
  estratoSocial: 'estratoSocial',
  edad: 'edad',
  grupoEtnico: 'grupoEtnico',
  telefonoContacto: 'telefonoContacto',
  correoElectronico: 'correoElectronico',
  direccion: 'direccion',
  esMadreCabeza: 'esMadreCabeza',
  numeroHijos: 'numeroHijos',
  conviveConOtrasPersonas: 'conviveConOtrasPersonas',
  conQuienesConvive: 'conQuienesConvive',
  nivelEducativo: 'nivelEducativo',
  tieneEmpleo: 'tieneEmpleo',
  actividadLaboral: 'actividadLaboral',
  fuenteIngresos: 'fuenteIngresos',
  areasApoyo: 'areasApoyo',
  otrasAreas: 'otrasAreas',
  tieneApoyoGubernamental: 'tieneApoyoGubernamental',
  tipoApoyoGubernamental: 'tipoApoyoGubernamental',
  motivacion: 'motivacion',
  tiempoSemanalDisponible: 'tiempoSemanalDisponible',
  expectativas: 'expectativas',
  aceptaTerminos: 'aceptaTerminos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RegistroSemilleroInnovacionScalarFieldEnum = {
  id: 'id',
  nombreCompleto: 'nombreCompleto',
  tipoDocumento: 'tipoDocumento',
  numeroDocumento: 'numeroDocumento',
  fechaNacimiento: 'fechaNacimiento',
  comuna: 'comuna',
  estratoSocial: 'estratoSocial',
  edad: 'edad',
  grupoEtnico: 'grupoEtnico',
  telefonoContacto: 'telefonoContacto',
  correoElectronico: 'correoElectronico',
  direccion: 'direccion',
  tipoVinculacion: 'tipoVinculacion',
  nombreEntidadVinculacion: 'nombreEntidadVinculacion',
  nivelEducativo: 'nivelEducativo',
  participacionPrevia: 'participacionPrevia',
  areasInteres: 'areasInteres',
  otrasAreas: 'otrasAreas',
  tieneProyecto: 'tieneProyecto',
  descripcionProyecto: 'descripcionProyecto',
  habilidades: 'habilidades',
  disponibilidad: 'disponibilidad',
  motivacion: 'motivacion',
  expectativas: 'expectativas',
  aceptaTerminos: 'aceptaTerminos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RegistroTallerSteamScalarFieldEnum = {
  id: 'id',
  nombreCompleto: 'nombreCompleto',
  fechaNacimiento: 'fechaNacimiento',
  comuna: 'comuna',
  estratoSocial: 'estratoSocial',
  edad: 'edad',
  grupoEtnico: 'grupoEtnico',
  institucionEducativa: 'institucionEducativa',
  cursoGrado: 'cursoGrado',
  direccion: 'direccion',
  nombreAcudiente: 'nombreAcudiente',
  relacionNino: 'relacionNino',
  telefonoContacto: 'telefonoContacto',
  correoElectronico: 'correoElectronico',
  participacionPrevia: 'participacionPrevia',
  actividadesInteres: 'actividadesInteres',
  otrasActividades: 'otrasActividades',
  disponibilidad: 'disponibilidad',
  accesoComputadora: 'accesoComputadora',
  accesoInternet: 'accesoInternet',
  motivacion: 'motivacion',
  expectativa: 'expectativa',
  aceptaTerminos: 'aceptaTerminos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RegistroSeguridadAlimentariaScalarFieldEnum = {
  id: 'id',
  nombreResponsable: 'nombreResponsable',
  tipoDocumento: 'tipoDocumento',
  numeroDocumento: 'numeroDocumento',
  fechaNacimiento: 'fechaNacimiento',
  telefono: 'telefono',
  correoElectronico: 'correoElectronico',
  direccion: 'direccion',
  barrio: 'barrio',
  comuna: 'comuna',
  estratoSocial: 'estratoSocial',
  grupoEtnico: 'grupoEtnico',
  esAgricultor: 'esAgricultor',
  tieneTierras: 'tieneTierras',
  hectareas: 'hectareas',
  pisoTermico: 'pisoTermico',
  tieneCultivo: 'tieneCultivo',
  tiposCultivo: 'tiposCultivo',
  participacionPrevia: 'participacionPrevia',
  proyectosAnteriores: 'proyectosAnteriores',
  tieneRiego: 'tieneRiego',
  tieneHerramientas: 'tieneHerramientas',
  tiposHerramientas: 'tiposHerramientas',
  tieneAsistenciaTecnica: 'tieneAsistenciaTecnica',
  motivacion: 'motivacion',
  tiempoSemanal: 'tiempoSemanal',
  expectativas: 'expectativas',
  aceptaTerminos: 'aceptaTerminos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RegistroRefuerzoEscolarScalarFieldEnum = {
  id: 'id',
  nombreCompleto: 'nombreCompleto',
  fechaNacimiento: 'fechaNacimiento',
  comuna: 'comuna',
  estratoSocial: 'estratoSocial',
  edad: 'edad',
  grupoEtnico: 'grupoEtnico',
  institucionEducativa: 'institucionEducativa',
  cursoGrado: 'cursoGrado',
  direccion: 'direccion',
  nombreAcudiente: 'nombreAcudiente',
  relacionNino: 'relacionNino',
  telefonoContacto: 'telefonoContacto',
  correoElectronico: 'correoElectronico',
  areasAyuda: 'areasAyuda',
  otrasAreas: 'otrasAreas',
  refuerzoPrevio: 'refuerzoPrevio',
  dificultadesAcademicas: 'dificultadesAcademicas',
  disponibilidad: 'disponibilidad',
  accesoMateriales: 'accesoMateriales',
  apoyoHabitos: 'apoyoHabitos',
  motivacion: 'motivacion',
  expectativas: 'expectativas',
  aceptaTerminos: 'aceptaTerminos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RegistroSoftwareFactoryScalarFieldEnum = {
  id: 'id',
  nombreCompleto: 'nombreCompleto',
  tipoDocumento: 'tipoDocumento',
  numeroDocumento: 'numeroDocumento',
  fechaNacimiento: 'fechaNacimiento',
  telefonoContacto: 'telefonoContacto',
  correoElectronico: 'correoElectronico',
  direccion: 'direccion',
  comuna: 'comuna',
  estratoSocial: 'estratoSocial',
  edad: 'edad',
  grupoEtnico: 'grupoEtnico',
  modalidadVinculacion: 'modalidadVinculacion',
  institucionEducativa: 'institucionEducativa',
  programaAcademico: 'programaAcademico',
  semestreNivel: 'semestreNivel',
  tiempoDisponible: 'tiempoDisponible',
  tecnologias: 'tecnologias',
  proyectosRealizados: 'proyectosRealizados',
  areasInteres: 'areasInteres',
  otrasAreas: 'otrasAreas',
  experienciaAgile: 'experienciaAgile',
  motivacion: 'motivacion',
  aceptaTerminos: 'aceptaTerminos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RegistroVoluntariadoScalarFieldEnum = {
  id: 'id',
  nombreCompleto: 'nombreCompleto',
  tipoDocumento: 'tipoDocumento',
  numeroDocumento: 'numeroDocumento',
  fechaNacimiento: 'fechaNacimiento',
  telefonoContacto: 'telefonoContacto',
  correoElectronico: 'correoElectronico',
  direccion: 'direccion',
  comuna: 'comuna',
  estratoSocial: 'estratoSocial',
  edad: 'edad',
  grupoEtnico: 'grupoEtnico',
  nivelEducativo: 'nivelEducativo',
  profesionOcupacion: 'profesionOcupacion',
  disponibilidadTipo: 'disponibilidadTipo',
  diasEspecificos: 'diasEspecificos',
  horasDisponibles: 'horasDisponibles',
  areasInteres: 'areasInteres',
  otrasAreas: 'otrasAreas',
  habilidades: 'habilidades',
  fundacion: 'fundacion',
  funcion: 'funcion',
  tiempo: 'tiempo',
  motivacion: 'motivacion',
  referencia1Nombre: 'referencia1Nombre',
  referencia1Telefono: 'referencia1Telefono',
  referencia2Nombre: 'referencia2Nombre',
  referencia2Telefono: 'referencia2Telefono',
  aceptaTerminos: 'aceptaTerminos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RegistroCulturalScalarFieldEnum = {
  id: 'id',
  nombreCompleto: 'nombreCompleto',
  fechaNacimiento: 'fechaNacimiento',
  comuna: 'comuna',
  estratoSocial: 'estratoSocial',
  edad: 'edad',
  grupoEtnico: 'grupoEtnico',
  telefonoContacto: 'telefonoContacto',
  correoElectronico: 'correoElectronico',
  direccion: 'direccion',
  documentoIdentidad: 'documentoIdentidad',
  municipioDepartamento: 'municipioDepartamento',
  nivelEducativo: 'nivelEducativo',
  ocupacion: 'ocupacion',
  areaInteresPrincipal: 'areaInteresPrincipal',
  otraAreaInteres: 'otraAreaInteres',
  formacionPrevia: 'formacionPrevia',
  detalleFormacion: 'detalleFormacion',
  perteneceGrupo: 'perteneceGrupo',
  detalleGrupo: 'detalleGrupo',
  diasDisponibles: 'diasDisponibles',
  motivacion: 'motivacion',
  expectativas: 'expectativas',
  aceptaTerminos: 'aceptaTerminos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RegistroEconomiaPlateadaScalarFieldEnum = {
  id: 'id',
  nombreCompleto: 'nombreCompleto',
  fechaNacimiento: 'fechaNacimiento',
  comuna: 'comuna',
  estratoSocial: 'estratoSocial',
  edad: 'edad',
  grupoEtnico: 'grupoEtnico',
  telefonoContacto: 'telefonoContacto',
  correoElectronico: 'correoElectronico',
  direccion: 'direccion',
  tipoDocumento: 'tipoDocumento',
  numeroDocumento: 'numeroDocumento',
  genero: 'genero',
  esPensionado: 'esPensionado',
  actividadEconomica: 'actividadEconomica',
  trabajoAnterior: 'trabajoAnterior',
  sectorTrabajo: 'sectorTrabajo',
  ingresosAdicionales: 'ingresosAdicionales',
  fuenteIngresos: 'fuenteIngresos',
  areasInteres: 'areasInteres',
  otrasAreas: 'otrasAreas',
  habilidades: 'habilidades',
  tiempoSemanal: 'tiempoSemanal',
  motivacion: 'motivacion',
  expectativas: 'expectativas',
  aceptaTerminos: 'aceptaTerminos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.TipoDocumento = exports.$Enums.TipoDocumento = {
  CC: 'CC',
  TI: 'TI',
  CE: 'CE',
  Pasaporte: 'Pasaporte'
};

exports.EstratoSocial = exports.$Enums.EstratoSocial = {
  E1: 'E1',
  E2: 'E2',
  E3: 'E3',
  E4: 'E4',
  E5: 'E5',
  E6: 'E6'
};

exports.GrupoEtnico = exports.$Enums.GrupoEtnico = {
  Ninguno: 'Ninguno',
  Afrodescendiente: 'Afrodescendiente',
  Indigena: 'Indigena',
  Raizal: 'Raizal',
  Rom_Gitano: 'Rom_Gitano',
  Palenquero: 'Palenquero',
  Otro: 'Otro'
};

exports.NivelEducativo = exports.$Enums.NivelEducativo = {
  Primaria: 'Primaria',
  Secundaria: 'Secundaria',
  Tecnica_Tecnologica: 'Tecnica_Tecnologica',
  Universitaria: 'Universitaria',
  Especializacion: 'Especializacion',
  Maestria: 'Maestria',
  Doctorado: 'Doctorado',
  Ninguno: 'Ninguno'
};

exports.AreaApoyo = exports.$Enums.AreaApoyo = {
  CAPACITACION_Y_EMPLEO: 'CAPACITACION_Y_EMPLEO',
  EMPRENDIMIENTO: 'EMPRENDIMIENTO',
  EDUCACION: 'EDUCACION',
  SALUD_Y_BIENESTAR: 'SALUD_Y_BIENESTAR',
  APOYO_PSICOLOGICO_Y_SOCIAL: 'APOYO_PSICOLOGICO_Y_SOCIAL',
  VIVIENDA_Y_SUBSIDIOS: 'VIVIENDA_Y_SUBSIDIOS',
  OTRAS: 'OTRAS'
};

exports.TipoVinculacion = exports.$Enums.TipoVinculacion = {
  INSTITUCION_EDUCATIVA: 'INSTITUCION_EDUCATIVA',
  COMUNIDAD: 'COMUNIDAD'
};

exports.TipoDisponibilidad = exports.$Enums.TipoDisponibilidad = {
  TIEMPO_COMPLETO: 'TIEMPO_COMPLETO',
  TIEMPO_PARCIAL: 'TIEMPO_PARCIAL',
  FINES_DE_SEMANA: 'FINES_DE_SEMANA',
  DIAS_ESPECIFICOS: 'DIAS_ESPECIFICOS'
};

exports.AreaInteresCultural = exports.$Enums.AreaInteresCultural = {
  Musica: 'Musica',
  Danza: 'Danza',
  Manualidades: 'Manualidades',
  Maquillaje: 'Maquillaje',
  Dibujo: 'Dibujo',
  Otro: 'Otro'
};

exports.Genero = exports.$Enums.Genero = {
  FEMENINO: 'FEMENINO',
  MASCULINO: 'MASCULINO'
};

exports.Prisma.ModelName = {
  Users: 'Users',
  Role: 'Role',
  Post: 'Post',
  RegistroMujerVulnerable: 'RegistroMujerVulnerable',
  RegistroSemilleroInnovacion: 'RegistroSemilleroInnovacion',
  RegistroTallerSteam: 'RegistroTallerSteam',
  RegistroSeguridadAlimentaria: 'RegistroSeguridadAlimentaria',
  RegistroRefuerzoEscolar: 'RegistroRefuerzoEscolar',
  RegistroSoftwareFactory: 'RegistroSoftwareFactory',
  RegistroVoluntariado: 'RegistroVoluntariado',
  RegistroCultural: 'RegistroCultural',
  RegistroEconomiaPlateada: 'RegistroEconomiaPlateada'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)

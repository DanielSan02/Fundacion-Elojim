
generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/.prisma/client" 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ==================== ENUMS ====================

enum TipoVinculacion {
  INSTITUCION_EDUCATIVA
  COMUNIDAD
}

enum NivelEducativo {
  Primaria
  Secundaria
  Tecnica_Tecnologica
  Universitaria
  Especializacion
  Maestria
  Doctorado
  Ninguno
}

enum EstratoSocial {
  E1
  E2
  E3
  E4
  E5
  E6
}

enum GrupoEtnico {
  Ninguno
  Afrodescendiente
  Indigena
  Raizal
  Rom_Gitano
  Palenquero
  Otro
}

enum TipoDocumento {
  CC
  TI
  CE
  Pasaporte
}

enum AreaApoyo {
  CAPACITACION_Y_EMPLEO
  EMPRENDIMIENTO
  EDUCACION
  SALUD_Y_BIENESTAR
  APOYO_PSICOLOGICO_Y_SOCIAL
  VIVIENDA_Y_SUBSIDIOS
  OTRAS
}


enum TipoDisponibilidad {
  TIEMPO_COMPLETO
  TIEMPO_PARCIAL
  FINES_DE_SEMANA
  DIAS_ESPECIFICOS
}


// ==================== MODELOS ====================

model Users {
  id       Int     @id @default(autoincrement())
  name     String  @db.VarChar(20)
  lastName String  @db.VarChar(20)
  email    String  @unique
  password String  @db.VarChar(100)  // Aumenté a 100 caracteres para seguridad
  posts    Post[]
  rolId    Int
  role     Role    @relation(fields: [rolId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("users")
}

model Role {
  id      Int     @id @default(autoincrement())
  name    String  @db.VarChar(50)
  users   Users[]

  @@map("roles")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  authorId  Int
  author    Users     @relation(fields: [authorId], references: [id])
  images    String[]

  @@map("posts")
}


model RegistroMujerVulnerable {
  id                     Int       @id @default(autoincrement())
  
  // ===== Datos Personales =====
  nombreCompleto         String    @db.VarChar(100)
  tipoDocumento          TipoDocumento
  numeroDocumento        String    @db.VarChar(20) @unique
  fechaNacimiento        DateTime
  comuna                 String    @db.VarChar(50)
  estratoSocial          EstratoSocial
  edad                   Int
  grupoEtnico            GrupoEtnico
  telefonoContacto       String    @db.VarChar(15)
  correoElectronico      String?   @db.VarChar(100)
  direccion              String    @db.VarChar(30)

  // ===== Situación Socioeconómica =====
  esMadreCabeza          Boolean   @default(false)
  numeroHijos            Int       @default(0)
  conviveConOtrasPersonas Boolean  @default(false)
  conQuienesConvive      String?   @db.VarChar(100)
  nivelEducativo         NivelEducativo
  tieneEmpleo            Boolean   @default(false)
  actividadLaboral       String?   @db.VarChar(100)
  fuenteIngresos         String?   @db.VarChar(100)

  // ===== Intereses y Necesidades =====
  areasApoyo             AreaApoyo[] 
  otrasAreas             String?   @db.VarChar(100)
  tieneApoyoGubernamental Boolean  @default(false)
  tipoApoyoGubernamental String?   @db.VarChar(100)

  // ===== Motivación y Disponibilidad =====
  motivacion             String    @db.Text
  tiempoSemanalDisponible String   @db.VarChar(50) // Ej: "5 horas semanales"
  expectativas           String    @db.Text

  // ===== Auditoría =====
  aceptaTerminos         Boolean   @default(false)
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt()

  @@map("registros_mujer_vulnerable")
}


model RegistroSemilleroInnovacion {
  
  id                     Int       @id @default(autoincrement())

  // ===== Datos Personales =====
  nombreCompleto         String    @db.VarChar(100)
  tipoDocumento          TipoDocumento
  numeroDocumento        String    @db.VarChar(20) @unique
  fechaNacimiento        DateTime
  comuna                 String    @db.VarChar(50)
  estratoSocial          EstratoSocial
  edad                   Int
  grupoEtnico            GrupoEtnico
  telefonoContacto       String    @db.VarChar(15)
  correoElectronico      String?   @db.VarChar(100)
  direccion              String    @db.VarChar(30)

  // ===== Información de Vinculación =====
  tipoVinculacion          TipoVinculacion
  nombreEntidadVinculacion String
  nivelEducativo           NivelEducativo

  
  // ===== Participación e intereses =====

  participacionPrevia Boolean     @default(false)

  areasInteres        String[]
  otrasAreas          String?
  tieneProyecto       Boolean     @default(false)
  descripcionProyecto String?     @db.VarChar(100)

  habilidades         String      @db.VarChar(100)
  disponibilidad      String      @db.VarChar(100)
  motivacion          String      @db.VarChar(100)
  expectativas        String      @db.VarChar(100)

  // ===== Auditoría =====
  aceptaTerminos      Boolean
  createdAt           DateTime @default(now())
  updatedAt              DateTime  @updatedAt()

  @@map("registros_semillero_innovacion")
}


model RegistroTallerSteam {
  id                     Int       @id @default(autoincrement())

  // ===== Datos del Niño/a =====
  nombreCompleto         String    @db.VarChar(100)
  fechaNacimiento        DateTime
  comuna                 String    @db.VarChar(50)
  estratoSocial          EstratoSocial
  edad                   Int
  grupoEtnico            GrupoEtnico
  institucionEducativa   String    @db.VarChar(100)
  cursoGrado             String    @db.VarChar(50)
  direccion              String    @db.VarChar(100)

  // ===== Datos del Acudiente =====
  nombreAcudiente        String    @db.VarChar(100)
  relacionNino           String    @db.VarChar(50)
  telefonoContacto       String    @db.VarChar(15)
  correoElectronico      String?   @db.VarChar(100)

  // ===== Intereses y Conocimientos =====
  participacionPrevia    Boolean   @default(false)
  actividadesInteres     String[]
  otrasActividades       String?  @db.VarChar(100)

  // ===== Disponibilidad y Acceso =====
  disponibilidad         String    @db.VarChar(100)
  accesoComputadora      Boolean   @default(false)
  accesoInternet         Boolean   @default(false)

  // ===== Motivación =====
  motivacion             String    @db.Text
  expectativa            String    @db.Text

  // ===== Autorización =====
  aceptaTerminos         Boolean   @default(false)

  // ===== Auditoría =====
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt()

  @@map("registros_taller_steam")
}


model RegistroSeguridadAlimentaria {
  id                    Int       @id @default(autoincrement())

  // ===== Datos del Hogar =====
  nombreResponsable     String    @db.VarChar(100)
  tipoDocumento         TipoDocumento
  numeroDocumento       String    @db.VarChar(20)
  fechaNacimiento       DateTime
  telefono              String    @db.VarChar(15)
  correoElectronico     String?   @db.VarChar(100)
  direccion             String    @db.VarChar(100)
  barrio                String    @db.VarChar(100)
  comuna                String    @db.VarChar(50)
  estratoSocial         EstratoSocial
  grupoEtnico           GrupoEtnico

   // ===== Situación Productiva y Agrícola =====
  esAgricultor         Boolean   @default(false)
  tieneTierras         Boolean   @default(false)
  hectareas            Float?    // solo si tieneTierras == true
  pisoTermico          String?   @db.VarChar(50) // solo si tieneTierras == true
  tieneCultivo         Boolean   @default(false)
  tiposCultivo         String?   @db.VarChar(100) // solo si tieneCultivo == true
  participacionPrevia  Boolean   @default(false)
  proyectosAnteriores  String?   @db.VarChar(100) // solo si participacionPrevia == true

  // ===== Infraestructura y Recursos =====
  tieneRiego           Boolean   @default(false)
  tieneHerramientas    Boolean   @default(false)
  tiposHerramientas    String?   @db.VarChar(100) // solo si tieneHerramientas == true
  tieneAsistenciaTecnica Boolean @default(false)

  // ===== Motivación y Disponibilidad =====
  motivacion           String    @db.Text
  tiempoSemanal        String    @db.VarChar(100)
  expectativas         String    @db.Text

  // ===== Autorización =====
  aceptaTerminos       Boolean   @default(false)

  // ===== Auditoría =====
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt()

  @@map("registros_seguridad_alimentaria")
}

model RegistroRefuerzoEscolar {
  id                   Int       @id @default(autoincrement())

  // ===== Datos del Niño/a =====
  nombreCompleto       String    @db.VarChar(100)
  fechaNacimiento      DateTime
  comuna               String    @db.VarChar(50)
  estratoSocial        EstratoSocial
  edad                 Int
  grupoEtnico          GrupoEtnico
  institucionEducativa String    @db.VarChar(100)
  cursoGrado           String    @db.VarChar(50)
  direccion            String    @db.VarChar(100)

  // ===== Datos del Acudiente =====
  nombreAcudiente      String    @db.VarChar(100)
  relacionNino         String    @db.VarChar(50)
  telefonoContacto     String    @db.VarChar(15)
  correoElectronico    String?   @db.VarChar(100)

  // ===== Información Académica =====
  areasAyuda           String[]  @db.VarChar(50) // arreglo de strings
  otrasAreas           String?   @db.VarChar(100)
  refuerzoPrevio       Boolean   @default(false)
  dificultadesAcademicas String @db.Text

  // ===== Disponibilidad y Recursos =====
  disponibilidad       String    @db.VarChar(100)
  accesoMateriales     Boolean   @default(false)
  apoyoHabitos         Boolean   @default(false)

  // ===== Motivación y Expectativas =====
  motivacion           String    @db.Text
  expectativas         String    @db.Text

  // ===== Autorización =====
  aceptaTerminos       Boolean   @default(false)

  // ===== Auditoría =====
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt()

  @@map("registros_refuerzo_escolar")
}


model RegistroSoftwareFactory {
  id                   Int       @id @default(autoincrement())

  // ===== Datos Personales =====
  nombreCompleto       String    @db.VarChar(100)
  tipoDocumento        TipoDocumento
  numeroDocumento      String    @db.VarChar(20) @unique
  fechaNacimiento      DateTime
  telefonoContacto     String    @db.VarChar(15)
  correoElectronico    String?   @db.VarChar(100)
  direccion            String    @db.VarChar(100)
  comuna               String    @db.VarChar(50)
  estratoSocial        EstratoSocial
  edad                 Int
  grupoEtnico          GrupoEtnico

  // ===== Información de Vinculación =====
  modalidadVinculacion String    @db.VarChar(50) // Ej: "pasantia"
  institucionEducativa String    @db.VarChar(100)
  programaAcademico    String    @db.VarChar(100)
  semestreNivel        String    @db.VarChar(50)
  tiempoDisponible     String    @db.VarChar(100)

  // ===== Experiencia y Habilidades =====
  tecnologias          String[]  // Ej: "Desarrollo web", "Bases de datos", etc.
  proyectosRealizados  String?   @db.Text

  // ===== Motivación e Intereses =====
  areasInteres         String[]
  otrasAreas           String?   @db.VarChar(100)
  experienciaAgile     String?   @db.Text
  motivacion           String    @db.Text

  // ===== Autorización =====
  aceptaTerminos       Boolean   @default(false)

  // ===== Auditoría =====
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt()

  @@map("registros_software_factory")
}



model RegistroVoluntariado {
  id                   Int       @id @default(autoincrement())

  // ===== Datos Personales =====
  nombreCompleto       String    @db.VarChar(100)
  tipoDocumento        TipoDocumento
  numeroDocumento      String    @db.VarChar(20) @unique
  fechaNacimiento      DateTime
  telefonoContacto     String    @db.VarChar(15)
  correoElectronico    String?   @db.VarChar(100)
  direccion            String    @db.VarChar(100)
  comuna               String    @db.VarChar(50)
  estratoSocial        EstratoSocial
  edad                 Int
  grupoEtnico          GrupoEtnico
  nivelEducativo       NivelEducativo
  profesionOcupacion   String    @db.VarChar(20)

  // ===== Información Disponibilidad =====

  disponibilidadTipo     TipoDisponibilidad
  diasEspecificos        String?
  horasDisponibles       Int


  // ===== Intereses y Habilidades =====
  areasInteres         String[]
  otrasAreas           String?   @db.VarChar(100)
  habilidades          String    @db.Text

  // ===== Experiencia previa =====
  fundacion            String    @db.VarChar(25)
  funcion              String    @db.VarChar(25)
  tiempo               String    @db.VarChar(25)
  motivacion           String    @db.Text


  // ===== Referencias Personales =====

  referencia1Nombre    String?   @db.VarChar(25)
  referencia1Telefono  String?   @db.VarChar(25)
  referencia2Nombre    String?   @db.VarChar(25)
  referencia2Telefono  String?   @db.VarChar(25)

  // ===== Autorización =====
  aceptaTerminos       Boolean   @default(false)

  // ===== Auditoría =====
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt()

  @@map("registros_voluntariado")
}


enum AreaInteresCultural {
  Musica
  Danza
  Manualidades
  Maquillaje
  Dibujo
  Otro
}

model RegistroCultural {
  id                   Int       @id @default(autoincrement())

  // ===== Datos Personales =====
  nombreCompleto        String           @db.VarChar(100)
  fechaNacimiento       DateTime
  comuna                String           @db.VarChar(50)
  estratoSocial         EstratoSocial
  edad                  Int
  grupoEtnico           GrupoEtnico
  telefonoContacto      String           @db.VarChar(15)
  correoElectronico     String?          @db.VarChar(100)
  direccion             String           @db.VarChar(100)
  documentoIdentidad    String           @db.VarChar(20) @unique
  municipioDepartamento String           @db.VarChar(20)

  // ===== Datos Socioeconomicos =====

  nivelEducativo        NivelEducativo
  ocupacion             String           @db.VarChar(20)

  // ====== Areas Intereses =====     

  areaInteresPrincipal AreaInteresCultural
  otraAreaInteres      String?   @db.VarChar(100)

  // ======== Experiencias =========  

  formacionPrevia      Boolean   @default(false)
  detalleFormacion     String?   @db.VarChar(100)    
  perteneceGrupo       Boolean   @default(false)
  detalleGrupo         String?   @db.VarChar(100)


  // ========== Disponibilidad ==========

  diasDisponibles      String    @db.Text
  motivacion           String    @db.Text
  expectativas         String    @db.Text


  // ===== Autorización =====

  aceptaTerminos       Boolean   @default(false)

  // ===== Auditoría =====
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt()

  @@map("registros_cultural")
}


enum Genero {
  FEMENINO
  MASCULINO
}

model RegistroEconomiaPlateada {
  id                   Int       @id @default(autoincrement())

  // ===== Datos Personales =====
  nombreCompleto        String           @db.VarChar(100)
  fechaNacimiento       DateTime
  comuna                String           @db.VarChar(50)
  estratoSocial         EstratoSocial
  edad                  Int
  grupoEtnico           GrupoEtnico
  telefonoContacto      String           @db.VarChar(15)
  correoElectronico     String?          @db.VarChar(100)
  direccion             String           @db.VarChar(100)
  tipoDocumento         TipoDocumento
  numeroDocumento       String           @db.VarChar(20) @unique
  genero                Genero

  // ===== Situacion Economica =====

  esPensionado          Boolean          @default(false)
  actividadEconomica    String?          @db.VarChar(100)
  trabajoAnterior       Boolean          @default(false)
  sectorTrabajo         String?          @db.VarChar(100)
  ingresosAdicionales   Boolean          @default(false)
  fuenteIngresos        String?          @db.VarChar(100)   
  

  // ====== Intereses y Habilidades =====     

  areasInteres          String[]
  otrasAreas            String?          @db.VarChar(100)
  habilidades           String           @db.Text

  // ========== Disponibilidad ==========

  tiempoSemanal        String            @db.VarChar(100)
  motivacion           String            @db.Text
  expectativas         String            @db.Text


  // ===== Autorización =====

  aceptaTerminos       Boolean   @default(false)

  // ===== Auditoría =====
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt()

  @@map("registros_economia_plateada")
}
